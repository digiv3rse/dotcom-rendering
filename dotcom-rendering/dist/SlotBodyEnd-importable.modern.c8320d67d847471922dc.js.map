{"version":3,"file":"SlotBodyEnd-importable.modern.c8320d67d847471922dc.js","mappings":"oeAeA,MAAMA,GAAiBC,EAAAA,EAAAA,KAAGA,KAIpBC,EAAiB,iBAqEjBC,EAAsC,I,IAAA,eAC3CC,EAAc,KACdC,EAAI,YACJC,EAAW,SACXC,GACY,EACZ,MAAOC,EAAaC,IAAWC,EAAAA,EAAAA,GAAY,CAC1CC,WAAY,QACZC,UAAW,EACXC,UAAU,IAGLC,GAAUC,EAAAA,EAAAA,QAAO,OAEvBC,EAAAA,EAAAA,IAAQ,MACPC,EAAAA,EAAAA,IAAqB,CACpBC,UAAW,CACVC,cAAejB,EACfkB,GAAIf,EAAKgB,cAAcC,kBAExBC,OAAQ,UACP,GACA,CAAClB,EAAKgB,cAAeP,EAAQU,WAEhCC,EAAAA,EAAAA,YAAU,KACLjB,IACHH,EAAKqB,0BAGLT,EAAAA,EAAAA,IAAqB,CACpBC,UAAW,CACVC,cAAejB,EACfkB,GAAIf,EAAKgB,cAAcC,kBAExBC,OAAQ,SAEV,GACE,CAACf,EAAaH,IAEjB,MAAMsB,EAAgBtB,EAAKgB,cAAcM,cACzC,OAAKA,GAGJ,SAACC,MAAAA,CAAIC,IAAKpB,EAASR,IAAKD,E,UACvB,SAAC4B,MAAAA,CAAIC,IAAKf,E,UACT,SAACV,EAAAA,CACAuB,cAAeA,EACfG,kBAAmBzB,EAAKgB,cACxBU,sBAAuBC,MAAOC,UACvBC,MAAM,GAAY,OAAT3B,EAAS,yBAAwB,CAC/C4B,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CACpBlB,GAAIa,EACJM,YAAY,IAEbC,YAAa,WACZ,EAEHlC,YAAaA,EACbmC,wBAAyBpC,EAAKoC,wBAC9BxB,qBAAsBA,EAAAA,SApBC,I,EA2BfyB,EAAkB,I,IAAA,KAAErC,EAAI,YAAEC,EAAW,SAAEC,GAAsB,EACzE,MAAOH,EAAgBuC,IACtBC,EAAAA,EAAAA,YAcD,OAZAnB,EAAAA,EAAAA,YAAU,KACT,kEAGEoB,MAAMC,IACNH,GAAkB,IAAMG,EAAOC,4BAA2B,IAE1DC,OAAOC,GACPC,OAAOC,SAASC,QAAQC,OAAOC,YAAYL,EAAO,kBAElD,KAGF,qB,SACE7C,GACA,SAACD,EAAAA,CACAC,eAAgBA,EAChBC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,KAGX,SAACqB,MAAAA,CAAAA,I,wsBCvIL,MAAM5B,GAAiBC,EAAAA,EAAAA,KAAGA,K,IAoCvBsD,EAGAA,EAlBH,MAmFaC,EAAqB,I,IAAA,OACjCV,EAAM,WACNW,EAAU,0BACVC,EAAyB,MACzBC,GACY,EACZ,MAAOC,EAAMC,IAAWjB,EAAAA,EAAAA,YAiCxB,OA3BAnB,EAAAA,EAAAA,YAAU,MACTqC,EAAAA,EAAAA,KAEA,MAAMC,GAAaC,EAAAA,EAAAA,GAAS,6BAC5BD,EAAWE,QAEXf,OACEgB,yBAAyBpB,EAAOqB,KAChCtB,MAAMuB,IACNL,EAAWM,MACXR,GAAQ,IAAMO,EAAWE,mBAAkB,IAE3CtB,OAAOC,IACP,MAAMsB,EACLtB,aAAiBuB,MACd,4BAA0C,OAAdvB,EAAMwB,SAClC,gBAEJC,QAAQC,IAAIJ,GACZrB,OAAOC,SAASC,QAAQC,OAAOC,YAC9B,IAAIkB,MAAMD,GACV,aAEA,GAED,SAEUK,IAAThB,GAEF,SAAChC,MAAAA,CAAI3B,IAAKD,E,UAET,SAAC4D,G,EAAAA,EAAAA,CAAAA,EACId,EAAO+B,O,EAAK,CAChBpB,WAAYA,EACZxC,qBAAsBA,EAAAA,GACtB6D,QAvCY,KACfC,EAAAA,IAAAA,oBAAwB,EAuCrBrB,0BAA2BA,EAC3BC,MAAOA,G,8VAMJ,K,OAAI,E,wHClKZ,MAAMqB,EACLC,IAEO,CACNC,UAAW,CACV9D,GAAI,wBACJ+D,QAAS,IDqD4BnD,OACvCuB,I,IAwBuC6B,EAtBvC,MAAM,WACLC,EAAU,wBACVC,EAAuB,cACvBC,EAAa,wBACbC,EAAuB,SACvBjF,EAAQ,MACRoD,GACGJ,EAEJ,GAAI+B,GAA2BC,EAE9B,OAAOE,QAAQC,QAAQ,CAAEC,MAAM,KAEf3B,EAAAA,EAAAA,GAAS,2BACjBC,QAET,MAAM2B,OAtDc5D,OAAOuB,IAA6C,CACxEsC,SAAU,CACTC,YAAa5C,OAAOC,SAAS4C,OAAOC,MAAMC,WAC1CC,WAAY,eACZC,WAAY,MACZC,YAAalD,OAAOmD,SAASC,OAASpD,OAAOmD,SAASE,UAEvDC,UAAW,CACVC,YAAalD,EAAKkD,YAClBC,UAAWnD,EAAKmD,UAChBpB,wBAAyB/B,EAAK+B,wBAC9BqB,gBAAiBpD,EAAKoD,gBACtBpB,cAAehC,EAAKgC,cACpBqB,KAAMrD,EAAKqD,KACXC,uBAAuBC,EAAAA,EAAAA,IACP,QAAfvD,EAAAA,EAAK8B,kBAAL9B,IAAAA,GAAAA,GAEDwD,wBAAwBA,EAAAA,EAAAA,IACR,QAAfxD,EAAAA,EAAK8B,kBAAL9B,IAAAA,GAAAA,GAEDyD,4BAA4BC,EAAAA,EAAAA,MAC5BC,aAAaC,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,OAC5BC,2BAA4B9D,EAAK+D,kBACjCC,gCAAiCA,EAAAA,EAAAA,MACjCC,MAAOC,QAAOC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,YAAaC,eAAe,KAC5DtH,YAAaiD,EAAKjD,YAClBuH,eAAgBC,EAAAA,GAChB3D,IAAKjB,OAAOmD,SAASC,OAASpD,OAAOmD,SAASE,SAC9CwB,gBAAkBC,EAAAA,EAAAA,MACfzE,EAAKwE,eACLnD,EACHS,WAAY9B,EAAK8B,cAuBiB4C,CAAa1E,GAM1CT,EAA8C,QAAbsC,SAJI8C,EAAAA,EAAAA,IAC1C1C,EACAI,IAE+CrC,YAAT6B,IAAAA,OAAAA,EAAAA,EAAetC,OAEtD,OAAKA,EAUE,CACN6C,MAAM,EACNtF,KAAM,CACLyC,SACAW,WAV6D4B,GAC5D8C,EAAAA,EAAAA,IAA0B5H,QAC1BqE,EASDlB,gCAPsC0E,EAAAA,EAAAA,MAQtCzE,UAfM,CAAEgC,MAAM,EAiBf,EClGgB0C,CAAyBpD,GACxCU,KAAOtF,GAAuB,KACtB,SAACmD,E,sUAAiBA,CAAAA,CAAAA,EAAKnD,KAGhCiI,cAAe,OAIXC,EAAuB,CAC5BC,EACAlI,EACAC,EACAkG,EACAgC,EACA7B,KAEO,CACN1B,UAAW,CACV9D,GAAI,aACJ+D,QAAS,IFpCoBnD,OAC/BwG,EACAC,EACAhC,EACAG,KAEA,GAAkC,gBAA9BH,EAAYiC,cACf,MAAO,CAAE/C,MAAM,GAGhB,MAAMgD,GAAkBC,EAAAA,EAAAA,KACxB,GAAID,EACH,MAAO,CACNhD,MAAM,EACNtF,KAAMsI,GAIR,IAAIE,EAAAA,EAAAA,GAAwBjC,GAC3B,MAAO,CAAEjB,MAAM,GAGhB,IACC,MAAMlB,QAAgB+D,EAAcM,0BACnCL,GAGD,OAAIhE,EAAQsE,OACJ,CACNpD,MAAM,EACNtF,KAAM,CACLgB,cAAeoD,EAAQsE,OACvBrH,uBAAwB,KACvB+C,EAAQuE,eAAe,EAExBvG,wBAA0BwG,IACzBxE,EAAQyE,eAAeD,EAAiB,IAMrC,CAAEtD,MAAM,EAGhB,CAFE,MAAOwD,GACR,MAAO,CAAExD,MAAM,EAChB,GERGyD,CACCZ,EACAC,EACAhC,EACAG,GAEFjB,KAAOtF,GAAc,KAEnB,SAACqC,EAAcA,CACdrC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,KAId+H,cAAe,MAIJe,EAAe,I,IAAA,YAC3B5C,EAAW,YACX6C,EAAW,UACX5C,EAAS,wBACTpB,EAAuB,gBACvBqB,EAAe,cACfpB,EAAa,KACbqB,EAAI,wBACJpB,EAAuB,SACvBjF,EAAQ,MACRoD,EAAK,OACL4F,EAAM,WACNC,GACO,EACP,MAAM,cAAEhB,IAAkBiB,EAAAA,EAAAA,GAASlJ,IAE5BD,EAAaoJ,IAAkB9G,EAAAA,EAAAA,YAChCyC,KAAeqC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,OAAQC,eAAe,IACxDG,GAAYL,EAAAA,EAAAA,GAAU,CAAEC,KAAM,OAAQC,eAAe,KACpD+B,EAAcC,IAAmBhH,EAAAA,EAAAA,UACvC,OAEM0E,EAAmBuC,IACzBjH,EAAAA,EAAAA,YAgED,OA9DAnB,EAAAA,EAAAA,YAAU,MAERqI,EAAAA,EAAAA,KACEjH,MAAMkH,IACNL,EAAeK,QAAAA,EAAM,GAAG,IAExB/G,OAAOmG,GACPzE,QAAQzB,MAAM,+BAAyC,OAAV+G,OAAOb,MAG5C,GACT,KAEH1H,EAAAA,EAAAA,YAAU,KACToI,GACCI,EAAAA,EAAAA,GAAiBV,EAAQC,GAAY3G,MACnCqH,GAAWA,aAAAA,EAAAA,EAAQ7C,uB,GAGpB,CAACkC,EAAQC,KAEZxI,EAAAA,EAAAA,IAAQ,KACP,MAAMmJ,EAAoBnF,EAA6B,CACtDK,aACA/E,cACAmG,cACAC,YACApB,0BACAqB,kBACApB,gBACAqB,OACApB,0BACAjF,WACAoD,QACA2D,kBAAmBA,EAGnBS,UAAWA,QAAAA,OAAanD,IAanBwF,EAAyB,CAC9BC,WAAY,CATK9B,EACjBC,EACAlI,EACAC,EACAkG,EAPgD,CAChD6D,QAAShB,GAQT1C,GAGwBuD,GACxBxC,KAAM,gBAGP4C,EAAAA,EAAAA,GAAYH,GACVvH,MAAM2H,GAA8BZ,EAAgBY,KACpDxH,OAAOmG,GACPzE,QAAQzB,MAAM,oCAA8C,OAAV+G,OAAOb,MAAAA,GAEzD,CAAC9D,EAAY/E,EAAakI,EAAelB,IAEvB,OAAjBqC,GAEF,SAAC/H,MAAAA,CAAIR,GAAG,gB,UACP,SAACuI,EAAAA,CAAAA,KAKG,IAAI,C","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd/BrazeEpic.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd/ReaderRevenueEpic.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd.importable.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { BrazeEndOfArticleComponent } from '@guardian/braze-components/end-of-article';\nimport type {\n\tBrazeArticleContext,\n\tBrazeMessagesInterface,\n} from '@guardian/braze-components/logic';\nimport { useEffect, useRef, useState } from 'react';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getBrazeMetaFromUrlFragment } from '../../lib/braze/forceBrazeMessage';\nimport type { CanShowResult } from '../../lib/messagePicker';\nimport { useIsInView } from '../../lib/useIsInView';\nimport { useOnce } from '../../lib/useOnce';\nimport { suppressForTaylorReport } from '../../lib/braze/taylorReport';\nimport { TagType } from '../../../types/tag';\n\nconst wrapperMargins = css`\n\tmargin: 18px 0;\n`;\n\nconst COMPONENT_TYPE = 'RETENTION_EPIC';\n\ntype Meta = {\n\tdataFromBraze: { [key: string]: string };\n\tlogImpressionWithBraze: () => void;\n\tlogButtonClickWithBraze: (id: number) => void;\n};\n\ntype EpicConfig = {\n\tmeta: Meta;\n\tcountryCode: string;\n\tidApiUrl: string;\n};\n\nexport const canShowBrazeEpic = async (\n\tbrazeMessages: BrazeMessagesInterface,\n\tbrazeArticleContext: BrazeArticleContext,\n\tcontentType: string,\n\ttags: TagType[],\n): Promise<CanShowResult<Meta>> => {\n\tif (contentType.toLowerCase() === 'interactive') {\n\t\treturn { show: false };\n\t}\n\n\tconst forcedBrazeMeta = getBrazeMetaFromUrlFragment();\n\tif (forcedBrazeMeta) {\n\t\treturn {\n\t\t\tshow: true,\n\t\t\tmeta: forcedBrazeMeta,\n\t\t};\n\t}\n\n\tif (suppressForTaylorReport(tags)) {\n\t\treturn { show: false };\n\t}\n\n\ttry {\n\t\tconst message = await brazeMessages.getMessageForEndOfArticle(\n\t\t\tbrazeArticleContext,\n\t\t);\n\n\t\tif (message.extras) {\n\t\t\treturn {\n\t\t\t\tshow: true,\n\t\t\t\tmeta: {\n\t\t\t\t\tdataFromBraze: message.extras,\n\t\t\t\t\tlogImpressionWithBraze: () => {\n\t\t\t\t\t\tmessage.logImpression();\n\t\t\t\t\t},\n\t\t\t\t\tlogButtonClickWithBraze: (internalButtonId: number) => {\n\t\t\t\t\t\tmessage.logButtonClick(internalButtonId);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn { show: false };\n\t} catch (e) {\n\t\treturn { show: false };\n\t}\n};\n\ntype InnerProps = {\n\tmeta: Meta;\n\tcountryCode: string;\n\tBrazeComponent: typeof BrazeEndOfArticleComponent;\n\tidApiUrl: string;\n};\n\nconst BrazeEpicWithSatisfiedDependencies = ({\n\tBrazeComponent,\n\tmeta,\n\tcountryCode,\n\tidApiUrl,\n}: InnerProps) => {\n\tconst [hasBeenSeen, setNode] = useIsInView({\n\t\trootMargin: '-18px',\n\t\tthreshold: 0,\n\t\tdebounce: true,\n\t});\n\n\tconst epicRef = useRef(null);\n\n\tuseOnce(() => {\n\t\tsubmitComponentEvent({\n\t\t\tcomponent: {\n\t\t\t\tcomponentType: COMPONENT_TYPE,\n\t\t\t\tid: meta.dataFromBraze.ophanComponentId,\n\t\t\t},\n\t\t\taction: 'INSERT',\n\t\t});\n\t}, [meta.dataFromBraze, epicRef.current]);\n\n\tuseEffect(() => {\n\t\tif (hasBeenSeen) {\n\t\t\tmeta.logImpressionWithBraze();\n\n\t\t\t// Log VIEW event with Ophan\n\t\t\tsubmitComponentEvent({\n\t\t\t\tcomponent: {\n\t\t\t\t\tcomponentType: COMPONENT_TYPE,\n\t\t\t\t\tid: meta.dataFromBraze.ophanComponentId,\n\t\t\t\t},\n\t\t\t\taction: 'VIEW',\n\t\t\t});\n\t\t}\n\t}, [hasBeenSeen, meta]);\n\n\tconst componentName = meta.dataFromBraze.componentName;\n\tif (!componentName) return null;\n\n\treturn (\n\t\t<div ref={setNode} css={wrapperMargins}>\n\t\t\t<div ref={epicRef}>\n\t\t\t\t<BrazeComponent\n\t\t\t\t\tcomponentName={componentName}\n\t\t\t\t\tbrazeMessageProps={meta.dataFromBraze}\n\t\t\t\t\tsubscribeToNewsletter={async (newsletterId) => {\n\t\t\t\t\t\tawait fetch(`${idApiUrl}/users/me/newsletters`, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\tid: newsletterId,\n\t\t\t\t\t\t\t\tsubscribed: true,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcredentials: 'include',\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tcountryCode={countryCode}\n\t\t\t\t\tlogButtonClickWithBraze={meta.logButtonClickWithBraze}\n\t\t\t\t\tsubmitComponentEvent={submitComponentEvent}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const MaybeBrazeEpic = ({ meta, countryCode, idApiUrl }: EpicConfig) => {\n\tconst [BrazeComponent, setBrazeComponent] =\n\t\tuseState<typeof BrazeEndOfArticleComponent>();\n\n\tuseEffect(() => {\n\t\timport(\n\t\t\t/* webpackChunkName: \"guardian-braze-components-end-of-article\" */ '@guardian/braze-components/end-of-article'\n\t\t)\n\t\t\t.then((module) => {\n\t\t\t\tsetBrazeComponent(() => module.BrazeEndOfArticleComponent);\n\t\t\t})\n\t\t\t.catch((error) =>\n\t\t\t\twindow.guardian.modules.sentry.reportError(error, 'braze-epic'),\n\t\t\t);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{BrazeComponent ? (\n\t\t\t\t<BrazeEpicWithSatisfiedDependencies\n\t\t\t\t\tBrazeComponent={BrazeComponent}\n\t\t\t\t\tmeta={meta}\n\t\t\t\t\tcountryCode={countryCode}\n\t\t\t\t\tidApiUrl={idApiUrl}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div />\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { cmp } from '@guardian/consent-management-platform';\nimport type { OphanComponentEvent } from '@guardian/libs';\nimport { getCookie, storage } from '@guardian/libs';\nimport { getEpic, getEpicViewLog } from '@guardian/support-dotcom-components';\nimport type {\n\tEpicPayload,\n\tModuleData,\n\tModuleDataResponse,\n\tWeeklyArticleHistory,\n} from '@guardian/support-dotcom-components/dist/dotcom/src/types';\nimport { useEffect, useState } from 'react';\nimport type { TagType } from '../../../types/tag';\nimport { initPerf } from '../../browser/initPerf';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport {\n\tgetLastOneOffContributionTimestamp,\n\thasCmpConsentForArticleCount,\n\thasCmpConsentForBrowserId,\n\thasOptedOutOfArticleCount,\n\tisRecurringContributor,\n\tlazyFetchEmailWithTimeout,\n\tMODULES_VERSION,\n\tshouldHideSupportMessaging,\n} from '../../lib/contributions';\nimport type { CanShowResult } from '../../lib/messagePicker';\nimport { setAutomat } from '../../lib/setAutomat';\n\nexport type EpicConfig = {\n\tmodule: ModuleData;\n\tfetchEmail?: () => Promise<string | null>;\n\thasConsentForArticleCount: boolean;\n\tstage: string;\n};\n\ntype EpicProps = {\n\tfetchEmail?: () => Promise<string | null>;\n\tsubmitComponentEvent?: (componentEvent: OphanComponentEvent) => void;\n\topenCmp: () => void;\n\thasConsentForArticleCount: boolean;\n\tstage: string;\n\t// Also anything specified by support-dotcom-components\n};\n\ntype EpicType = React.ElementType<EpicProps>;\n\nconst wrapperMargins = css`\n\tmargin: 18px 0;\n\tclear: both;\n`;\n\nexport type CanShowData = {\n\tisSignedIn?: boolean;\n\tcountryCode?: string;\n\tcontentType: string;\n\tsectionId: string;\n\tshouldHideReaderRevenue: boolean;\n\tisMinuteArticle: boolean;\n\tisPaidContent: boolean;\n\ttags: TagType[];\n\tcontributionsServiceUrl: string;\n\tidApiUrl: string;\n\tstage: string;\n\tasyncArticleCount: Promise<WeeklyArticleHistory | undefined>;\n\tbrowserId?: string;\n};\n\nconst buildPayload = async (data: CanShowData): Promise<EpicPayload> => ({\n\ttracking: {\n\t\tophanPageId: window.guardian.config.ophan.pageViewId,\n\t\tplatformId: 'GUARDIAN_WEB',\n\t\tclientName: 'dcr',\n\t\treferrerUrl: window.location.origin + window.location.pathname,\n\t},\n\ttargeting: {\n\t\tcontentType: data.contentType,\n\t\tsectionId: data.sectionId,\n\t\tshouldHideReaderRevenue: data.shouldHideReaderRevenue,\n\t\tisMinuteArticle: data.isMinuteArticle,\n\t\tisPaidContent: data.isPaidContent,\n\t\ttags: data.tags,\n\t\tshowSupportMessaging: !shouldHideSupportMessaging(\n\t\t\tdata.isSignedIn ?? false,\n\t\t),\n\t\tisRecurringContributor: isRecurringContributor(\n\t\t\tdata.isSignedIn ?? false,\n\t\t),\n\t\tlastOneOffContributionDate: getLastOneOffContributionTimestamp(),\n\t\tepicViewLog: getEpicViewLog(storage.local),\n\t\tweeklyArticleHistory: await data.asyncArticleCount,\n\t\thasOptedOutOfArticleCount: await hasOptedOutOfArticleCount(),\n\t\tmvtId: Number(getCookie({ name: 'GU_mvt_id', shouldMemoize: true })),\n\t\tcountryCode: data.countryCode,\n\t\tmodulesVersion: MODULES_VERSION,\n\t\turl: window.location.origin + window.location.pathname,\n\t\tbrowserId: (await hasCmpConsentForBrowserId())\n\t\t\t? data.browserId\n\t\t\t: undefined,\n\t\tisSignedIn: data.isSignedIn,\n\t},\n});\n\nexport const canShowReaderRevenueEpic = async (\n\tdata: CanShowData,\n): Promise<CanShowResult<EpicConfig>> => {\n\tconst {\n\t\tisSignedIn,\n\t\tshouldHideReaderRevenue,\n\t\tisPaidContent,\n\t\tcontributionsServiceUrl,\n\t\tidApiUrl,\n\t\tstage,\n\t} = data;\n\n\tif (shouldHideReaderRevenue || isPaidContent) {\n\t\t// We never serve Reader Revenue epics in this case\n\t\treturn Promise.resolve({ show: false });\n\t}\n\tconst dataPerf = initPerf('contributions-epic-data');\n\tdataPerf.start();\n\n\tconst contributionsPayload = await buildPayload(data);\n\n\tconst response: ModuleDataResponse = await getEpic(\n\t\tcontributionsServiceUrl,\n\t\tcontributionsPayload,\n\t);\n\tconst module: ModuleData | undefined = response.data?.module;\n\n\tif (!module) {\n\t\treturn { show: false };\n\t}\n\n\tconst fetchEmail: (() => Promise<string | null>) | undefined = isSignedIn\n\t\t? lazyFetchEmailWithTimeout(idApiUrl)\n\t\t: undefined;\n\n\tconst hasConsentForArticleCount = await hasCmpConsentForArticleCount();\n\n\treturn {\n\t\tshow: true,\n\t\tmeta: {\n\t\t\tmodule,\n\t\t\tfetchEmail,\n\t\t\thasConsentForArticleCount,\n\t\t\tstage,\n\t\t},\n\t};\n};\n\nexport const ReaderRevenueEpic = ({\n\tmodule,\n\tfetchEmail,\n\thasConsentForArticleCount,\n\tstage,\n}: EpicConfig) => {\n\tconst [Epic, setEpic] = useState<EpicType>();\n\n\tconst openCmp = () => {\n\t\tcmp.showPrivacyManager();\n\t};\n\n\tuseEffect(() => {\n\t\tsetAutomat();\n\n\t\tconst modulePerf = initPerf('contributions-epic-module');\n\t\tmodulePerf.start();\n\n\t\twindow\n\t\t\t.guardianPolyfilledImport(module.url)\n\t\t\t.then((epicModule: { ContributionsEpic: EpicType }) => {\n\t\t\t\tmodulePerf.end();\n\t\t\t\tsetEpic(() => epicModule.ContributionsEpic); // useState requires functions to be wrapped\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconst msg =\n\t\t\t\t\terror instanceof Error\n\t\t\t\t\t\t? `Error importing RR epic: ${error.message}`\n\t\t\t\t\t\t: 'Unknown error';\n\n\t\t\t\tconsole.log(msg);\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\t'rr-epic',\n\t\t\t\t);\n\t\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tif (Epic !== undefined) {\n\t\treturn (\n\t\t\t<div css={wrapperMargins}>\n\t\t\t\t{}\n\t\t\t\t<Epic\n\t\t\t\t\t{...module.props}\n\t\t\t\t\tfetchEmail={fetchEmail}\n\t\t\t\t\tsubmitComponentEvent={submitComponentEvent}\n\t\t\t\t\topenCmp={openCmp}\n\t\t\t\t\thasConsentForArticleCount={hasConsentForArticleCount}\n\t\t\t\t\tstage={stage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import type {\n\tBrazeArticleContext,\n\tBrazeMessagesInterface,\n} from '@guardian/braze-components/logic';\nimport { getCookie } from '@guardian/libs';\nimport type { WeeklyArticleHistory } from '@guardian/support-dotcom-components/dist/dotcom/src/types';\nimport { useEffect, useState } from 'react';\nimport { getArticleCounts } from '../../lib/articleCount';\nimport type { TagType } from '../../types/tag';\nimport { getLocaleCode } from '../lib/getCountryCode';\nimport type {\n\tCandidateConfig,\n\tMaybeFC,\n\tSlotConfig,\n} from '../lib/messagePicker';\nimport { pickMessage } from '../lib/messagePicker';\nimport { useBraze } from '../lib/useBraze';\nimport { useOnce } from '../lib/useOnce';\nimport { canShowBrazeEpic, MaybeBrazeEpic } from './SlotBodyEnd/BrazeEpic';\nimport {\n\tcanShowReaderRevenueEpic,\n\tReaderRevenueEpic,\n} from './SlotBodyEnd/ReaderRevenueEpic';\nimport type {\n\tCanShowData as RRCanShowData,\n\tEpicConfig as RREpicConfig,\n} from './SlotBodyEnd/ReaderRevenueEpic';\n\ntype Props = {\n\tcontentType: string;\n\tsectionName?: string;\n\tsectionId: string;\n\tshouldHideReaderRevenue: boolean;\n\tisMinuteArticle: boolean;\n\tisPaidContent: boolean;\n\ttags: TagType[];\n\tcontributionsServiceUrl: string;\n\tidApiUrl: string;\n\tstage: string;\n\tpageId: string;\n\tkeywordIds: string;\n};\n\nconst buildReaderRevenueEpicConfig = (\n\tcanShowData: RRCanShowData,\n): CandidateConfig<RREpicConfig> => {\n\treturn {\n\t\tcandidate: {\n\t\t\tid: 'reader-revenue-banner',\n\t\t\tcanShow: () => canShowReaderRevenueEpic(canShowData),\n\t\t\tshow: (meta: RREpicConfig) => () => {\n\t\t\t\treturn <ReaderRevenueEpic {...meta} />;\n\t\t\t},\n\t\t},\n\t\ttimeoutMillis: null,\n\t};\n};\n\nconst buildBrazeEpicConfig = (\n\tbrazeMessages: BrazeMessagesInterface,\n\tcountryCode: string,\n\tidApiUrl: string,\n\tcontentType: string,\n\tbrazeArticleContext: BrazeArticleContext,\n\ttags: TagType[],\n): CandidateConfig<any> => {\n\treturn {\n\t\tcandidate: {\n\t\t\tid: 'braze-epic',\n\t\t\tcanShow: () =>\n\t\t\t\tcanShowBrazeEpic(\n\t\t\t\t\tbrazeMessages,\n\t\t\t\t\tbrazeArticleContext,\n\t\t\t\t\tcontentType,\n\t\t\t\t\ttags,\n\t\t\t\t),\n\t\t\tshow: (meta: any) => () =>\n\t\t\t\t(\n\t\t\t\t\t<MaybeBrazeEpic\n\t\t\t\t\t\tmeta={meta}\n\t\t\t\t\t\tcountryCode={countryCode}\n\t\t\t\t\t\tidApiUrl={idApiUrl}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t},\n\t\ttimeoutMillis: 2000,\n\t};\n};\n\nexport const SlotBodyEnd = ({\n\tcontentType,\n\tsectionName,\n\tsectionId,\n\tshouldHideReaderRevenue,\n\tisMinuteArticle,\n\tisPaidContent,\n\ttags,\n\tcontributionsServiceUrl,\n\tidApiUrl,\n\tstage,\n\tpageId,\n\tkeywordIds,\n}: Props) => {\n\tconst { brazeMessages } = useBraze(idApiUrl);\n\n\tconst [countryCode, setCountryCode] = useState<string>();\n\tconst isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n\tconst browserId = getCookie({ name: 'bwid', shouldMemoize: true });\n\tconst [SelectedEpic, setSelectedEpic] = useState<React.ElementType | null>(\n\t\tnull,\n\t);\n\tconst [asyncArticleCount, setAsyncArticleCount] =\n\t\tuseState<Promise<WeeklyArticleHistory | undefined>>();\n\n\tuseEffect(() => {\n\t\tconst callFetch = () => {\n\t\t\tgetLocaleCode()\n\t\t\t\t.then((cc) => {\n\t\t\t\t\tsetCountryCode(cc ?? '');\n\t\t\t\t})\n\t\t\t\t.catch((e) =>\n\t\t\t\t\tconsole.error(`countryCodePromise - error: ${String(e)}`),\n\t\t\t\t);\n\t\t};\n\t\tcallFetch();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetAsyncArticleCount(\n\t\t\tgetArticleCounts(pageId, keywordIds).then(\n\t\t\t\t(counts) => counts?.weeklyArticleHistory,\n\t\t\t),\n\t\t);\n\t}, [pageId, keywordIds]);\n\n\tuseOnce(() => {\n\t\tconst readerRevenueEpic = buildReaderRevenueEpicConfig({\n\t\t\tisSignedIn,\n\t\t\tcountryCode,\n\t\t\tcontentType,\n\t\t\tsectionId,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisMinuteArticle,\n\t\t\tisPaidContent,\n\t\t\ttags,\n\t\t\tcontributionsServiceUrl,\n\t\t\tidApiUrl,\n\t\t\tstage,\n\t\t\tasyncArticleCount: asyncArticleCount as Promise<\n\t\t\t\tWeeklyArticleHistory | undefined\n\t\t\t>,\n\t\t\tbrowserId: browserId ?? undefined,\n\t\t});\n\t\tconst brazeArticleContext: BrazeArticleContext = {\n\t\t\tsection: sectionName,\n\t\t};\n\t\tconst brazeEpic = buildBrazeEpicConfig(\n\t\t\tbrazeMessages as BrazeMessagesInterface,\n\t\t\tcountryCode as string,\n\t\t\tidApiUrl,\n\t\t\tcontentType,\n\t\t\tbrazeArticleContext,\n\t\t\ttags,\n\t\t);\n\t\tconst epicConfig: SlotConfig = {\n\t\t\tcandidates: [brazeEpic, readerRevenueEpic],\n\t\t\tname: 'slotBodyEnd',\n\t\t};\n\n\t\tpickMessage(epicConfig)\n\t\t\t.then((PickedEpic: () => MaybeFC) => setSelectedEpic(PickedEpic))\n\t\t\t.catch((e) =>\n\t\t\t\tconsole.error(`SlotBodyEnd pickMessage - error: ${String(e)}`),\n\t\t\t);\n\t}, [isSignedIn, countryCode, brazeMessages, asyncArticleCount]);\n\n\tif (SelectedEpic !== null) {\n\t\treturn (\n\t\t\t<div id=\"slot-body-end\">\n\t\t\t\t<SelectedEpic />\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n};\n"],"names":["wrapperMargins","css","COMPONENT_TYPE","BrazeEpicWithSatisfiedDependencies","BrazeComponent","meta","countryCode","idApiUrl","hasBeenSeen","setNode","useIsInView","rootMargin","threshold","debounce","epicRef","useRef","useOnce","submitComponentEvent","component","componentType","id","dataFromBraze","ophanComponentId","action","current","useEffect","logImpressionWithBraze","componentName","div","ref","brazeMessageProps","subscribeToNewsletter","async","newsletterId","fetch","method","body","JSON","stringify","subscribed","credentials","logButtonClickWithBraze","MaybeBrazeEpic","setBrazeComponent","useState","then","module","BrazeEndOfArticleComponent","catch","error","window","guardian","modules","sentry","reportError","data","ReaderRevenueEpic","fetchEmail","hasConsentForArticleCount","stage","Epic","setEpic","setAutomat","modulePerf","initPerf","start","guardianPolyfilledImport","url","epicModule","end","ContributionsEpic","msg","Error","message","console","log","undefined","props","openCmp","cmp","buildReaderRevenueEpicConfig","canShowData","candidate","canShow","response","isSignedIn","shouldHideReaderRevenue","isPaidContent","contributionsServiceUrl","Promise","resolve","show","contributionsPayload","tracking","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","targeting","contentType","sectionId","isMinuteArticle","tags","showSupportMessaging","shouldHideSupportMessaging","isRecurringContributor","lastOneOffContributionDate","getLastOneOffContributionTimestamp","epicViewLog","getEpicViewLog","storage","weeklyArticleHistory","asyncArticleCount","hasOptedOutOfArticleCount","mvtId","Number","getCookie","name","shouldMemoize","modulesVersion","MODULES_VERSION","browserId","hasCmpConsentForBrowserId","buildPayload","getEpic","lazyFetchEmailWithTimeout","hasCmpConsentForArticleCount","canShowReaderRevenueEpic","timeoutMillis","buildBrazeEpicConfig","brazeMessages","brazeArticleContext","toLowerCase","forcedBrazeMeta","getBrazeMetaFromUrlFragment","suppressForTaylorReport","getMessageForEndOfArticle","extras","logImpression","internalButtonId","logButtonClick","e","canShowBrazeEpic","SlotBodyEnd","sectionName","pageId","keywordIds","useBraze","setCountryCode","SelectedEpic","setSelectedEpic","setAsyncArticleCount","getLocaleCode","cc","String","getArticleCounts","counts","readerRevenueEpic","epicConfig","candidates","section","pickMessage","PickedEpic"],"sourceRoot":""}