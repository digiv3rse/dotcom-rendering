{"version":3,"file":"8887.legacy.a831dc2904dbb92616e5.js","mappings":"yNAGA,IAAMA,EACC,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WATIA,EAWI,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAnBIA,EAqBE,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAjCIA,EAmCG,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA7CIA,EA+CE,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAvDIA,EAyDI,CACR,UACA,UACA,WA5DIA,EA8DG,CACP,UACA,UACA,UACA,UACA,UACA,WApEIA,EAsEE,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAhFIA,EAkFI,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAUWC,EAAU,CACtBC,MAAO,CACN,IAAKF,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,IAClB,IAAKA,EAAa,KAEnBG,SAAU,CACT,IAAKH,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,IAErBI,QAAS,CACR,EAAGJ,EAAa,GAChB,EAAGA,EAAa,GAChB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,IAAKA,EAAa,IAEnBK,MAAO,CACN,IAAKL,EAAY,GACjB,IAAKA,EAAY,IAElBM,QAAS,CACR,IAAKN,EAAc,GACnB,IAAKA,EAAc,IAEpBO,KAAM,CACL,IAAKP,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,IAElBQ,QAAS,CACR,IAAKR,EAAe,GACpB,IAAKA,EAAe,GAIpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IA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","sources":["webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/colour/palette.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/typography/data.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/typography/font-styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/typography/api.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/typography/index.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/utils/px-to-rem.ts"],"sourcesContent":["// Arrays of colours should have pillar colors first\n// e.g. for sport:\n// const [sport300, sport400, sport500, sport600, sport800] = colors.blue\nconst colors = {\n\treds: [\n\t\t'#660505', //news-100\n\t\t'#8B0000', //news-200\n\t\t'#AB0613', //news-300\n\t\t'#C70000', //news-400, error-400\n\t\t'#FF5943', //news-500\n\t\t'#FF9081', //news-550, error-500\n\t\t'#FFBAC8', //news-600\n\t\t'#FFF4F2', //news-800\n\t],\n\toranges: [\n\t\t'#672005', //opinion-100\n\t\t'#8D2700', //opinion-200\n\t\t'#C74600', //opinion-400, opinion-300 (deprecated)\n\t\t'#E05E00', //opinion-450\n\t\t'#FF7F0F', //opinion-500\n\t\t'#FF9941', //opinion-550\n\t\t'#F9B376', //opinion-600\n\t\t'#FEF9F5', //opinion-800\n\t],\n\tblues: [\n\t\t'#003C60', //sport-100\n\t\t'#004E7C', //sport-200\n\t\t'#005689', //sport-300\n\t\t'#0077B6', //sport-400, focus-400, brand-500\n\t\t'#00B2FF', //sport-500\n\t\t'#90DCFF', //sport-600\n\t\t'#F1F8FC', //sport-800\n\t\t'#001536', //brand-100\n\t\t'#041F4A', //brand-300\n\t\t'#052962', //brand-400\n\t\t'#506991', //brand-600\n\t\t'#C1D8FC', //brand-800\n\t],\n\tbrowns: [\n\t\t'#2B2625', //culture-50\n\t\t'#3E3323', //culture-100\n\t\t'#574835', //culture-200\n\t\t'#6B5840', //culture-300\n\t\t'#866D50', //culture-400, culture-350 (deprecated)\n\t\t'#A1845C', //culture-450\n\t\t'#EACCA0', //culture-500\n\t\t'#E7D4B9', //culture-600\n\t\t'#EFE8DD', //culture-700\n\t\t'#FBF6EF', //culture-800\n\t],\n\tpinks: [\n\t\t'#510043', //lifestyle-100\n\t\t'#650054', //lifestyle-200\n\t\t'#7D0068', //lifestyle-300\n\t\t'#BB3B80', //lifestyle-400\n\t\t'#F37ABC', //lifestyle-450\n\t\t'#FFABDB', //lifestyle-500\n\t\t'#FEC8D3', //lifestyle-600\n\t\t'#FEEEF7', //lifestyle-800\n\t],\n\tyellows: [\n\t\t'#F3C100', //brandAlt-200\n\t\t'#FFD900', //brandAlt-300\n\t\t'#FFE500', //brandAlt-400\n\t],\n\tgreens: [\n\t\t'#185E36', //green-300\n\t\t'#22874D', //green-400, success-400\n\t\t'#58D08B', //green-500, success-500\n\t\t'#0C7A73', //labs-200\n\t\t'#65A897', //labs-300\n\t\t'#69D1CA', //labs-400\n\t],\n\tgrays: [\n\t\t'#000000', //neutral-0\n\t\t'#121212', //neutral-7\n\t\t'#1A1A1A', //neutral-10\n\t\t'#333333', //neutral-20\n\t\t'#707070', //neutral-46\n\t\t'#999999', //neutral-60\n\t\t'#DCDCDC', //neutral-86\n\t\t'#EDEDED', //neutral-93\n\t\t'#F6F6F6', //neutral-97\n\t\t'#FFFFFF', //neutral-100\n\t],\n\tspecial: [\n\t\t'#222527', //specialReport-100\n\t\t'#303538', //specialReport-200\n\t\t'#3F464A', //specialReport-300\n\t\t'#595C5F', //specialReport-400\n\t\t'#9DA0A2', //specialReport-450\n\t\t'#ABC2C9', //specialReport-500\n\t\t'#E4E5E8', //specialReport-700\n\t\t'#EFF1F2', //specialReport-800\n\t\t'#2B2B2A', //specialReportAlt-100\n\t\t'#B9300A', //specialReportAlt-200\n\t\t'#FF663D', //specialReportAlt-300\n\t\t'#EBE6E1', //specialReportAlt-700\n\t\t'#F5F0EB', //specialReportAlt-800\n\t],\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/492a30-light-palette)\n *\n * Colour palette organised by type e.g. 'error', or pillar e.g. 'opinion'\n */\nexport const palette = {\n\tbrand: {\n\t\t100: colors.blues[7],\n\t\t300: colors.blues[8],\n\t\t400: colors.blues[9],\n\t\t500: colors.blues[3],\n\t\t600: colors.blues[10],\n\t\t800: colors.blues[11],\n\t},\n\tbrandAlt: {\n\t\t200: colors.yellows[0],\n\t\t300: colors.yellows[1],\n\t\t400: colors.yellows[2],\n\t},\n\tneutral: {\n\t\t0: colors.grays[0],\n\t\t7: colors.grays[1],\n\t\t10: colors.grays[2],\n\t\t20: colors.grays[3],\n\t\t46: colors.grays[4],\n\t\t60: colors.grays[5],\n\t\t86: colors.grays[6],\n\t\t93: colors.grays[7],\n\t\t97: colors.grays[8],\n\t\t100: colors.grays[9],\n\t},\n\terror: {\n\t\t400: colors.reds[3],\n\t\t500: colors.reds[5],\n\t},\n\tsuccess: {\n\t\t400: colors.greens[1],\n\t\t500: colors.greens[2],\n\t},\n\tnews: {\n\t\t100: colors.reds[0],\n\t\t200: colors.reds[1],\n\t\t300: colors.reds[2],\n\t\t400: colors.reds[3],\n\t\t500: colors.reds[4],\n\t\t550: colors.reds[5],\n\t\t600: colors.reds[6],\n\t\t800: colors.reds[7],\n\t},\n\topinion: {\n\t\t100: colors.oranges[0],\n\t\t200: colors.oranges[1],\n\t\t/**\n\t\t * @deprecated, use opinion[400]\n\t\t */\n\t\t300: colors.oranges[2],\n\t\t400: colors.oranges[2],\n\t\t450: colors.oranges[3],\n\t\t500: colors.oranges[4],\n\t\t550: colors.oranges[5],\n\t\t600: colors.oranges[6],\n\t\t800: colors.oranges[7],\n\t},\n\tsport: {\n\t\t100: colors.blues[0],\n\t\t200: colors.blues[1],\n\t\t300: colors.blues[2],\n\t\t400: colors.blues[3],\n\t\t500: colors.blues[4],\n\t\t600: colors.blues[5],\n\t\t800: colors.blues[6],\n\t},\n\tculture: {\n\t\t50: colors.browns[0],\n\t\t100: colors.browns[1],\n\t\t200: colors.browns[2],\n\t\t300: colors.browns[3],\n\t\t/**\n\t\t * @deprecated, use culture[400]\n\t\t */\n\t\t350: colors.browns[4],\n\t\t400: colors.browns[4],\n\t\t450: colors.browns[5],\n\t\t500: colors.browns[6],\n\t\t600: colors.browns[7],\n\t\t700: colors.browns[8],\n\t\t800: colors.browns[9],\n\t},\n\tlifestyle: {\n\t\t100: colors.pinks[0],\n\t\t200: colors.pinks[1],\n\t\t300: colors.pinks[2],\n\t\t400: colors.pinks[3],\n\t\t450: colors.pinks[4],\n\t\t500: colors.pinks[5],\n\t\t600: colors.pinks[6],\n\t\t800: colors.pinks[7],\n\t},\n\tlabs: {\n\t\t200: colors.greens[3],\n\t\t300: colors.greens[4],\n\t\t400: colors.greens[5],\n\t},\n\tspecialReport: {\n\t\t100: colors.special[0],\n\t\t200: colors.special[1],\n\t\t300: colors.special[2],\n\t\t400: colors.special[3],\n\t\t450: colors.special[4],\n\t\t500: colors.special[5],\n\t\t700: colors.special[6],\n\t\t800: colors.special[7],\n\t},\n\tspecialReportAlt: {\n\t\t100: colors.special[8],\n\t\t200: colors.special[9],\n\t\t300: colors.special[10],\n\t\t700: colors.special[11],\n\t\t800: colors.special[12],\n\t},\n\tfocus: {\n\t\t400: colors.blues[3],\n\t},\n} as const;\n\n// Hover colours are snowflakes as they are manipulations of colours from the\n// main palette.\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/9280ee)\n *\n * Default theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const background = {\n\tprimary: palette.neutral[100],\n\tsecondary: palette.neutral[97],\n\tinverse: palette.neutral[10],\n\tctaPrimary: palette.brand[400],\n\tctaPrimaryHover: '#234B8A',\n\tctaSecondary: palette.brand[800],\n\tctaSecondaryHover: '#ACC9F7',\n\tctaTertiaryHover: '#E5E5E5',\n\tinput: palette.neutral[100],\n\tinputChecked: palette.brand[500],\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/63cc10)\n *\n * Brand theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandBackground = {\n\tprimary: palette.brand[400],\n\tinputChecked: palette.neutral[100],\n\tctaPrimary: palette.neutral[100],\n\tctaPrimaryHover: '#E0E0E0',\n\tctaSecondary: palette.brand[600],\n\tctaSecondaryHover: '#234B8A',\n\tctaTertiaryHover: palette.brand[300],\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/743232)\n *\n * Alternative brand theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandAltBackground = {\n\tprimary: palette.brandAlt[400],\n\tctaPrimary: palette.neutral[7],\n\tctaPrimaryHover: '#454545',\n\tctaSecondary: palette.brandAlt[200],\n\tctaSecondaryHover: '#F2AE00',\n\tctaTertiaryHover: '#FFD213',\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/69c92f)\n *\n * Default theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const border = {\n\tprimary: palette.neutral[60],\n\tsecondary: palette.neutral[86],\n\tsuccess: palette.success[400],\n\terror: palette.error[400],\n\tctaTertiary: palette.brand[400],\n\tinput: palette.neutral[60],\n\tinputChecked: palette.brand[500],\n\tinputHover: palette.brand[500],\n\tinputActive: palette.brand[500],\n\tfocusHalo: palette.focus[400],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/04883b)\n *\n * Brand theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandBorder = {\n\tprimary: palette.brand[600],\n\tsecondary: palette.brand[600],\n\tsuccess: palette.success[500],\n\terror: palette.error[500],\n\tctaTertiary: palette.neutral[100],\n\tinput: palette.brand[800],\n\tinputChecked: palette.neutral[100],\n\tinputHover: palette.neutral[100],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/b/21c6cc)\n *\n * Alternative brand theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandAltBorder = {\n\tctaTertiary: palette.neutral[7],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/593cc9)\n *\n * Default theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const line = {\n\tprimary: palette.neutral[86],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/66455d)\n *\n * Brand theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandLine = {\n\tprimary: palette.brand[600],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/89955e)\n *\n * Alternative brand theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandAltLine = {\n\tprimary: palette.neutral[7],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/85d3b0)\n *\n * Default theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const text = {\n\tprimary: palette.neutral[7],\n\tsupporting: palette.neutral[46],\n\tsuccess: palette.success[400],\n\terror: palette.error[400],\n\tctaPrimary: palette.neutral[100],\n\tctaSecondary: palette.brand[400],\n\tctaTertiary: palette.brand[400],\n\tanchorPrimary: palette.brand[500],\n\tanchorSecondary: palette.neutral[7],\n\tuserInput: palette.neutral[7],\n\tinputLabel: palette.neutral[7],\n\tinputError: palette.neutral[7],\n\tinputLabelSupporting: palette.neutral[46],\n\tinputChecked: palette.brand[400], //choice card only\n\tinputHover: palette.brand[400], //choice card only\n\tgroupLabel: palette.neutral[7],\n\tgroupLabelSupporting: palette.neutral[46],\n\tnewsInverse: palette.news[550],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/244480)\n *\n * Brand theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandText = {\n\tprimary: palette.neutral[100],\n\tsupporting: palette.brand[800],\n\tsuccess: palette.success[500],\n\terror: palette.error[500],\n\tctaPrimary: palette.brand[400],\n\tctaSecondary: palette.neutral[100],\n\tctaTertiary: palette.neutral[100],\n\tanchorPrimary: palette.neutral[100],\n\tanchorPrimaryHover: palette.brandAlt[400],\n\tuserInput: palette.neutral[100],\n\tinputLabel: palette.neutral[100],\n\tinputLabelSupporting: palette.brand[800],\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/11d5fd)\n *\n * Alternative brand theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nexport const brandAltText = {\n\tprimary: palette.neutral[7],\n\tsupporting: palette.neutral[60],\n\tctaPrimary: palette.neutral[100],\n\tctaSecondary: palette.neutral[7],\n\tctaTertiary: palette.neutral[7],\n\tanchorPrimary: palette.neutral[7],\n};\n\nexport const {\n\tbrand,\n\tbrandAlt,\n\tneutral,\n\terror,\n\tsuccess,\n\tnews,\n\topinion,\n\tsport,\n\tculture,\n\tlifestyle,\n\tlabs,\n\tspecialReport,\n\tspecialReportAlt,\n\tfocus,\n} = palette;\n","import { pxToRem } from '../utils/px-to-rem';\nimport type { AvailableFontWeights, ItalicsFontWeights } from './types';\n\n/**\n * Pixel size values for each font that we use in the design system.\n *\n * We assert that the values match the guardian type scale in our\n * {@link [unit test suite](./typography.test.ts)}.\n */\nexport const pxTextSizes = {\n\ttextSans: {\n\t\txxsmall: 12,\n\t\txsmall: 14,\n\t\tsmall: 15,\n\t\tmedium: 17,\n\t\tlarge: 20,\n\t\txlarge: 24,\n\t\txxlarge: 28,\n\t\txxxlarge: 34,\n\t},\n\tbody: {\n\t\txsmall: 14,\n\t\tsmall: 15,\n\t\tmedium: 17,\n\t},\n\theadline: {\n\t\txxxsmall: 17,\n\t\txxsmall: 20,\n\t\txsmall: 24,\n\t\tsmall: 28,\n\t\tmedium: 34,\n\t\tlarge: 42,\n\t\txlarge: 50,\n\t},\n\ttitlepiece: {\n\t\tsmall: 42,\n\t\tmedium: 50,\n\t\tlarge: 70,\n\t},\n} as const;\n\n/**\n * Relative font sizes, calculated from the pixel sizes above;\n * using the pxToRem method.\n *\n * We assert that the computed rem values match the expected values\n * in our {@link [unit test suite](./typography.test.ts)}.\n *\n * See {@link [pxToRem](../utils/px-to-rem.ts)} for more details.\n */\nexport const remTextSizes = {\n\ttextSans: {\n\t\txxsmall: pxToRem(pxTextSizes.textSans.xxsmall),\n\t\txsmall: pxToRem(pxTextSizes.textSans.xsmall),\n\t\tsmall: pxToRem(pxTextSizes.textSans.small),\n\t\tmedium: pxToRem(pxTextSizes.textSans.medium),\n\t\tlarge: pxToRem(pxTextSizes.textSans.large),\n\t\txlarge: pxToRem(pxTextSizes.textSans.xlarge),\n\t\txxlarge: pxToRem(pxTextSizes.textSans.xxlarge),\n\t\txxxlarge: pxToRem(pxTextSizes.textSans.xxxlarge),\n\t},\n\tbody: {\n\t\txsmall: pxToRem(pxTextSizes.body.xsmall),\n\t\tsmall: pxToRem(pxTextSizes.body.small),\n\t\tmedium: pxToRem(pxTextSizes.body.medium),\n\t},\n\theadline: {\n\t\txxxsmall: pxToRem(pxTextSizes.headline.xxxsmall),\n\t\txxsmall: pxToRem(pxTextSizes.headline.xxsmall),\n\t\txsmall: pxToRem(pxTextSizes.headline.xsmall),\n\t\tsmall: pxToRem(pxTextSizes.headline.small),\n\t\tmedium: pxToRem(pxTextSizes.headline.medium),\n\t\tlarge: pxToRem(pxTextSizes.headline.large),\n\t\txlarge: pxToRem(pxTextSizes.headline.xlarge),\n\t},\n\ttitlepiece: {\n\t\tsmall: pxToRem(pxTextSizes.titlepiece.small),\n\t\tmedium: pxToRem(pxTextSizes.titlepiece.medium),\n\t\tlarge: pxToRem(pxTextSizes.titlepiece.large),\n\t},\n} as const;\n\nexport const fonts = {\n\ttitlepiece: 'GT Guardian Titlepiece, Georgia, serif',\n\theadline: 'GH Guardian Headline, Guardian Egyptian Web, Georgia, serif',\n\tbody: 'GuardianTextEgyptian, Guardian Text Egyptian Web, Georgia, serif',\n\ttextSans:\n\t\t'GuardianTextSans, Guardian Text Sans Web, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif',\n} as const;\n\nexport const lineHeights = {\n\ttight: 1.15,\n\tregular: 1.35,\n\tloose: 1.5,\n} as const;\n\nexport const fontWeights = {\n\tlight: 300,\n\tregular: 400,\n\tmedium: 500,\n\tbold: 700,\n} as const;\n\nexport const availableFontWeights = {\n\ttitlepiece: { bold: true },\n\theadline: { light: true, medium: true, bold: true },\n\tbody: { regular: true, bold: true },\n\ttextSans: { regular: true, bold: true },\n} as AvailableFontWeights;\n\nexport const italicsFontWeights = {\n\ttitlepiece: { bold: false },\n\theadline: { light: true, medium: true, bold: false },\n\tbody: { regular: true, bold: true },\n\ttextSans: { regular: true, bold: false },\n} as ItalicsFontWeights;\n\nexport const underlineThickness = {\n\ttextSans: {\n\t\txxsmall: 2,\n\t\txsmall: 2,\n\t\tsmall: 2,\n\t\tmedium: 2,\n\t\tlarge: 3,\n\t\txlarge: 3,\n\t\txxlarge: 3,\n\t\txxxlarge: 4,\n\t},\n\tbody: {\n\t\txsmall: 2,\n\t\tsmall: 2,\n\t\tmedium: 2,\n\t},\n\theadline: {\n\t\txxxsmall: 2,\n\t\txxsmall: 3,\n\t\txsmall: 3,\n\t\tsmall: 3,\n\t\tmedium: 4,\n\t\tlarge: 5,\n\t\txlarge: 6,\n\t},\n\ttitlepiece: {\n\t\tsmall: 5,\n\t\tmedium: 6,\n\t\tlarge: 6,\n\t},\n} as const;\n\n// Pixel font size exports\nexport const textSansSizes = pxTextSizes.textSans;\n\nexport const bodySizes = pxTextSizes.body;\n\nexport const headlineSizes = pxTextSizes.headline;\n\nexport const titlepieceSizes = pxTextSizes.titlepiece;\n\n// Computed rem font size exports\nexport const remBodySizes = remTextSizes.body;\n\nexport const remTitlepieceSizes = remTextSizes.titlepiece;\n\nexport const remHeadlineSizes = remTextSizes.headline;\n\nexport const remTextSansSizes = remTextSizes.textSans;\n","import {\n\tavailableFontWeights,\n\tfonts,\n\tfontWeights,\n\titalicsFontWeights,\n\tlineHeights,\n\tpxTextSizes,\n\tremTextSizes,\n\tunderlineThickness,\n} from './data';\nimport type {\n\tCategories,\n\tFontScaleArgs,\n\tFontScaleFunction,\n\tFontStyle,\n\tOption,\n\tTypographyConfiguration,\n\tTypographyStyles,\n} from './types';\n\nconst determineFontStyleProperty = (\n\tfontStyle: Option<FontStyle>,\n\thasItalic: boolean,\n) => {\n\tswitch (fontStyle) {\n\t\tcase 'italic':\n\t\t\treturn hasItalic ? 'italic' : undefined;\n\t\tcase 'normal':\n\t\t\treturn 'normal';\n\t\tcase null:\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n};\n\n/**\n * Generates a method that returns a TypographyStyles object for a given font scale.\n *\n * **Example**, generate a method that returns styles for the `headline` category\n * at the `small` level and a default font weight of `medium`:\n *\n * ```\n * const headlineSmall =\n * fontStyleFunction('headline', 'small', { fontWeight: 'medium' });\n * ```\n *\n * **Example usage**, we call the method to get our typography styles and override\n * the default font weight set above with `bold`:\n *\n * ```\n * const headlineSmallStyles =\n * headlineSmall({ fontWeight: 'bold' });\n * ```\n */\nexport const fontStyleFunction =\n\t<Category extends keyof Categories, Level extends keyof Categories[Category]>(\n\t\tcategory: Category,\n\t\tlevel: Level,\n\t\tdefaults: TypographyConfiguration,\n\t) =>\n\t(options?: FontScaleArgs): TypographyStyles => {\n\t\tconst finalFontConfiguration: TypographyConfiguration = {\n\t\t\t...defaults,\n\t\t\t...options,\n\t\t};\n\n\t\t// Fetch the font size in pixels and rems for the given category and level\n\t\tconst pxTextSize = Number(pxTextSizes[category][level]);\n\t\tconst remTextSize = Number(remTextSizes[category][level]);\n\n\t\t// Determine if italic font-style is available for this font weight\n\t\tconst hasItalic =\n\t\t\titalicsFontWeights[category]?.[finalFontConfiguration.fontWeight] ??\n\t\t\tfalse;\n\n\t\t// Determine if setting the font weight is allowed for the given category\n\t\tconst isFontWeightAvailable =\n\t\t\tavailableFontWeights[category]?.[finalFontConfiguration.fontWeight] ??\n\t\t\tfalse;\n\n\t\tconst fontWeight = isFontWeightAvailable\n\t\t\t? fontWeights[finalFontConfiguration.fontWeight]\n\t\t\t: undefined;\n\n\t\t// line-height is defined as a unitless value, so we multiply\n\t\t// by the element's font-size in px to get the px value\n\t\tconst lineHeight =\n\t\t\tfinalFontConfiguration.unit === 'px'\n\t\t\t\t? `${lineHeights[finalFontConfiguration.lineHeight] * pxTextSize}px`\n\t\t\t\t: lineHeights[finalFontConfiguration.lineHeight];\n\n\t\treturn {\n\t\t\tlineHeight,\n\t\t\tfontWeight,\n\t\t\tfontSize:\n\t\t\t\tfinalFontConfiguration.unit === 'px' ? pxTextSize : `${remTextSize}rem`,\n\t\t\tfontFamily: fonts[category],\n\t\t\ttextDecorationThickness: Number(underlineThickness[category][level]),\n\t\t\tfontStyle: determineFontStyleProperty(\n\t\t\t\tfinalFontConfiguration.fontStyle,\n\t\t\t\thasItalic,\n\t\t\t),\n\t\t};\n\t};\n\n/**\n * Generates a method that evaluates a given font scale function with the\n * provided options and returns the typography styles as a CSS string.\n *\n * For an example usage see our {@link [typography string function exports](./index.ts)}.\n *\n * The CSS string exposes a scoped variable: `--source-text-decoration-thickness`,\n * so consumers can use the recommended value for the font/weight combination.\n *\n * For the text underline thickness mappings see {@link underlineThickness}.\n */\nexport const fontStyleToStringFunction =\n\t(typographyFunction: FontScaleFunction) =>\n\t(options?: FontScaleArgs): string => {\n\t\tconst {\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfontStyle,\n\t\t\tfontWeight,\n\t\t\tlineHeight,\n\t\t\ttextDecorationThickness,\n\t\t} = typographyFunction(options);\n\n\t\treturn `\n\t\t\tfont-family: ${fontFamily};\n\t\t\tfont-size: ${typeof fontSize === 'number' ? `${fontSize}px` : fontSize};\n\t\t\tline-height: ${lineHeight};\n\t\t\t${fontWeight ? `font-weight: ${fontWeight}` : ''};\n\t\t\t${fontStyle ? `font-style: ${fontStyle}` : ''};\n\n\t\t\t/*\n\t\t\t * Child elements (e.g. <Link/>) can use this variable\n\t\t\t * to set the thickness of their underline.\n\t\t\t *\n\t\t\t * The thickness for each font type and weight is defined\n\t\t\t * in the underlineThickness object.\n\t\t\t */\n\t\t\t--source-text-decoration-thickness: ${\n\t\t\t\ttextDecorationThickness === undefined\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: `${textDecorationThickness}px`\n\t\t\t};\n\t\t`;\n\t};\n","import { fontStyleFunction } from './font-styles';\nimport type {\n\tBodySizes,\n\tHeadlineSizes,\n\tTextSansSizes,\n\tTitlepieceSizes,\n\tTypographyConfiguration,\n\tTypographyFunctions,\n} from './types';\n\nconst titlepieceDefaults: TypographyConfiguration = {\n\tlineHeight: 'tight',\n\tfontWeight: 'bold',\n\tfontStyle: null,\n\tunit: 'rem',\n};\n\nexport const titlepiece: TypographyFunctions<TitlepieceSizes> = {\n\tsmall: fontStyleFunction('titlepiece', 'small', titlepieceDefaults),\n\tmedium: fontStyleFunction('titlepiece', 'medium', titlepieceDefaults),\n\tlarge: fontStyleFunction('titlepiece', 'large', titlepieceDefaults),\n};\n\nconst headlineDefaults: TypographyConfiguration = {\n\tlineHeight: 'tight',\n\tfontWeight: 'medium',\n\tfontStyle: null,\n\tunit: 'rem',\n};\n\nexport const headline: TypographyFunctions<HeadlineSizes> = {\n\txxxsmall: fontStyleFunction('headline', 'xxxsmall', headlineDefaults),\n\txxsmall: fontStyleFunction('headline', 'xxsmall', headlineDefaults),\n\txsmall: fontStyleFunction('headline', 'xsmall', headlineDefaults),\n\tsmall: fontStyleFunction('headline', 'small', headlineDefaults),\n\tmedium: fontStyleFunction('headline', 'medium', headlineDefaults),\n\tlarge: fontStyleFunction('headline', 'large', headlineDefaults),\n\txlarge: fontStyleFunction('headline', 'xlarge', headlineDefaults),\n};\n\nconst bodyDefaults: TypographyConfiguration = {\n\tlineHeight: 'loose',\n\tfontWeight: 'regular',\n\tfontStyle: null,\n\tunit: 'rem',\n};\n\nexport const body: TypographyFunctions<BodySizes> = {\n\txsmall: fontStyleFunction('body', 'xsmall', bodyDefaults),\n\tsmall: fontStyleFunction('body', 'small', bodyDefaults),\n\tmedium: fontStyleFunction('body', 'medium', bodyDefaults),\n};\n\nconst textSansDefaults: TypographyConfiguration = {\n\tlineHeight: 'regular',\n\tfontWeight: 'regular',\n\tfontStyle: null,\n\tunit: 'rem',\n};\nexport const textSans: TypographyFunctions<TextSansSizes> = {\n\txxsmall: fontStyleFunction('textSans', 'xxsmall', textSansDefaults),\n\txsmall: fontStyleFunction('textSans', 'xsmall', textSansDefaults),\n\tsmall: fontStyleFunction('textSans', 'small', textSansDefaults),\n\tmedium: fontStyleFunction('textSans', 'medium', textSansDefaults),\n\tlarge: fontStyleFunction('textSans', 'large', textSansDefaults),\n\txlarge: fontStyleFunction('textSans', 'xlarge', textSansDefaults),\n\txxlarge: fontStyleFunction('textSans', 'xxlarge', textSansDefaults),\n\txxxlarge: fontStyleFunction('textSans', 'xxxlarge', textSansDefaults),\n};\n","import {\n\tbody as bodyAsObj,\n\theadline as headlineAsObj,\n\ttextSans as textSansAsObj,\n\ttitlepiece as titlepieceAsObj,\n} from './api';\nimport { fontStyleToStringFunction } from './font-styles';\nimport type {\n\tBodySizes,\n\tHeadlineSizes,\n\tTextSansSizes,\n\tTitlepieceSizes,\n\tTypographyStrFunctions,\n} from './types';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--titlepiece) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/358767)\n *\n * ```\n * font-family: 'GT Guardian Titlepiece';\n * ```\n */\nexport const titlepiece: TypographyStrFunctions<TitlepieceSizes> = {\n\tsmall: fontStyleToStringFunction(titlepieceAsObj.small),\n\tmedium: fontStyleToStringFunction(titlepieceAsObj.medium),\n\tlarge: fontStyleToStringFunction(titlepieceAsObj.large),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--headline) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/7310bd)\n *\n * ```\n * font-family: 'GH Guardian Headline';\n * ```\n */\nexport const headline: TypographyStrFunctions<HeadlineSizes> = {\n\txxxsmall: fontStyleToStringFunction(headlineAsObj.xxxsmall),\n\txxsmall: fontStyleToStringFunction(headlineAsObj.xxsmall),\n\txsmall: fontStyleToStringFunction(headlineAsObj.xsmall),\n\tsmall: fontStyleToStringFunction(headlineAsObj.small),\n\tmedium: fontStyleToStringFunction(headlineAsObj.medium),\n\tlarge: fontStyleToStringFunction(headlineAsObj.large),\n\txlarge: fontStyleToStringFunction(headlineAsObj.xlarge),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--body) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/88cd8e)\n *\n * ```\n * font-family: 'GuardianTextEgyptian';\n * ```\n */\nexport const body: TypographyStrFunctions<BodySizes> = {\n\txsmall: fontStyleToStringFunction(bodyAsObj.xsmall),\n\tsmall: fontStyleToStringFunction(bodyAsObj.small),\n\tmedium: fontStyleToStringFunction(bodyAsObj.medium),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--text-sans) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/076605)\n *\n * ```\n * font-family: 'GuardianTextSans';\n * ```\n */\nexport const textSans: TypographyStrFunctions<TextSansSizes> = {\n\txxsmall: fontStyleToStringFunction(textSansAsObj.xxsmall),\n\txsmall: fontStyleToStringFunction(textSansAsObj.xsmall),\n\tsmall: fontStyleToStringFunction(textSansAsObj.small),\n\tmedium: fontStyleToStringFunction(textSansAsObj.medium),\n\tlarge: fontStyleToStringFunction(textSansAsObj.large),\n\txlarge: fontStyleToStringFunction(textSansAsObj.xlarge),\n\txxlarge: fontStyleToStringFunction(textSansAsObj.xxlarge),\n\txxxlarge: fontStyleToStringFunction(textSansAsObj.xxxlarge),\n};\n\nexport {\n\tbodySizes,\n\theadlineSizes,\n\tremBodySizes,\n\tremHeadlineSizes,\n\tremTextSansSizes,\n\tremTitlepieceSizes,\n\ttextSansSizes,\n\ttitlepieceSizes,\n\tfonts,\n\tlineHeights,\n\tfontWeights,\n} from './data';\n\nexport type {\n\tScaleUnit,\n\tCategory,\n\tLineHeight,\n\tFontWeight,\n\tFontStyle,\n\tFontWeightDefinition,\n} from './types';\n","export const rootPixelFontSize = 16;\nexport const pxToRem = (px: number): number => px / rootPixelFontSize;\n"],"names":["colors","palette","brand","brandAlt","neutral","error","success","news","opinion","sport","culture","lifestyle","labs","specialReport","specialReportAlt","focus","background","primary","secondary","inverse","ctaPrimary","ctaPrimaryHover","ctaSecondary","ctaSecondaryHover","ctaTertiaryHover","input","inputChecked","brandAltBackground","border","ctaTertiary","inputHover","inputActive","focusHalo","line","text","supporting","anchorPrimary","anchorSecondary","userInput","inputLabel","inputError","inputLabelSupporting","groupLabel","groupLabelSupporting","newsInverse","brandText","anchorPrimaryHover","brandAltText","textSans","xxsmall","xsmall","small","medium","large","xlarge","xxlarge","xxxlarge","body","headline","xxxsmall","titlepiece","pxToRem","pxTextSizes","fonts","lineHeights","tight","regular","loose","fontWeights","light","bold","availableFontWeights","italicsFontWeights","underlineThickness","remTextSizes","fontStyle","hasItalic","defaults","options","remTextSize","Number","category","level","undefined","lineHeight","finalFontConfiguration","fontWeight","fontSize","fontFamily","textDecorationThickness","typographyFunction","unit","fontStyleFunction","titlepieceDefaults","headlineDefaults","bodyDefaults","textSansDefaults","fontStyleToStringFunction","titlepieceAsObj","titlepiece$1","headline$1","headlineAsObj","body$1","bodyAsObj","textSans$1","textSansAsObj","px"],"sourceRoot":""}