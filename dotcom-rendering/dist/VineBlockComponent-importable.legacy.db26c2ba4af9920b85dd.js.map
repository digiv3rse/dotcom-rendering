{"version":3,"file":"VineBlockComponent-importable.legacy.db26c2ba4af9920b85dd.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/ClickToView.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/MaintainAspectRatio.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/VineBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/Button.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/vendor/icons/SvgCheckmark.tsx"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { background, border, space, textSans, } from '@guardian/source-foundations';\nimport { Button, SvgCheckmark } from '@guardian/source-react-components';\nimport { useState } from 'react';\nconst roleTextSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return textSans.medium({ lineHeight: 'regular' });\n        }\n        case 'halfWidth':\n        case 'supporting':\n        case 'thumbnail': {\n            return textSans.small({ lineHeight: 'regular' });\n        }\n    }\n};\nconst roleHeadlineSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return textSans.large({\n                fontWeight: 'bold',\n                lineHeight: 'regular',\n            });\n        }\n        case 'halfWidth':\n        case 'supporting':\n        case 'thumbnail': {\n            return textSans.medium({\n                fontWeight: 'bold',\n                lineHeight: 'regular',\n            });\n        }\n    }\n};\nconst roleButtonSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return 'default';\n        }\n        case 'halfWidth':\n        case 'supporting':\n            return 'small';\n        case 'thumbnail': {\n            return 'xsmall';\n        }\n    }\n};\nconst roleButtonText = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase':\n        case 'halfWidth':\n        case 'supporting': {\n            return 'Allow and continue';\n        }\n        case 'thumbnail': {\n            return 'Allow';\n        }\n    }\n};\nconst shouldDisplayOverlay = ({ isTracking, isOverlayClicked, isMainMedia, }) => {\n    if (isMainMedia || !isTracking) {\n        return false;\n    }\n    if (isOverlayClicked) {\n        return false;\n    }\n    return true;\n};\nexport const ClickToView = ({ children, role = 'inline', onAccept, isTracking, isMainMedia, source, sourceDomain = 'unknown', }) => {\n    const [isOverlayClicked, setIsOverlayClicked] = useState(false);\n    const handleClick = () => {\n        setIsOverlayClicked(true);\n        if (onAccept) {\n            setTimeout(() => onAccept());\n        }\n    };\n    const textSize = roleTextSize(role);\n    if (shouldDisplayOverlay({\n        isTracking,\n        isOverlayClicked,\n        isMainMedia,\n    })) {\n        return (_jsxs(\"div\", { css: css `\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbackground: ${background.secondary};\n\t\t\t\t\tborder: 1px solid ${border.secondary};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tpadding: ${space[1]}px ${space[6]}px ${space[3]}px;\n\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t`, \"data-component\": `click-to-view:${sourceDomain}`, children: [_jsx(\"div\", { css: css `\n\t\t\t\t\t\t${roleHeadlineSize(role)}\n\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t`, children: source\n                        ? `Allow ${source} content?`\n                        : 'Allow content provided by a third party?' }), _jsx(\"p\", { css: css `\n\t\t\t\t\t\t${textSize}\n\t\t\t\t\t`, children: source ? (_jsxs(_Fragment, { children: [\"This article includes content provided by \", source, \". We ask for your permission before anything is loaded, as they may be using cookies and other technologies. To view this content,\", ' ', _jsx(\"strong\", { children: \"click 'Allow and continue'\" }), \".\"] })) : (_jsxs(_Fragment, { children: [\"This article includes content hosted on\", ' ', sourceDomain, \". We ask for your permission before anything is loaded, as the provider may be using cookies and other technologies. To view this content,\", ' ', _jsx(\"strong\", { children: \"click 'Allow and continue'\" }), \".\"] })) }), _jsx(\"div\", { css: css `\n\t\t\t\t\t\tmargin-top: ${space[5]}px;\n\t\t\t\t\t`, children: _jsx(Button, { priority: \"primary\", size: roleButtonSize(role), icon: _jsx(SvgCheckmark, {}), iconSide: \"left\", onClick: () => handleClick(), \"data-cy\": \"click-to-view-button\", \"data-link-name\": \"allow-button\", children: roleButtonText(role) }) })] }));\n    }\n    return _jsx(_Fragment, { children: children });\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nexport const MaintainAspectRatio = ({ height, width, children }) => (\n/* https://css-tricks.com/aspect-ratio-boxes/ */\n_jsx(\"div\", { css: css `\n\t\t\t/* position relative to contain the absolutely positioned iframe plus any Overlay image */\n\t\t\tposition: relative;\n\t\t\tpadding-bottom: ${(height / width) * 100}%;\n\n\t\t\tiframe {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\t\t`, children: children }));\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { textSans } from '@guardian/source-foundations';\nimport { ClickToView } from './ClickToView';\nimport { MaintainAspectRatio } from './MaintainAspectRatio';\nconst titleStyle = css `\n\tp {\n\t\t${textSans.large()};\n\t\tfont-weight: bold;\n\t}\n`;\nexport const VineBlockComponent = ({ element, role, isTracking, source, sourceDomain, }) => {\n    return (_jsx(ClickToView, { role: role, isTracking: isTracking, source: source, sourceDomain: sourceDomain, children: !!(element.url && element.width && element.height) && (_jsxs(\"div\", { children: [_jsx(\"div\", { css: titleStyle, children: _jsx(\"p\", { children: element.title }) }), _jsx(MaintainAspectRatio, { height: element.height, width: element.width, children: _jsxs(\"div\", { css: \"element-vine\", children: [_jsx(\"iframe\", { title: \"vine-embed\", src: element.url, height: element.height, width: element.width }), _jsx(\"script\", { async: true, src: \"https://platform.vine.co/static/scripts/embed.js\" })] }) })] })) }));\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { ButtonHTMLAttributes } from 'react';\nimport { buttonContents } from './shared';\nimport { buttonStyles } from './styles';\nimport type { SharedButtonProps } from './types';\n\nexport interface ButtonProps\n\textends SharedButtonProps,\n\t\tButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_button--primary-priority-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/435225-button) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/button/Button.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Buttons enable users to make choices or perform actions.\n *\n */\nexport const Button = ({\n\tpriority,\n\tsize,\n\ticon: iconSvg,\n\ticonSide,\n\thideLabel,\n\tnudgeIcon,\n\ttype = 'button',\n\tisLoading = false,\n\tloadingAnnouncement = 'Loading',\n\tcssOverrides,\n\tchildren,\n\t...props\n}: ButtonProps): EmotionJSX.Element => (\n\t<button\n\t\tcss={buttonStyles({\n\t\t\tsize,\n\t\t\tpriority,\n\t\t\ticon: iconSvg,\n\t\t\thideLabel,\n\t\t\ticonSide,\n\t\t\tnudgeIcon,\n\t\t\tcssOverrides,\n\t\t\tisLoading,\n\t\t})}\n\t\ttype={type}\n\t\taria-live=\"polite\"\n\t\taria-label={isLoading ? loadingAnnouncement : undefined}\n\t\t{...props}\n\t>\n\t\t{buttonContents({\n\t\t\thideLabel,\n\t\t\ticonSvg,\n\t\t\tisLoading,\n\t\t\tchildren,\n\t\t})}\n\t</button>\n);\n","// DO NOT EDIT\n// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { iconSize, visuallyHidden } from '@guardian/source-foundations';\nimport type { IconProps } from '../../src/@types/Icons';\n\nconst Svg = ({ size }: IconProps): EmotionJSX.Element => (\n\t<svg\n\t\twidth={size ? iconSize[size] : undefined}\n\t\theight={undefined}\n\t\tviewBox=\"-3 -3 30 30\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable={false}\n\t\taria-hidden={true}\n\t>\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M3.011 11.883 2 12.896l5.057 7.08h.48L22 5.005l-1.011-.986L7.537 16.207l-4.526-4.324Z\"\n\t\t/>\n\t</svg>\n);\n\nexport const SvgCheckmark = ({\n\tsize,\n\tisAnnouncedByScreenReader = false,\n}: IconProps): EmotionJSX.Element => (\n\t<>\n\t\t<Svg size={size} />\n\t\t{isAnnouncedByScreenReader ? (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\tCheckmark\n\t\t\t</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</>\n);\n"],"names":["roleHeadlineSize","role","textSans","fontWeight","lineHeight","roleButtonSize","roleButtonText","ClickToView","children","onAccept","isTracking","isMainMedia","source","sourceDomain","useState","isOverlayClicked","setIsOverlayClicked","textSize","roleTextSize","_jsx","_Fragment","_jsxs","css","background","border","space","Button","priority","size","icon","SvgCheckmark","iconSide","onClick","setTimeout","MaintainAspectRatio","height","width","titleStyle","VineBlockComponent","element","url","title","src","async","hideLabel","nudgeIcon","cssOverrides","isLoading","type","iconSvg","isAnnouncedByScreenReader","jsxs","visuallyHidden"],"sourceRoot":""}