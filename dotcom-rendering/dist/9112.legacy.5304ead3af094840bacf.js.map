{"version":3,"file":"9112.legacy.5304ead3af094840bacf.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticleDesign.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticlePillar.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticleSpecial.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/accessibility/description-id.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/accessibility/generate-source-id.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/utils/resets.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/utils/supports-queries.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/Button.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/label/Legend.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/label/SupportingText.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/label/Text.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/label/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/label/theme.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/radio/Radio.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/inline/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/inline/Inline.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/stack/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/stack/Stack.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/radio/RadioGroup.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/radio/theme.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/radio/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/user-feedback/InlineError.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/user-feedback/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/user-feedback/theme.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/vendor/icons/SvgAlertTriangle.tsx"],"sourcesContent":["export enum ArticleDesign {\n\tStandard,\n\tGallery,\n\tAudio,\n\tVideo,\n\tReview,\n\tAnalysis,\n\tExplainer,\n\tComment,\n\tLetter,\n\tFeature,\n\tLiveBlog,\n\tDeadBlog,\n\tRecipe,\n\tMatchReport,\n\tInterview,\n\tEditorial,\n\tQuiz,\n\tInteractive,\n\tPhotoEssay,\n\tPrintShop,\n\tObituary,\n\tCorrection,\n\tFullPageInteractive,\n\tNewsletterSignup,\n\tTimeline,\n\tProfile,\n}\n","export enum ArticlePillar {\n\tNews = 0,\n\tOpinion = 1,\n\tSport = 2,\n\tCulture = 3,\n\tLifestyle = 4,\n}\n","export enum ArticleSpecial {\n\tSpecialReport = 5,\n\tLabs = 6,\n\tSpecialReportAlt = 7,\n}\n","/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_descriptionid--page)\n *\n * Takes the ID of an element and generates a new ID. This should be set as the ID of an element that describes the first element. The generated ID should also be passed to the `aria-describedby` attribute on the first element.\n *\n * @param {string} id - ID of an element\n * @returns {string} ID of an element that describes the first element\n *\n * @example\n *\t\t<form>\n *\t\t\t<input id={id} type=\"text\" aria-describedby={descriptionId(id)} />\n *\t\t\t<p class=\"error\" id={descriptionId(id)} />\n *\t\t</form>\n */\nexport const descriptionId = (id: string): string => `${id}_description`;\n","let sourceIdIndex = 0;\n\nexport const generateSourceId = (): string =>\n\t`src-component-${sourceIdIndex++}`;\n","import { palette } from '../colour/palette';\n\n////////////////////////////\n// Element specific resets\n////////////////////////////\n// TODO: bring element-specific resets into defaults. They can then be removed\n// from individual components\n\nconst legend = `\n\tpadding: 0;\n`;\n\nconst fieldset = `\n\tborder: 0;\n\tpadding: 0;\n\tmargin: 0;\n`;\n\n/*\n * Remove styling of invalid input elements that gets applied in Firefox\n */\nconst input = `\n\t&:invalid {\n\t\tbox-shadow: none;\n\t}\n`;\n\n////////////////////////////\n// Default resets\n////////////////////////////\n// TODO: currently including this is optional but one day will be required\n// see https://github.com/orgs/guardian/teams/client-side-infra/discussions/17\nconst defaults = `\n\t*, *:before, *:after {\n        box-sizing: border-box;\n    }\n    html {\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        /* always show the vertical scroll bar to stop the page\n         * jumping about when navigating between pages where\n         * one has content shorter than the viewport */\n        overflow-y: scroll;\n    }\n    html, body {\n        text-rendering: optimizeLegibility;\n        font-feature-settings: 'kern';\n        font-kerning: normal; /* Safari 7+, Firefox 24+, Chrome 33(?)+, Opera 21 */\n        font-variant-ligatures: common-ligatures;\n    }\n    body {\n        background-color: ${palette.neutral[100]};\n        color: ${palette.neutral[7]};\n    }\n    em {\n        font-style: italic;\n    }\n`;\n\n////////////////////////////\n// Meyer resets\n////////////////////////////\n// Originally sourced from https://github.com/shannonmoeller/reset-css\n// and https://meyerweb.com/eric/tools/css/reset/\nconst resetCSS = `\n\thtml, body, div, span, applet, object, iframe,\n\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\ta, abbr, acronym, address, big, cite, code,\n\tdel, dfn, em, img, ins, kbd, q, s, samp,\n\tsmall, strike, strong, sub, sup, tt, var,\n\tb, u, i, center,\n\tdl, dt, dd, menu, ol, ul, li,\n\tfieldset, form, label, legend,\n\ttable, caption, tbody, tfoot, thead, tr, th, td,\n\tarticle, aside, canvas, details, embed,\n\tfigure, figcaption, footer, header, hgroup,\n\tmain, menu, nav, output, ruby, section, summary,\n\ttime, mark, audio, video {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\tfont-size: 100%;\n\t\tfont: inherit;\n\t\tvertical-align: baseline;\n\t}\n\t/* HTML5 display-role reset for older browsers */\n\tarticle, aside, details, figcaption, figure,\n\tfooter, header, hgroup, main, menu, nav, section {\n\t\tdisplay: block;\n\t}\n\t/* HTML5 hidden-attribute fix for newer browsers */\n\t*[hidden] {\n\t\tdisplay: none;\n\t}\n\tbody {\n\t\tline-height: 1;\n\t}\n\tmenu, ol, ul {\n\t\tlist-style: none;\n\t}\n\tblockquote, q {\n\t\tquotes: none;\n\t}\n\tblockquote:before, blockquote:after,\n\tq:before, q:after {\n\t\tcontent: '';\n\t\tcontent: none;\n\t}\n\ttable {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t}\n\n\t${defaults}\n`;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_css-reset--page)\n *\n * `resets.resetCSS`: sensible default CSS rules to provide a base for a consistent environment across projects and browsers.\n */\nexport const resets = {\n\tlegend,\n\tfieldset,\n\t/** @deprecated This will be removed in a future release, as it relies on the Emotion framework */\n\tinput,\n\tdefaults,\n\tresetCSS,\n};\n","export const appearance =\n\t'(appearance: none) or (-webkit-appearance: none) or (-moz-appearance: none)';\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { ButtonHTMLAttributes } from 'react';\nimport { buttonContents } from './shared';\nimport { buttonStyles } from './styles';\nimport type { SharedButtonProps } from './types';\n\nexport interface ButtonProps\n\textends SharedButtonProps,\n\t\tButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_button--primary-priority-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/435225-button) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/button/Button.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Buttons enable users to make choices or perform actions.\n *\n */\nexport const Button = ({\n\tpriority,\n\tsize,\n\ticon: iconSvg,\n\ticonSide,\n\thideLabel,\n\tnudgeIcon,\n\ttype = 'button',\n\tisLoading = false,\n\tloadingAnnouncement = 'Loading',\n\tcssOverrides,\n\tchildren,\n\t...props\n}: ButtonProps): EmotionJSX.Element => (\n\t<button\n\t\tcss={buttonStyles({\n\t\t\tsize,\n\t\t\tpriority,\n\t\t\ticon: iconSvg,\n\t\t\thideLabel,\n\t\t\ticonSide,\n\t\t\tnudgeIcon,\n\t\t\tcssOverrides,\n\t\t\tisLoading,\n\t\t})}\n\t\ttype={type}\n\t\taria-live=\"polite\"\n\t\taria-label={isLoading ? loadingAnnouncement : undefined}\n\t\t{...props}\n\t>\n\t\t{buttonContents({\n\t\t\thideLabel,\n\t\t\ticonSvg,\n\t\t\tisLoading,\n\t\t\tchildren,\n\t\t})}\n\t</button>\n);\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { legend } from './styles';\nimport { SupportingText } from './SupportingText';\nimport { Text } from './Text';\nimport type { LegendProps } from './types';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_legend--default-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/40151e-label/b/86af7d) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/label/Legend.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * A legend describes a group of fields, such as a checkbox group or radio group.\n *\n * Legend is used by other Source components, such as RadioGroup. Only use Legend\n * if you are building your own form components.\n *\n * The following themes are supported: `light`, `brand`.\n * */\nexport const Legend = ({\n\ttext,\n\tsupporting,\n\toptional = false,\n\thideLabel = false,\n\tcssOverrides,\n\t...props\n}: LegendProps): EmotionJSX.Element => {\n\treturn (\n\t\t<>\n\t\t\t<legend css={[legend, cssOverrides]} {...props}>\n\t\t\t\t<Text text={text} optional={optional} hideLabel={hideLabel} />\n\t\t\t</legend>\n\t\t\t{supporting ? (\n\t\t\t\t<SupportingText hideLabel={hideLabel}>{supporting}</SupportingText>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { visuallyHidden as _visuallyHidden } from '@guardian/source-foundations';\nimport type { ReactNode } from 'react';\nimport type { Theme } from '../@types/Theme';\nimport { supportingText } from './styles';\n\nconst visuallyHidden = css`\n\t${_visuallyHidden}\n`;\n\nexport const SupportingText = ({\n\thideLabel,\n\tchildren,\n}: {\n\thideLabel?: boolean;\n\tchildren: ReactNode;\n}): EmotionJSX.Element => {\n\treturn (\n\t\t<p\n\t\t\tcss={(theme: Theme) => [\n\t\t\t\tsupportingText(theme.label),\n\t\t\t\thideLabel ? visuallyHidden : '',\n\t\t\t]}\n\t\t>\n\t\t\t{children}\n\t\t</p>\n\t);\n};\n","import { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { visuallyHidden as _visuallyHidden } from '@guardian/source-foundations';\nimport type { Theme } from '../@types/Theme';\nimport { labelText, optionalText } from './styles';\nimport type { LabelProps } from './types';\n\nconst visuallyHidden = css`\n\t${_visuallyHidden}\n`;\n\nexport const Text = ({\n\ttext,\n\toptional,\n\thideLabel,\n}: LabelProps): EmotionJSX.Element => (\n\t<div\n\t\tcss={(theme: Theme) => [\n\t\t\tlabelText(theme.label),\n\t\t\thideLabel ? visuallyHidden : '',\n\t\t]}\n\t>\n\t\t{text}{' '}\n\t\t{optional ? (\n\t\t\t<span css={(theme: Theme) => optionalText(theme.label)}>Optional</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</div>\n);\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { resets, textSans } from '@guardian/source-foundations';\nimport { labelThemeDefault } from './theme';\n\nexport const legend = css`\n\t${resets.legend};\n`;\n\nexport const labelText = (\n\tlabel = labelThemeDefault.label,\n): SerializedStyles => css`\n\t${textSans.medium({ fontWeight: 'bold' })};\n\tcolor: ${label.textLabel};\n`;\n\nexport const optionalText = (\n\tlabel = labelThemeDefault.label,\n): SerializedStyles => css`\n\t${textSans.small()};\n\tcolor: ${label.textOptional};\n\tfont-style: italic;\n`;\n\nexport const supportingText = (\n\tlabel = labelThemeDefault.label,\n): SerializedStyles => css`\n\t${textSans.small()};\n\tcolor: ${label.textSupporting};\n\tmargin: 2px 0 0;\n`;\n","import { palette } from '@guardian/source-foundations';\n\nexport const labelThemeDefault = {\n\tlabel: {\n\t\ttextLabel: palette.neutral[7],\n\t\ttextOptional: palette.neutral[46],\n\t\ttextSupporting: palette.neutral[46],\n\t\ttextError: palette.error[400],\n\t\ttextSuccess: palette.success[400],\n\t},\n};\n\nexport const labelThemeBrand = {\n\tlabel: {\n\t\ttextLabel: palette.neutral[100],\n\t\ttextOptional: palette.brand[800],\n\t\ttextSupporting: palette.brand[800],\n\t\ttextError: palette.error[500],\n\t\ttextSuccess: palette.success[500],\n\t},\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { generateSourceId } from '@guardian/source-foundations';\nimport type { InputHTMLAttributes, ReactNode } from 'react';\nimport type { Props } from '../@types/Props';\nimport type { Theme } from '../@types/Theme';\nimport {\n\tlabel,\n\tlabelText,\n\tlabelTextWithSupportingText,\n\tlabelWithSupportingText,\n\tradio,\n\tradioContainer,\n\tsupportingText,\n} from './styles';\n\nconst LabelText = ({\n\thasSupportingText,\n\tchildren,\n}: {\n\thasSupportingText?: boolean;\n\tchildren: ReactNode;\n}) => {\n\treturn (\n\t\t<div\n\t\t\tcss={(theme: Theme) => [\n\t\t\t\thasSupportingText ? labelTextWithSupportingText : '',\n\t\t\t\tlabelText(theme.radio),\n\t\t\t]}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst SupportingText = ({ children }: { children: ReactNode }) => {\n\treturn (\n\t\t<div css={(theme: Theme) => supportingText(theme.radio)}>{children}</div>\n\t);\n};\n\nexport interface RadioProps\n\textends InputHTMLAttributes<HTMLInputElement>,\n\t\tProps {\n\tid?: string;\n\t/**\n\t * Whether radio button is checked. This is necessary when using the\n\t * [controlled approach](https://reactjs.org/docs/forms.html#controlled-components)\n\t * (recommended) to form state management.\n\t *\n\t * _Note: if you pass the `checked` prop, you MUST also pass an `onChange`\n\t * handler, or the field will be rendered as read-only._\n\t */\n\tchecked?: boolean;\n\t/**\n\t * When using the [uncontrolled approach](https://reactjs.org/docs/uncontrolled-components.html),\n\t * use defaultChecked to indicate the initially checked button.\n\t */\n\tdefaultChecked?: boolean;\n\t/**\n\t * Appears to the right of the radio button. If a visible label is\n\t * undesirable (e.g. for layout reasons) use `aria-label` instead.\n\t *\n\t * If label is omitted, supporting text will not appear either.\n\t */\n\tlabel?: string | ReactNode;\n\t/**\n\t * Additional text or a component that appears below the label\n\t */\n\tsupporting?: string | ReactNode;\n}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_radio--default-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/2891dd-radio-button/b/46940d) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/radio/Radio.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Radio buttons allow users to make a single selection from a set of options.\n *\n * The following themes are supported: `default`, `brand`\n */\nexport const Radio = ({\n\tid,\n\tlabel: labelContent,\n\tvalue,\n\tsupporting,\n\tchecked,\n\tdefaultChecked,\n\tcssOverrides,\n\t...props\n}: RadioProps): EmotionJSX.Element => {\n\tconst radioId = id ?? generateSourceId();\n\tconst isChecked = (): boolean => {\n\t\tif (checked != null) {\n\t\t\treturn checked;\n\t\t}\n\n\t\treturn !!defaultChecked;\n\t};\n\tconst radioControl = (\n\t\t<input\n\t\t\tid={radioId}\n\t\t\ttype=\"radio\"\n\t\t\tcss={(theme: Theme) => [radio(theme.radio), cssOverrides]}\n\t\t\tvalue={value}\n\t\t\tdefaultChecked={defaultChecked != null ? defaultChecked : undefined}\n\t\t\tchecked={checked != null ? isChecked() : undefined}\n\t\t\t{...props}\n\t\t/>\n\t);\n\n\tconst labelledRadioControl = (\n\t\t<div\n\t\t\tcss={(theme: Theme) => [\n\t\t\t\tradioContainer(theme.radio),\n\t\t\t\tsupporting ? labelWithSupportingText : '',\n\t\t\t]}\n\t\t>\n\t\t\t{radioControl}\n\t\t\t<label htmlFor={radioId} css={label}>\n\t\t\t\t{supporting ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<LabelText hasSupportingText={true}>{labelContent}</LabelText>\n\t\t\t\t\t\t<SupportingText>{supporting}</SupportingText>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<LabelText>{labelContent}</LabelText>\n\t\t\t\t)}\n\t\t\t</label>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<>{labelContent || supporting ? labelledRadioControl : radioControl}</>\n\t);\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { space } from '@guardian/source-foundations';\nimport type { InlineSpace } from './types';\n\nexport const inline = css`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`;\n\nconst inlineSpaceStyle = (number: InlineSpace): SerializedStyles => css`\n\tmargin-left: -${space[number]}px;\n\t& > * {\n\t\tmargin-left: ${space[number]}px;\n\t\tmargin-bottom: ${space[number]}px;\n\t}\n`;\n\nexport const inlineSpace: {\n\t1: SerializedStyles;\n\t2: SerializedStyles;\n\t3: SerializedStyles;\n\t4: SerializedStyles;\n\t5: SerializedStyles;\n\t6: SerializedStyles;\n\t9: SerializedStyles;\n\t12: SerializedStyles;\n\t24: SerializedStyles;\n} = {\n\t1: inlineSpaceStyle(1),\n\t2: inlineSpaceStyle(2),\n\t3: inlineSpaceStyle(3),\n\t4: inlineSpaceStyle(4),\n\t5: inlineSpaceStyle(5),\n\t6: inlineSpaceStyle(6),\n\t9: inlineSpaceStyle(9),\n\t12: inlineSpaceStyle(12),\n\t24: inlineSpaceStyle(24),\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { HTMLAttributes } from 'react';\nimport type { Props } from '../@types/Props';\nimport { inline, inlineSpace } from './styles';\nimport type { InlineSpace } from './types';\n\nexport interface InlineProps extends HTMLAttributes<HTMLDivElement>, Props {\n\t/**\n\t * [Units of space](https://www.theguardian.design/2a1e5182b/p/449bd5-space) between inline items (one unit is 4px).\n\t */\n\tspace?: InlineSpace;\n}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_inline--no-space) •\n * [Design System](https://theguardian.design/2a1e5182b/p/99f3c1-inline) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/inline/Inline.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * `Inline` components will be laid out one next to the other.\n */\nexport const Inline = ({\n\tcssOverrides,\n\tchildren,\n\tspace,\n\t...props\n}: InlineProps): EmotionJSX.Element => {\n\treturn (\n\t\t<div\n\t\t\tcss={[inline, space ? inlineSpace[space] : '', cssOverrides]}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { space } from '@guardian/source-foundations';\nimport type { StackSpace } from './Stack';\n\nexport const stack = css`\n\t& > * {\n\t\twidth: 100%;\n\t}\n`;\n\nconst stackSpaceStyle = (number: StackSpace): SerializedStyles => css`\n\t& > * + * {\n\t\tmargin-top: ${space[number]}px;\n\t}\n`;\n\nexport const stackSpace: {\n\t1: SerializedStyles;\n\t2: SerializedStyles;\n\t3: SerializedStyles;\n\t4: SerializedStyles;\n\t5: SerializedStyles;\n\t6: SerializedStyles;\n\t9: SerializedStyles;\n\t12: SerializedStyles;\n\t24: SerializedStyles;\n} = {\n\t1: stackSpaceStyle(1),\n\t2: stackSpaceStyle(2),\n\t3: stackSpaceStyle(3),\n\t4: stackSpaceStyle(4),\n\t5: stackSpaceStyle(5),\n\t6: stackSpaceStyle(6),\n\t9: stackSpaceStyle(9),\n\t12: stackSpaceStyle(12),\n\t24: stackSpaceStyle(24),\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { HTMLAttributes } from 'react';\nimport type { Props } from '../@types/Props';\nimport { stack, stackSpace } from './styles';\n\nexport type StackSpace = 1 | 2 | 3 | 4 | 5 | 6 | 9 | 12 | 24;\n\nexport interface StackProps extends HTMLAttributes<HTMLDivElement>, Props {\n\t/**\n\t * [Units of space](https://www.theguardian.design/2a1e5182b/p/449bd5-space) between inline items (one unit is 4px).\n\t */\n\tspace?: StackSpace;\n}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_stack--default) •\n * [Design System](https://theguardian.design/2a1e5182b/p/827581-stack) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/stack/Stack.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * `Stack` components will be stacked one on top of the other.\n */\nexport const Stack = ({\n\tcssOverrides,\n\tchildren,\n\tspace,\n\t...props\n}: StackProps): EmotionJSX.Element => {\n\treturn (\n\t\t<div css={[stack, space ? stackSpace[space] : '', cssOverrides]} {...props}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { descriptionId, generateSourceId } from '@guardian/source-foundations';\nimport type { FieldsetHTMLAttributes } from 'react';\nimport { Children, cloneElement } from 'react';\nimport type { Props } from '../@types/Props';\nimport type { Theme } from '../@types/Theme';\nimport { Inline } from '../inline/Inline';\nimport { Legend } from '../label/Legend';\nimport { Stack } from '../stack/Stack';\nimport { InlineError } from '../user-feedback/InlineError';\nimport { fieldset } from './styles';\n\ntype Orientation = 'vertical' | 'horizontal';\n\nexport interface RadioGroupProps\n\textends FieldsetHTMLAttributes<HTMLFieldSetElement>,\n\t\tProps {\n\tid?: string;\n\t/**\n\t * Appears as a legend at the top of the radio group\n\t */\n\tlabel?: string;\n\t/**\n\t * Visually hides the label\n\t */\n\thideLabel?: boolean;\n\t/**\n\t * Additional text or component that appears below the label\n\t */\n\tsupporting?: string | JSX.Element;\n\t/**\n\t * The direction in which radio buttons are stacked\n\t */\n\torientation?: Orientation;\n\t/**\n\t * If passed, error styling should applies to this radio group. The string appears as an inline error message.\n\t */\n\terror?: string;\n}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_radiogroup--default-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/2891dd-radio-button/b/46940d) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/radio/RadioGroup.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Radio buttons allow users to make a single selection from a set of options.\n *\n * The following themes are supported: `default`, `brand`\n */\nexport const RadioGroup = ({\n\tid,\n\tname,\n\tlabel,\n\thideLabel = false,\n\tsupporting,\n\torientation = 'vertical',\n\terror,\n\tcssOverrides,\n\tchildren,\n\t...props\n}: RadioGroupProps): EmotionJSX.Element => {\n\tconst groupId = id ?? generateSourceId();\n\tconst legend = label ? (\n\t\t<Legend text={label} supporting={supporting} hideLabel={hideLabel} />\n\t) : (\n\t\t''\n\t);\n\tconst message = error && (\n\t\t<InlineError id={descriptionId(groupId)}>{error}</InlineError>\n\t);\n\n\tconst radioContainers = (\n\t\t<>\n\t\t\t{Children.map(children, (child) => {\n\t\t\t\treturn cloneElement(\n\t\t\t\t\tchild as React.ReactElement,\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\terror\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t'aria-describedby': descriptionId(groupId),\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n\n\treturn (\n\t\t<fieldset\n\t\t\taria-invalid={!!error}\n\t\t\tid={groupId}\n\t\t\tcss={(theme: Theme) => [fieldset(theme.radio), cssOverrides]}\n\t\t\t{...props}\n\t\t>\n\t\t\t{legend}\n\t\t\t{message}\n\t\t\t{orientation === 'vertical' ? (\n\t\t\t\t<Stack>{radioContainers}</Stack>\n\t\t\t) : (\n\t\t\t\t<Inline space={5}>{radioContainers}</Inline>\n\t\t\t)}\n\t\t</fieldset>\n\t);\n};\n","import { palette } from '@guardian/source-foundations';\nimport { labelThemeBrand, labelThemeDefault } from '../label/theme';\nimport {\n\tuserFeedbackThemeBrand,\n\tuserFeedbackThemeDefault,\n} from '../user-feedback/theme';\n\nexport const radioThemeDefault = {\n\tradio: {\n\t\tborderHover: palette.focus[400],\n\t\tborder: palette.neutral[60],\n\t\tbackgroundChecked: palette.focus[400],\n\t\ttextLabel: palette.neutral[7],\n\t\ttextLabelSupporting: palette.neutral[46],\n\t\tborderError: palette.error[400],\n\t},\n\t...labelThemeDefault,\n\t...userFeedbackThemeDefault,\n};\n\nexport const radioThemeBrand = {\n\tradio: {\n\t\tborderHover: palette.neutral[100],\n\t\tborder: palette.brand[800],\n\t\tbackgroundChecked: palette.neutral[100],\n\t\ttextLabel: palette.neutral[100],\n\t\ttextLabelSupporting: palette.brand[800],\n\t\tborderError: palette.error[500],\n\t},\n\t...labelThemeBrand,\n\t...userFeedbackThemeBrand,\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport {\n\tappearance,\n\tfocusHalo,\n\theight,\n\tresets,\n\tspace,\n\ttextSans,\n\ttransitions,\n\twidth,\n} from '@guardian/source-foundations';\nimport { radioThemeDefault } from './theme';\n\nexport const fieldset = (\n\tradio = radioThemeDefault.radio,\n): SerializedStyles => css`\n\t${resets.fieldset};\n\n\t&[aria-invalid='true'] input {\n\t\tborder: 4px solid ${radio.borderError};\n\n\t\t&:not(:checked):hover,\n\t\t&:active {\n\t\t\tborder: 2px solid ${radio.borderHover};\n\t\t}\n\t}\n`;\n\nexport const radioContainer = (\n\tradio = radioThemeDefault.radio,\n): SerializedStyles => css`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tmin-height: ${height.inputMedium}px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tinput {\n\t\t\tborder-color: ${radio.borderHover};\n\t\t}\n\t}\n`;\n\nexport const label: SerializedStyles = css`\n\tcursor: pointer;\n`;\n\nexport const labelWithSupportingText = css`\n\talign-items: flex-start;\n\tmargin-bottom: ${space[3]}px;\n`;\n\nexport const radio = (radio = radioThemeDefault.radio): SerializedStyles => css`\n\tflex: 0 0 auto;\n\tcursor: pointer;\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\twidth: ${width.inputXsmall}px;\n\theight: ${height.inputXsmall}px;\n\tmargin: 0 ${space[2]}px 0 0;\n\n\tborder: 2px solid currentColor;\n\tborder-radius: 50%;\n\tposition: relative;\n\ttransition: box-shadow ${transitions.short};\n\ttransition-delay: 0.08s;\n\n\tcolor: ${radio.border};\n\n\t&:checked {\n\t\tcolor: ${radio.backgroundChecked};\n\t}\n\n\t&:focus {\n\t\t${focusHalo};\n\t}\n\n\t/*\n\tTake care: Emotion extracts @supports blocks and moves them below\n\tall other <style> elements, making these values hard to override.\n\tI have chosen to keep these styles in the @supports block as\n\tmoving them out makes radio buttons look horrible on older browsers\n\t*/\n\t@supports (${appearance}) {\n\t\tappearance: none;\n\t\tbackground-color: transparent;\n\n\t\t&:after {\n\t\t\tbackground: currentColor;\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tborder-radius: 50%;\n\t\t\ttransform: scale(0);\n\t\t\ttransform-origin: center;\n\t\t\ttransition: transform ${transitions.short};\n\t\t}\n\n\t\t&:checked {\n\t\t\t&:after {\n\t\t\t\ttransform: scale(0.6);\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const labelText = (\n\tradio = radioThemeDefault.radio,\n): SerializedStyles => css`\n\t${textSans.medium()};\n\tcolor: ${radio.textLabel};\n\twidth: 100%;\n`;\n\nexport const labelTextWithSupportingText = css`\n\t${textSans.medium({ fontWeight: 'bold' })};\n`;\n\nexport const supportingText = (\n\tradio = radioThemeDefault.radio,\n): SerializedStyles => css`\n\t${textSans.small()};\n\tcolor: ${radio.textLabelSupporting};\n`;\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { SvgAlertTriangle } from '../../vendor/icons/SvgAlertTriangle';\nimport type { Theme } from '../@types/Theme';\nimport { inlineError } from './styles';\nimport type { UserFeedbackProps } from './types';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_inlineerror--inline-error-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/108ed3-user-feedback/b/3803b4) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/user-feedback/InlineError.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components-feedback)\n *\n * Used to inform the user when a validation has failed or user error has occurred. These messages indicate what went wrong and how to fix it.\n *\n * The following themes are supported: `default`, `brand`\n */\nexport const InlineError = ({\n\tchildren,\n\tcssOverrides,\n\t...props\n}: UserFeedbackProps): EmotionJSX.Element => (\n\t<span\n\t\tcss={(theme: Theme) => [inlineError(theme.userFeedback), cssOverrides]}\n\t\trole=\"alert\"\n\t\t{...props}\n\t>\n\t\t<SvgAlertTriangle />\n\t\t{children}\n\t</span>\n);\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { remHeight, remWidth, textSans } from '@guardian/source-foundations';\nimport { userFeedbackThemeDefault } from './theme';\n\nconst inlineMessage = css`\n\tdisplay: flex;\n\talign-items: flex-start;\n\t${textSans.medium()};\n\n\tsvg {\n\t\tfill: currentColor;\n\t\t/* we don't want the SVG to change size depending on available space */\n\t\tflex: none;\n\t\twidth: ${remWidth.iconMedium}rem;\n\t\theight: ${remHeight.iconMedium}rem;\n\n\t\t/*\n\t\ta visual kick to vertically align the icon with the top row of text\n\t\tand horizontally pull it to the beginning of the row\n\t\t */\n\t\ttransform: translate(-4px, -3px);\n\t}\n`;\n\nexport const inlineError = (\n\tuserFeedback = userFeedbackThemeDefault.userFeedback,\n): SerializedStyles => css`\n\t${inlineMessage};\n\tcolor: ${userFeedback.textError};\n`;\n\nexport const inlineSuccess = (\n\tuserFeedback = userFeedbackThemeDefault.userFeedback,\n): SerializedStyles => css`\n\t${inlineMessage};\n\tcolor: ${userFeedback.textSuccess};\n`;\n","import { palette } from '@guardian/source-foundations';\n\nexport const userFeedbackThemeDefault = {\n\tuserFeedback: {\n\t\ttextSuccess: palette.success[400],\n\t\ttextError: palette.error[400],\n\t},\n};\n\nexport const userFeedbackThemeBrand = {\n\tuserFeedback: {\n\t\ttextSuccess: palette.success[500],\n\t\ttextError: palette.error[500],\n\t},\n};\n","// DO NOT EDIT\n// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { iconSize, visuallyHidden } from '@guardian/source-foundations';\nimport type { IconProps } from '../../src/@types/Icons';\n\nconst Svg = ({ size }: IconProps): EmotionJSX.Element => (\n\t<svg\n\t\twidth={size ? iconSize[size] : undefined}\n\t\theight={undefined}\n\t\tviewBox=\"-3 -3 30 30\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable={false}\n\t\taria-hidden={true}\n\t>\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M11.41 2 1 19.057l.668.943h20.664l.668-.943L12.59 2h-1.18Zm-.063 12.178h1.306l.621-6.917-.856-.728h-.835l-.857.728.62 6.917ZM12 15.452c.7 0 1.274.573 1.274 1.274 0 .7-.573 1.274-1.274 1.274-.7 0-1.274-.573-1.274-1.274 0-.7.573-1.274 1.274-1.274Z\"\n\t\t/>\n\t</svg>\n);\n\nexport const SvgAlertTriangle = ({\n\tsize,\n\tisAnnouncedByScreenReader = false,\n}: IconProps): EmotionJSX.Element => (\n\t<>\n\t\t<Svg size={size} />\n\t\t{isAnnouncedByScreenReader ? (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\tWarning\n\t\t\t</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</>\n);\n"],"names":["ArticleDesign","ArticlePillar","ArticleSpecial","descriptionId","id","sourceIdIndex","generateSourceId","palette","legend","fieldset","defaults","resetCSS","appearance","size","priority","icon","hideLabel","iconSide","nudgeIcon","cssOverrides","isLoading","type","iconSvg","children","jsxs","css","props","visuallyHidden$1","SupportingText","_jsx","Text","labelText","visuallyHidden","jsx","resets","textSans","label","optionalText","supportingText","textLabel","textOptional","textSupporting","textError","textSuccess","labelThemeBrand","labelTextWithSupportingText","radioControl","checked","labelledRadioControl","theme","radioContainer","supporting","htmlFor","inlineSpaceStyle","space","number","inlineSpace","stackSpaceStyle","stackSpace","stack","groupId","text","message","error","radioContainers","radio","borderHover","border","backgroundChecked","textLabelSupporting","neutral","borderError","labelThemeDefault","userFeedbackThemeDefault","radioThemeBrand","userFeedbackThemeBrand","labelWithSupportingText","height","remHeight","inlineError","inlineMessage","userFeedback","inlineSuccess","SvgAlertTriangle","isAnnouncedByScreenReader","Svg"],"sourceRoot":""}