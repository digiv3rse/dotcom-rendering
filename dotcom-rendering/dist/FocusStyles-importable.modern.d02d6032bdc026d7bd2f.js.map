{"version":3,"file":"FocusStyles-importable.modern.d02d6032bdc026d7bd2f.js","mappings":"0KAYA,MAAMA,EASFC,WACI,OAAOC,KAAKC,SAChB,CAEAC,QACIF,KAAKG,UAAUC,iBAAiB,YAAaJ,KAAKK,iBAClDL,KAAKC,WAAY,CACrB,CAEAK,OACIN,KAAKO,QACLP,KAAKC,WAAY,CACrB,CACAM,QACIP,KAAKG,UAAUK,UAAUC,OAAOT,KAAKU,WACrCV,KAAKG,UAAUQ,oBAAoB,UAAWX,KAAKY,eACnDZ,KAAKG,UAAUQ,oBAAoB,YAAaX,KAAKK,gBACzD,CAtBAQ,YAAYV,EAAWO,G,KADvBT,WAAY,E,KAwBZW,cAAiBE,IAvCA,IAwCTA,EAAEC,QACFf,KAAKO,QACLP,KAAKG,UAAUC,iBAAiB,YAAaJ,KAAKK,iBACtD,E,KAEJA,gBAAkB,KACdL,KAAKO,QACLP,KAAKG,UAAUK,UAAUQ,IAAIhB,KAAKU,WAClCV,KAAKG,UAAUC,iBAAiB,UAAWJ,KAAKY,cAAc,EA/B9DZ,KAAKG,UAAYA,EACjBH,KAAKU,UAAYA,CACrB,EAiCJ,IAAIO,EACJ,MAMMC,EAGmB,KARhBD,IACDA,EAAe,IAAInB,EAAsBqB,SAASC,gBAJnC,uBAMZH,GAKkCf,Q,cC3DtC,MAAMmB,EAAc,MAI1BC,EAAAA,EAAAA,YAAU,KACTJ,GAAuC,GACrC,IAEI,K","sources":["webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/accessibility/focus-style-manager.js","webpack://@guardian/dotcom-rendering/./src/web/components/FocusStyles.importable.tsx"],"sourcesContent":["const TAB_KEY_CODE = 9;\n/**\n * Source: Blueprint https://blueprintjs.com/\n * https://github.com/palantir/blueprint/blob/06a186c90758bbdca604ed6d7bf639c3d05b1fa0/packages/core/src/common/interactionMode.ts\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n * Requires @babel/plugin-proposal-class-properties\n *\n * Modifications to original source:\n * - Add return types to `isActive`, `start` and `stop` functions\n */\nclass InteractionModeEngine {\n    container;\n    className;\n    isRunning = false;\n    constructor(container, className) {\n        this.container = container;\n        this.className = className;\n    }\n    /** Returns whether the engine is currently running. */\n    isActive() {\n        return this.isRunning;\n    }\n    /** Enable behavior which applies the given className when in mouse mode. */\n    start() {\n        this.container.addEventListener('mousedown', this.handleMouseDown);\n        this.isRunning = true;\n    }\n    /** Disable interaction mode behavior and remove className from container. */\n    stop() {\n        this.reset();\n        this.isRunning = false;\n    }\n    reset() {\n        this.container.classList.remove(this.className);\n        this.container.removeEventListener('keydown', this.handleKeyDown);\n        this.container.removeEventListener('mousedown', this.handleMouseDown);\n    }\n    handleKeyDown = (e) => {\n        if (e.which === TAB_KEY_CODE) {\n            this.reset();\n            this.container.addEventListener('mousedown', this.handleMouseDown);\n        }\n    };\n    handleMouseDown = () => {\n        this.reset();\n        this.container.classList.add(this.className);\n        this.container.addEventListener('keydown', this.handleKeyDown);\n    };\n}\nconst FOCUS_DISABLED = 'src-focus-disabled';\nlet _focusEngine;\nconst focusEngine = () => {\n    if (!_focusEngine) {\n        _focusEngine = new InteractionModeEngine(document.documentElement, FOCUS_DISABLED);\n    }\n    return _focusEngine;\n};\nconst FocusStyleManager = {\n    alwaysShowFocus: () => focusEngine().stop(),\n    isActive: () => focusEngine().isActive(),\n    onlyShowFocusOnTabs: () => focusEngine().start(),\n};\n\nexport { FocusStyleManager, InteractionModeEngine };\n//# sourceMappingURL=focus-style-manager.js.map\n","import { FocusStyleManager } from '@guardian/source-foundations';\nimport { useEffect } from 'react';\n\nexport const FocusStyles = () => {\n\t// Ensure the focus state of any buttons/inputs in any of the Source\n\t// components are only applied when navigating via keyboard.\n\t// READ: https://www.theguardian.design/2a1e5182b/p/6691bb-accessibility/t/32e9fb\n\tuseEffect(() => {\n\t\tFocusStyleManager.onlyShowFocusOnTabs();\n\t}, []);\n\t// Nothing is rendered by this component\n\treturn null;\n};\n"],"names":["InteractionModeEngine","isActive","this","isRunning","start","container","addEventListener","handleMouseDown","stop","reset","classList","remove","className","removeEventListener","handleKeyDown","constructor","e","which","add","_focusEngine","FocusStyleManager","document","documentElement","FocusStyles","useEffect"],"sourceRoot":""}