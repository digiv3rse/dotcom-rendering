{"version":3,"file":"AudioAtomWrapper-importable.modern.5e6a42741fe0141248a2.js","mappings":"2NAwBO,MAAMA,EAAoB,I,IAAA,GAChCC,EAAE,SACFC,EAAQ,OACRC,EAAM,MACNC,EAAK,OACLC,EAAM,SACNC,EAAQ,sBACRC,EAAqB,eACrBC,EAAc,oBACdC,GACO,EAIP,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,WAAkB,GAkB9D,OAjBAC,EAAAA,EAAAA,YAAU,MACTC,EAAAA,EAAAA,kBAAiBC,IAIhB,MAAMC,GAAeC,EAAAA,EAAAA,eAAc,QAASF,GAE3CP,GACAQ,GACAP,GACAF,GAEAI,GAAkB,EACnB,GACC,GACA,CAACJ,EAAuBC,EAAgBC,KAG1C,SAACS,EAAAA,GAASA,CACTjB,GAAIA,EACJC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,EACRC,SAAUA,EACVI,eAAgBA,G","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/AudioAtomWrapper.importable.tsx"],"sourcesContent":["import { AudioAtom } from '@guardian/atoms-rendering';\nimport {\n\tgetConsentFor,\n\tonConsentChange,\n} from '@guardian/consent-management-platform';\nimport { useEffect, useState } from 'react';\n\ntype Props = {\n\tid: string;\n\ttrackUrl: string;\n\tkicker: string;\n\ttitle?: string | undefined;\n\tduration: number;\n\tpillar: ArticleTheme;\n\tcontentIsNotSensitive: boolean;\n\taCastisEnabled: boolean;\n\treaderCanBeShownAds: boolean;\n};\n\n/**\n * # AudioAtomWrapper\n *\n * Wrapper around [`@guardian/atoms-rendering`â€™s `AudioAtom`](https://github.com/guardian/csnx/blob/main/libs/%40guardian/atoms-rendering/src/AudioAtom.tsx)\n */\nexport const AudioAtomWrapper = ({\n\tid,\n\ttrackUrl,\n\tkicker,\n\ttitle,\n\tpillar,\n\tduration,\n\tcontentIsNotSensitive,\n\taCastisEnabled,\n\treaderCanBeShownAds,\n}: Props) => {\n\t// *****************\n\t// *     ACast     *\n\t// *****************\n\tconst [shouldUseAcast, setShouldUseAcast] = useState<boolean>(false);\n\tuseEffect(() => {\n\t\tonConsentChange((state) => {\n\t\t\t// Should we use ad enabled audio? If so, then set the shouldUseAcast\n\t\t\t// state to true, triggering a rerender of AudioAtom using a new track url\n\t\t\t// (one with adverts)\n\t\t\tconst consentGiven = getConsentFor('acast', state);\n\t\t\tif (\n\t\t\t\taCastisEnabled &&\n\t\t\t\tconsentGiven &&\n\t\t\t\treaderCanBeShownAds && // Eg. Not a subscriber\n\t\t\t\tcontentIsNotSensitive\n\t\t\t) {\n\t\t\t\tsetShouldUseAcast(true);\n\t\t\t}\n\t\t});\n\t}, [contentIsNotSensitive, aCastisEnabled, readerCanBeShownAds]);\n\n\treturn (\n\t\t<AudioAtom\n\t\t\tid={id}\n\t\t\ttrackUrl={trackUrl}\n\t\t\tkicker={kicker}\n\t\t\ttitle={title}\n\t\t\tpillar={pillar}\n\t\t\tduration={duration}\n\t\t\tshouldUseAcast={shouldUseAcast}\n\t\t/>\n\t);\n};\n"],"names":["AudioAtomWrapper","id","trackUrl","kicker","title","pillar","duration","contentIsNotSensitive","aCastisEnabled","readerCanBeShownAds","shouldUseAcast","setShouldUseAcast","useState","useEffect","onConsentChange","state","consentGiven","getConsentFor","AudioAtom"],"sourceRoot":""}