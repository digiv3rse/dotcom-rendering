{"version":3,"file":"InstagramBlockComponent-importable.modern.ea86a8bf337fdc4542a6.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/browser/updateIframeHeight.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/ClickToView.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/InstagramBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/button/Button.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/vendor/icons/SvgCheckmark.js"],"sourcesContent":["type HeightEventType = { source: { name: string } };\n\nexport const updateIframeHeight = (queryString: string): Promise<void> => {\n\tconst iframes: HTMLIFrameElement[] = [].slice.call(\n\t\tdocument.querySelectorAll(queryString),\n\t);\n\n\twindow.addEventListener('message', (event) => {\n\t\tconst iframe: HTMLIFrameElement | undefined = iframes.find((i) => {\n\t\t\ttry {\n\t\t\t\treturn i.name === (event as HeightEventType).source.name;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tif (iframe) {\n\t\t\ttry {\n\t\t\t\tconst message = JSON.parse(event.data) as {\n\t\t\t\t\ttype: string;\n\t\t\t\t\tvalue: string;\n\t\t\t\t};\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'set-height':\n\t\t\t\t\t\tiframe.height = message.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-empty\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\n\tiframes.forEach((iframe) => {\n\t\tconst src = (iframe.getAttribute('srcdoc') ?? '')\n\t\t\t.replace(/<gu-script>/g, '<script>')\n\n\t\t\t.replace(/<\\/gu-script>/g, '<' + '/script>');\n\t\tiframe.setAttribute('srcdoc', src);\n\t});\n\treturn Promise.resolve();\n};\n","import { css } from '@emotion/react';\nimport {\n\tbackground,\n\tborder,\n\tspace,\n\ttextSans,\n} from '@guardian/source-foundations';\nimport { Button, SvgCheckmark } from '@guardian/source-react-components';\nimport { useState } from 'react';\nimport type { RoleType } from '../../types/content';\n\ntype Props = {\n\tchildren: React.ReactNode;\n\trole?: RoleType;\n\tonAccept?: () => void;\n\tisTracking: boolean;\n\tisMainMedia?: boolean;\n\tsource?: string;\n\tsourceDomain?: string;\n};\n\nconst roleTextSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSans.medium({ lineHeight: 'regular' });\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSans.small({ lineHeight: 'regular' });\n\t\t}\n\t}\n};\n\nconst roleHeadlineSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn textSans.large({\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\tlineHeight: 'regular',\n\t\t\t});\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\tcase 'thumbnail': {\n\t\t\treturn textSans.medium({\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\tlineHeight: 'regular',\n\t\t\t});\n\t\t}\n\t}\n};\n\nconst roleButtonSize = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase': {\n\t\t\treturn 'default';\n\t\t}\n\t\tcase 'halfWidth':\n\t\tcase 'supporting':\n\t\t\treturn 'small';\n\t\tcase 'thumbnail': {\n\t\t\treturn 'xsmall';\n\t\t}\n\t}\n};\n\nconst roleButtonText = (role: RoleType) => {\n\tswitch (role) {\n\t\tcase 'immersive':\n\t\tcase 'inline':\n\t\tcase 'showcase':\n\t\tcase 'halfWidth':\n\t\tcase 'supporting': {\n\t\t\treturn 'Allow and continue';\n\t\t}\n\t\tcase 'thumbnail': {\n\t\t\treturn 'Allow';\n\t\t}\n\t}\n};\n\nconst shouldDisplayOverlay = ({\n\tisTracking,\n\tisOverlayClicked,\n\tisMainMedia,\n}: {\n\tisTracking: boolean;\n\tisOverlayClicked: boolean;\n\tisMainMedia?: boolean;\n}) => {\n\tif (isMainMedia || !isTracking) {\n\t\treturn false;\n\t}\n\tif (isOverlayClicked) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const ClickToView = ({\n\tchildren,\n\trole = 'inline',\n\tonAccept,\n\tisTracking,\n\tisMainMedia,\n\tsource,\n\tsourceDomain = 'unknown',\n}: Props) => {\n\tconst [isOverlayClicked, setIsOverlayClicked] = useState<boolean>(false);\n\n\tconst handleClick = () => {\n\t\tsetIsOverlayClicked(true);\n\t\tif (onAccept) {\n\t\t\tsetTimeout(() => onAccept());\n\t\t}\n\t};\n\n\tconst textSize = roleTextSize(role);\n\n\tif (\n\t\tshouldDisplayOverlay({\n\t\t\tisTracking,\n\t\t\tisOverlayClicked,\n\t\t\tisMainMedia,\n\t\t})\n\t) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbackground: ${background.secondary};\n\t\t\t\t\tborder: 1px solid ${border.secondary};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tpadding: ${space[1]}px ${space[6]}px ${space[3]}px;\n\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t`}\n\t\t\t\tdata-component={`click-to-view:${sourceDomain}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${roleHeadlineSize(role)}\n\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source\n\t\t\t\t\t\t? `Allow ${source} content?`\n\t\t\t\t\t\t: 'Allow content provided by a third party?'}\n\t\t\t\t</div>\n\t\t\t\t<p\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${textSize}\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{source ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content provided by {source}.\n\t\t\t\t\t\t\tWe ask for your permission before anything is\n\t\t\t\t\t\t\tloaded, as they may be using cookies and other\n\t\t\t\t\t\t\ttechnologies. To view this content,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tThis article includes content hosted on{' '}\n\t\t\t\t\t\t\t{sourceDomain}. We ask for your permission before\n\t\t\t\t\t\t\tanything is loaded, as the provider may be using\n\t\t\t\t\t\t\tcookies and other technologies. To view this\n\t\t\t\t\t\t\tcontent,{' '}\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tclick &apos;Allow and continue&apos;\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<div\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\tmargin-top: ${space[5]}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tpriority=\"primary\"\n\t\t\t\t\t\tsize={roleButtonSize(role)}\n\t\t\t\t\t\ticon={<SvgCheckmark />}\n\t\t\t\t\t\ticonSide=\"left\"\n\t\t\t\t\t\tonClick={() => handleClick()}\n\t\t\t\t\t\tdata-cy=\"click-to-view-button\"\n\t\t\t\t\t\tdata-link-name=\"allow-button\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{roleButtonText(role)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn <>{children}</>;\n};\n","import { css } from '@emotion/react';\nimport type { InstagramBlockElement } from '../../types/content';\nimport { updateIframeHeight } from '../browser/updateIframeHeight';\nimport { ClickToView } from './ClickToView';\n\nconst fullWidthStyles = css`\n\twidth: 100%;\n`;\n\n/**\n * Note the iframe created in this component is dependent on the embedIFrame function being\n * called to be size correctly.\n * src/web/browser/embedIframe/embedIframe.ts\n */\ntype Props = {\n\telement: InstagramBlockElement;\n\tindex: number;\n\tisMainMedia: boolean;\n};\nexport const InstagramBlockComponent = ({\n\telement,\n\tindex,\n\tisMainMedia,\n}: Props) => {\n\treturn (\n\t\t<ClickToView\n\t\t\trole={element.role}\n\t\t\tisTracking={element.isThirdPartyTracking}\n\t\t\tisMainMedia={isMainMedia}\n\t\t\tsource={element.source}\n\t\t\tsourceDomain={element.sourceDomain}\n\t\t\tonAccept={() =>\n\t\t\t\tupdateIframeHeight(`iframe[name=\"instagram-embed-${index}\"]`)\n\t\t\t}\n\t\t>\n\t\t\t<iframe\n\t\t\t\tcss={fullWidthStyles}\n\t\t\t\tclassName=\"js-embed__iframe\"\n\t\t\t\tname={`instagram-embed-${index}`}\n\t\t\t\tdata-cy=\"instagram-embed\"\n\t\t\t\ttitle={`Instagram Post ${index}`}\n\t\t\t\tsrcDoc={`${element.html}\n\t\t\t<script src=\"https://interactive.guim.co.uk/libs/iframe-messenger/iframeMessenger.js\"></script>\n\t\t\t<gu-script>iframeMessenger.enableAutoResize();</gu-script>`}\n\t\t\t/>\n\t\t</ClickToView>\n\t);\n};\n","import { jsx } from '@emotion/react/jsx-runtime';\nimport { buttonContents } from './shared.js';\nimport { buttonStyles } from './styles.js';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_button--primary-priority-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/435225-button) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/button/Button.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Buttons enable users to make choices or perform actions.\n *\n */\nconst Button = ({ priority, size, icon: iconSvg, iconSide, hideLabel, nudgeIcon, type = 'button', isLoading = false, loadingAnnouncement = 'Loading', cssOverrides, children, ...props }) => (jsx(\"button\", { css: buttonStyles({\n        size,\n        priority,\n        icon: iconSvg,\n        hideLabel,\n        iconSide,\n        nudgeIcon,\n        cssOverrides,\n        isLoading,\n    }), type: type, \"aria-live\": \"polite\", \"aria-label\": isLoading ? loadingAnnouncement : undefined, ...props, children: buttonContents({\n        hideLabel,\n        iconSvg,\n        isLoading,\n        children,\n    }) }));\n\nexport { Button };\n//# sourceMappingURL=Button.js.map\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden, iconSize } from '@guardian/source-foundations';\n\nconst Svg = ({ size }) => (jsx(\"svg\", { width: size ? iconSize[size] : undefined, height: undefined, viewBox: \"-3 -3 30 30\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, \"aria-hidden\": true, children: jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M3.011 11.883 2 12.896l5.057 7.08h.48L22 5.005l-1.011-.986L7.537 16.207l-4.526-4.324Z\" }) }));\nconst SvgCheckmark = ({ size, isAnnouncedByScreenReader = false, }) => (jsxs(Fragment, { children: [jsx(Svg, { size: size }), isAnnouncedByScreenReader ? (jsx(\"span\", { css: css `\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`, children: \"Checkmark\" })) : ('')] }));\n\nexport { SvgCheckmark };\n//# sourceMappingURL=SvgCheckmark.js.map\n"],"names":["updateIframeHeight","queryString","iframes","slice","call","document","querySelectorAll","window","addEventListener","event","iframe","find","i","name","source","e","message","JSON","parse","data","type","height","value","forEach","src","getAttribute","replace","setAttribute","Promise","resolve","roleHeadlineSize","role","textSans","fontWeight","lineHeight","roleButtonSize","roleButtonText","ClickToView","children","onAccept","isTracking","isMainMedia","sourceDomain","isOverlayClicked","setIsOverlayClicked","useState","textSize","roleTextSize","shouldDisplayOverlay","div","css","background","border","space","data-component","p","strong","Button","priority","size","icon","SvgCheckmark","iconSide","onClick","setTimeout","data-cy","data-link-name","fullWidthStyles","InstagramBlockComponent","element","index","isThirdPartyTracking","className","title","srcDoc","html","iconSvg","hideLabel","nudgeIcon","isLoading","loadingAnnouncement","cssOverrides","props","jsx","buttonStyles","undefined","buttonContents","Svg","width","iconSize","viewBox","xmlns","focusable","fillRule","clipRule","d","isAnnouncedByScreenReader","jsxs","Fragment","visuallyHidden"],"sourceRoot":""}