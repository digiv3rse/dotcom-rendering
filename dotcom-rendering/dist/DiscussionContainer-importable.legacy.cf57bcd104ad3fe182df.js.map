{"version":3,"file":"DiscussionContainer-importable.legacy.cf57bcd104ad3fe182df.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/identity-component-event.ts","webpack://@guardian/dotcom-rendering/./src/lib/querystring.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getCommentContext.ts","webpack://@guardian/dotcom-rendering/./src/web/components/Discussion.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/DiscussionWhenSignedIn.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/DiscussionContainer.importable.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/Hide.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SignedInAs.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/revealStyles.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useApi.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/useDiscussion.ts"],"sourcesContent":["import { constructQuery } from './querystring';\nexport const createAuthenticationEventParams = (componentId, pageViewId) => {\n    const params = {\n        componentType: 'identityauthentication',\n        componentId,\n    };\n    if (pageViewId) {\n        params.viewId = pageViewId;\n    }\n    return `componentEventParams=${encodeURIComponent(constructQuery(params))}`;\n};\n","const constructQuery = (query) => Object.keys(query)\n    .map((param) => {\n    const value = query[param];\n    const queryValue = Array.isArray(value)\n        ? value.map((v) => encodeURIComponent(v)).join(',')\n        : encodeURIComponent(value);\n    return `${param}=${queryValue}`;\n})\n    .join('&');\nexport { constructQuery };\n","import { joinUrl } from '@guardian/libs';\nconst initFiltersFromLocalStorage = () => {\n    let threads;\n    let pageSize;\n    let orderBy;\n    try {\n        // Try to read from local storage\n        orderBy = JSON.parse(localStorage.getItem('gu.prefs.discussion.order') ?? '{}');\n        threads = JSON.parse(localStorage.getItem('gu.prefs.discussion.threading') ?? '{}');\n        pageSize = JSON.parse(localStorage.getItem('gu.prefs.discussion.pagesize') ?? '{}');\n    }\n    catch (error) {\n        // Sometimes it's not possible to access localStorage, we accept this and don't want to\n        // capture these errors\n        return {\n            orderBy: 'newest',\n            pageSize: 25,\n            threads: 'collapsed',\n        };\n    }\n    // If we found something in LS, use it, otherwise return defaults\n    return {\n        orderBy: orderBy?.value ? orderBy.value : 'newest',\n        threads: threads?.value ? threads.value : 'collapsed',\n        pageSize: pageSize?.value ? pageSize.value : 25,\n    };\n};\nconst buildParams = (filters) => {\n    return {\n        // Frontend uses the 'recommendations' key to store this options but the api expects\n        // 'mostRecommended' so we have to map here to support both\n        orderBy: filters.orderBy === 'recommendations'\n            ? 'mostRecommended'\n            : filters.orderBy,\n        pageSize: String(filters.pageSize),\n        displayThreaded: String(filters.threads === 'collapsed' || filters.threads === 'expanded'),\n    };\n};\nexport const getCommentContext = async (ajaxUrl, commentId) => {\n    const url = joinUrl(ajaxUrl, 'comment', commentId.toString(), 'context');\n    const filters = initFiltersFromLocalStorage();\n    const params = new URLSearchParams(buildParams(filters));\n    return fetch(url + '?' + params.toString())\n        .then((response) => {\n        if (!response.ok) {\n            throw Error(response.statusText ||\n                `getCommentContext | An api call returned HTTP status ${response.status}`);\n        }\n        return response;\n    })\n        .then((response) => response.json())\n        .catch((error) => {\n        window.guardian.modules.sentry.reportError(error, 'get-comment-page');\n    });\n};\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { App as Comments } from '@guardian/discussion-rendering';\nimport { joinUrl } from '@guardian/libs';\nimport { neutral, space } from '@guardian/source-foundations';\nimport { SvgPlus } from '@guardian/source-react-components';\nimport { EditorialButton } from '@guardian/source-react-components-development-kitchen';\nimport { useEffect, useState } from 'react';\nimport { decidePalette } from '../lib/decidePalette';\nimport { getCommentContext } from '../lib/getCommentContext';\nimport { revealStyles } from '../lib/revealStyles';\nimport { useDiscussion } from '../lib/useDiscussion';\nimport { Hide } from './Hide';\nimport { SignedInAs } from './SignedInAs';\nconst overlayStyles = css `\n\tbackground-image: linear-gradient(\n\t\t0deg,\n\t\t${neutral[100]},\n\t\t${neutral[100]} 40%,\n\t\trgba(255, 255, 255, 0)\n\t);\n\theight: 80px;\n\tposition: absolute;\n\tbottom: 0;\n\tright: 0;\n\twidth: 100%;\n\tdisplay: block;\n`;\nconst fixHeight = css `\n\tmax-height: 280px;\n\tmin-height: 280px;\n\toverflow: hidden;\n`;\nconst positionRelative = css `\n\tposition: relative;\n`;\nconst commentIdFromUrl = () => {\n    if (typeof window === 'undefined')\n        return;\n    const { hash } = window.location;\n    if (!hash.includes('comment'))\n        return;\n    const [, commentId] = hash.split('-');\n    if (!commentId)\n        return;\n    return parseInt(commentId, 10);\n};\nexport const Discussion = ({ format, discussionApiUrl, shortUrlId, discussionD2Uid, discussionApiClientHeader, enableDiscussionSwitch, user, idApiUrl, }) => {\n    const [commentPage, setCommentPage] = useState();\n    const [commentPageSize, setCommentPageSize] = useState();\n    const [commentOrderBy, setCommentOrderBy] = useState();\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [hashCommentId, setHashCommentId] = useState(commentIdFromUrl());\n    const { commentCount, isClosedForComments } = useDiscussion(joinUrl(discussionApiUrl, 'discussion', shortUrlId));\n    const palette = decidePalette(format);\n    const hasCommentsHash = typeof window !== 'undefined' && window.location.hash === '#comments';\n    const handlePermalink = (commentId) => {\n        if (typeof window === 'undefined')\n            return false;\n        window.location.hash = `#comment-${commentId}`;\n        // Put this comment id into the hashCommentId state which will\n        // trigger an api call to get the comment context and then expand\n        // and reload the discussion based on the resuts\n        setHashCommentId(commentId);\n        return false;\n    };\n    const dispatchCommentsExpandedEvent = () => {\n        const event = new CustomEvent('comments-expanded');\n        document.dispatchEvent(event);\n    };\n    // Check the url to see if there is a comment hash, e.g. ...crisis#comment-139113120\n    // If so, make a call to get the context of this comment so we know what page it is\n    // on.\n    useEffect(() => {\n        if (hashCommentId !== undefined) {\n            getCommentContext(discussionApiUrl, hashCommentId)\n                .then((context) => {\n                setCommentPage(context.page);\n                setCommentPageSize(context.pageSize);\n                setCommentOrderBy(context.orderBy);\n                setIsExpanded(true);\n            })\n                .catch((e) => console.error(`getCommentContext - error: ${String(e)}`));\n        }\n    }, [discussionApiUrl, hashCommentId]);\n    useEffect(() => {\n        if (hasCommentsHash) {\n            setIsExpanded(true);\n        }\n    }, [hasCommentsHash]);\n    useEffect(() => {\n        const pendingElements = document.querySelectorAll('.discussion > .pending');\n        pendingElements.forEach((element) => {\n            element.classList.add('reveal');\n            element.classList.remove('pending');\n        });\n    }, []);\n    useEffect(() => {\n        // There's no point showing the view more button if there isn't much more to view\n        if (commentCount === 0 || commentCount === 1 || commentCount === 2) {\n            setIsExpanded(true);\n        }\n    }, [commentCount]);\n    return (_jsxs(_Fragment, { children: [_jsx(\"div\", { css: [positionRelative, revealStyles, !isExpanded && fixHeight], className: \"discussion\", children: _jsxs(\"div\", { className: \"pending\", children: [_jsx(Hide, { when: \"above\", breakpoint: \"leftCol\", children: _jsx(\"div\", { \"data-cy\": \"discussion\", css: css `\n\t\t\t\t\t\t\t\tpadding-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t`, children: _jsx(SignedInAs, { palette: palette, enableDiscussionSwitch: enableDiscussionSwitch, user: user, commentCount: commentCount, isClosedForComments: isClosedForComments }) }) }), _jsx(Comments, { user: user, baseUrl: discussionApiUrl, pillar: format.theme, initialPage: commentPage, pageSizeOverride: commentPageSize, isClosedForComments: !!isClosedForComments || !enableDiscussionSwitch, orderByOverride: commentOrderBy, shortUrl: shortUrlId, additionalHeaders: {\n                                'D2-X-UID': discussionD2Uid,\n                                'GU-Client': discussionApiClientHeader,\n                            }, expanded: isExpanded, commentToScrollTo: hashCommentId, onPermalinkClick: handlePermalink, apiKey: \"dotcom-rendering\", onExpand: () => {\n                                setIsExpanded(true);\n                            }, idApiUrl: idApiUrl }), !isExpanded && (_jsx(\"div\", { id: \"discussion-overlay\", css: overlayStyles }))] }) }), !isExpanded && (_jsx(EditorialButton, { format: format, onClick: () => {\n                    setIsExpanded(true);\n                    dispatchCommentsExpandedEvent();\n                }, icon: _jsx(SvgPlus, {}), children: \"View more comments\" }))] }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { joinUrl } from '@guardian/libs';\nimport { useApi } from '../lib/useApi';\nimport { Discussion } from './Discussion';\nexport const DiscussionWhenSignedIn = (props) => {\n    const { discussionApiUrl } = props;\n    const { data } = useApi(joinUrl(discussionApiUrl, 'profile/me?strict_sanctions_check=false'), {}, {\n        credentials: 'include',\n    });\n    if (!data)\n        return null;\n    return _jsx(Discussion, { user: data.userProfile, ...props });\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { getCookie } from '@guardian/libs';\nimport { Discussion } from './Discussion';\nimport { DiscussionWhenSignedIn } from './DiscussionWhenSignedIn';\n/**\n * DiscussionContainer\n *\n * A wrapper component that decides if the user is signed in or not.\n *\n * If they\n * are, it renders DiscussionWhenSignedIn which includes an api call to fetch\n * the user profile.\n *\n * If not, it simply renders Discussion\n *\n * We use component composition like this here because you cannot call react\n * hooks conditionally and we're using a hook to make the fetch request\n *\n * Note. We allow the ...props pattern here because it makes sense when we're\n * just passing them through\n *\n */\nexport const DiscussionContainer = (props) => {\n    const isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n    if (isSignedIn)\n        return _jsx(DiscussionWhenSignedIn, { ...props });\n    return _jsx(Discussion, { ...props });\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { from, until } from '@guardian/source-foundations';\nexport const Hide = ({ children, when, breakpoint, el, }) => {\n    let whenToHide;\n    if (when === 'below') {\n        whenToHide = css `\n\t\t\t${until[breakpoint]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n    }\n    else {\n        whenToHide = css `\n\t\t\t${from[breakpoint]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n    }\n    return el === 'li' ? (_jsx(\"li\", { css: whenToHide, children: children })) : (_jsx(\"span\", { css: whenToHide, children: children }));\n};\n","import { jsxs as _jsxs, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { border, headline, neutral, news, space, text, textSans, until, } from '@guardian/source-foundations';\nimport { createAuthenticationEventParams } from '../../lib/identity-component-event';\nconst containerStyles = css `\n\tpadding-top: ${space[1]}px;\n\tpadding-bottom: ${space[1]}px;\n`;\nconst imageStyles = css `\n\tborder-radius: 70px;\n\twidth: 60px;\n\theight: 60px;\n\t${until.desktop} {\n\t\twidth: 36px;\n\t\theight: 36px;\n\t}\n`;\nconst imageWrapper = css `\n\tpadding-bottom: ${space[1]}px;\n\tpadding-right: ${space[2]}px;\n`;\nconst headingStyles = css `\n\t${headline.xxsmall({ fontWeight: 'bold' })};\n\tpadding-bottom: ${space[1]}px;\n`;\nconst textStyles = css `\n\t${textSans.small()}\n\t${until.desktop} {\n\t\t${textSans.xxsmall()}\n\t}\n\tcolor: ${text.supporting};\n\tpadding-bottom: ${space[1]}px;\n`;\nconst headlineStyles = css `\n\t${headline.xxxsmall()}\n\tcolor: ${text.supporting};\n\tpadding-bottom: ${space[1]}px;\n`;\nconst usernameStyles = css `\n\tfont-weight: 700;\n\tcolor: ${text.primary};\n`;\nconst linkStyles = (palette) => css `\n\tcolor: ${palette.text.signInLink};\n\ttext-decoration: none;\n\tborder-bottom: 1px solid ${border.secondary};\n\ttransition: border-color 0.15s ease-out;\n\t:hover {\n\t\tborder-color: ${news[300]};\n\t}\n`;\nconst rowUntilDesktop = css `\n\tdisplay: flex;\n\tflex-direction: column;\n\t${until.desktop} {\n\t\tflex-direction: row;\n\t}\n`;\nconst Heading = ({ count }) => {\n    return (_jsxs(\"h2\", { css: headingStyles, children: [\"comments\", ' ', _jsxs(\"span\", { css: css `\n\t\t\t\t\tcolor: ${neutral[60]};\n\t\t\t\t`, children: [\"(\", count ?? '…', \")\"] })] }));\n};\nexport const SignedInAs = ({ commentCount, palette, enableDiscussionSwitch, user, isClosedForComments, }) => {\n    const isBanned = user?.privateFields && !user.privateFields.canPostComment;\n    if (!enableDiscussionSwitch) {\n        // Discussion is disabled sitewide and user is signed in\n        if (user) {\n            return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsx(\"span\", { css: headlineStyles, children: \"Commenting has been disabled at this time\" })] }));\n        }\n        // Discussion disabled sitewide and user logged out\n        return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsxs(\"span\", { css: headlineStyles, children: [\"Commenting has been disabled at this time but you can still\", ' ', _jsx(\"a\", { href: `https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams('signin_to_comment')}`, css: linkStyles(palette), children: \"sign in\" }), ' ', \"or\", ' ', _jsx(\"a\", { href: `https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams('register_to_comment')}`, css: linkStyles(palette), children: \"create your Guardian account\" }), ' ', \"to join the discussion when it's back\"] })] }));\n    }\n    if (isBanned) {\n        // User is banned\n        return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsxs(\"span\", { css: headlineStyles, children: [\"Commenting has been disabled for this account (\", _jsx(\"a\", { href: \"https://www.theguardian.com/community-faqs#321a\", css: linkStyles(palette), children: \"why?\" }), ' ', \")\"] })] }));\n    }\n    if (user && isClosedForComments) {\n        // The reader is logged in but the discussion is closed\n        return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsx(\"span\", { css: headlineStyles, children: \"This discussion is closed for comments\" })] }));\n    }\n    if (!user && isClosedForComments) {\n        // The discussion is closed and the reader is not logged in\n        return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsxs(\"span\", { css: headlineStyles, children: [\"This discussion is now closed for comments but you can still\", ' ', _jsx(\"a\", { href: `https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams('signin_to_comment')}`, css: linkStyles(palette), children: \"sign in\" }), ' ', \"or\", ' ', _jsx(\"a\", { href: `https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams('register_to_comment')}`, css: linkStyles(palette), children: \"create your Guardian account\" }), ' ', \"to join the discussion next time\"] })] }));\n    }\n    if (!user) {\n        // The discussion is open but the reader is not logged in\n        return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsxs(\"span\", { css: headlineStyles, children: [_jsx(\"a\", { href: `https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams('signin_to_comment')}`, css: linkStyles(palette), children: \"Sign in\" }), ' ', \"or\", ' ', _jsx(\"a\", { href: `https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams('register_to_comment')}`, css: linkStyles(palette), children: \"create your Guardian account\" }), ' ', \"to join the discussion\"] })] }));\n    }\n    // Discussion open and user logged in\n    return (_jsxs(\"div\", { css: containerStyles, children: [_jsx(Heading, { count: commentCount }), _jsxs(\"div\", { css: rowUntilDesktop, children: [_jsx(\"div\", { css: imageWrapper, children: _jsx(\"img\", { src: user.secureAvatarUrl ||\n                                'https://avatar.guim.co.uk/no-user-image.gif', alt: user.displayName || 'Guardian User', css: imageStyles }) }), _jsxs(\"div\", { css: textStyles, children: [\"Signed in as\", _jsx(\"div\", { css: usernameStyles, children: user.displayName || 'Guardian User' })] })] })] }));\n};\n","import { css, keyframes } from '@emotion/react';\n/**\n * Sometimes we want to animate in new content using plain\n * javascript. We use these classes to do that.\n */\nexport const revealStyles = css `\n\t/* We're using classnames here because we add and remove these classes\n\t   using plain javascript */\n\t.reveal {\n\t\tanimation: ${keyframes `\n\t\t\t0% { opacity: 0; }\n\t\t\t100% { opacity: 1; }\n\t\t`} 1s ease-out;\n\t}\n\t.reveal-slowly {\n\t\tanimation: ${keyframes `\n\t\t\t0% { opacity: 0; }\n\t\t\t100% { opacity: 1; }\n\t\t`} 4s ease-out;\n\t}\n\t.pending {\n\t\tdisplay: none;\n\t}\n`;\n","import useSWR from 'swr';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `useApi | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\nconst fetcher = (init) => (url) => fetch(url, init)\n    .then(checkForErrors)\n    .then((res) => res.json());\n/**\n * @description\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/)\n * returns { loading, error, data }\n * @param {String} url - The url to fetch\n * @param {SWRConfiguration} options - The SWR config object - https://swr.vercel.app/docs/options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * */\nexport const useApi = (url, options, init) => {\n    const { data, error } = useSWR(url, fetcher(init), options);\n    return {\n        data,\n        error,\n        loading: !!url && !error && !data,\n    };\n};\n","import { useApi } from './useApi';\nexport const useDiscussion = (url) => {\n    const { data } = useApi(url, {\n        // The default for dedupingInterval is 2 seconds but we want to wait longer here because the cache time\n        // for a discussion is at least 15 seconds\n        dedupingInterval: 8000,\n    });\n    return {\n        commentCount: data?.discussion.commentCount,\n        isClosedForComments: data?.discussion.isClosedForComments,\n    };\n};\n"],"names":["createAuthenticationEventParams","componentId","pageViewId","params","componentType","viewId","encodeURIComponent","constructQuery","query","Object","keys","map","param","value","queryValue","Array","isArray","v","join","initFiltersFromLocalStorage","threads","pageSize","orderBy","JSON","parse","localStorage","getItem","error","buildParams","filters","String","displayThreaded","getCommentContext","ajaxUrl","commentId","url","joinUrl","toString","URLSearchParams","fetch","then","response","ok","Error","statusText","status","json","catch","window","guardian","modules","sentry","reportError","overlayStyles","css","neutral","fixHeight","positionRelative","Discussion","format","discussionApiUrl","shortUrlId","discussionD2Uid","discussionApiClientHeader","enableDiscussionSwitch","user","idApiUrl","useState","commentPage","setCommentPage","commentPageSize","setCommentPageSize","commentOrderBy","setCommentOrderBy","isExpanded","setIsExpanded","hash","location","includes","split","parseInt","commentIdFromUrl","hashCommentId","setHashCommentId","useDiscussion","commentCount","isClosedForComments","palette","decidePalette","hasCommentsHash","useEffect","undefined","context","page","e","console","document","querySelectorAll","forEach","element","classList","add","remove","_jsxs","_Fragment","children","_jsx","revealStyles","className","Hide","when","breakpoint","space","SignedInAs","Comments","baseUrl","pillar","theme","initialPage","pageSizeOverride","orderByOverride","shortUrl","additionalHeaders","expanded","commentToScrollTo","onPermalinkClick","apiKey","onExpand","id","EditorialButton","onClick","event","CustomEvent","dispatchEvent","icon","SvgPlus","DiscussionWhenSignedIn","props","data","useApi","credentials","userProfile","DiscussionContainer","getCookie","name","shouldMemoize","whenToHide","el","until","from","containerStyles","imageStyles","imageWrapper","headingStyles","headline","fontWeight","textStyles","textSans","text","headlineStyles","usernameStyles","linkStyles","signInLink","border","news","rowUntilDesktop","Heading","count","isBanned","privateFields","canPostComment","href","src","secureAvatarUrl","alt","displayName","keyframes","checkForErrors","options","init","useSWR","res","fetcher","loading","dedupingInterval","discussion"],"sourceRoot":""}