{"version":3,"file":"StickyBottomBanner-importable.legacy.1c8df4807e2d52117b6d.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner/BrazeBanner.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner/ReaderRevenueBanner.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner.importable.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/useSignInGateWillShow.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/alreadyVisited.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getZIndex.tsx"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getBrazeMetaFromUrlFragment } from '../../lib/braze/forceBrazeMessage';\nimport { getZIndex } from '../../lib/getZIndex';\nimport { suppressForTaylorReport } from '../../lib/braze/taylorReport';\nconst containerStyles = css `\n\tposition: fixed;\n\tbottom: -1px;\n\twidth: 100%;\n\t${getZIndex('banner')}\n`;\n// We can show a Braze banner if:\n// - The Braze switch is on\n// - We have a Braze API key\n// - The user should have support messaging hidden, implying they are a contributor or subscriber\n// - We're not on a Glabs paid content page\n// - We've got a Braze UUID from the API, given a user's ID Creds\n// - The user has given Consent via CCPA or TCFV2\n// - The Braze websdk appboy initialisation does not throw an error\n// - The Braze app Boy subscription to in app message returns meta info\n// OR\n// - The force-braze-message query string arg is passed\nexport const canShowBrazeBanner = async (brazeMessages, brazeArticleContext, tags) => {\n    const forcedBrazeMeta = getBrazeMetaFromUrlFragment();\n    if (forcedBrazeMeta) {\n        return {\n            show: true,\n            meta: forcedBrazeMeta,\n        };\n    }\n    if (suppressForTaylorReport(tags)) {\n        return { show: false };\n    }\n    try {\n        const message = await brazeMessages.getMessageForBanner(brazeArticleContext);\n        const logButtonClickWithBraze = (internalButtonId) => {\n            message.logButtonClick(internalButtonId);\n        };\n        const logImpressionWithBraze = () => {\n            // Log the impression with Braze\n            message.logImpression();\n        };\n        if (message.extras) {\n            const meta = {\n                dataFromBraze: message.extras,\n                logImpressionWithBraze,\n                logButtonClickWithBraze,\n            };\n            return { show: true, meta };\n        }\n        return { show: false };\n    }\n    catch (e) {\n        return { show: false };\n    }\n};\nconst BrazeBannerWithSatisfiedDependencies = ({ BrazeComponent, meta, idApiUrl, }) => {\n    useEffect(() => {\n        // Log the impression with Braze\n        meta.logImpressionWithBraze();\n        // Log VIEW event with Ophan\n        submitComponentEvent({\n            component: {\n                componentType: 'RETENTION_ENGAGEMENT_BANNER',\n                id: meta.dataFromBraze.ophanComponentId ??\n                    meta.dataFromBraze.componentName,\n            },\n            action: 'VIEW',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const componentName = meta.dataFromBraze.componentName;\n    if (!componentName)\n        return null;\n    return (_jsx(\"div\", { css: containerStyles, children: _jsx(BrazeComponent, { logButtonClickWithBraze: meta.logButtonClickWithBraze, submitComponentEvent: submitComponentEvent, componentName: componentName, brazeMessageProps: meta.dataFromBraze, subscribeToNewsletter: async (newsletterId) => {\n                await fetch(`${idApiUrl}/users/me/newsletters`, {\n                    method: 'PATCH',\n                    body: JSON.stringify({\n                        id: newsletterId,\n                        subscribed: true,\n                    }),\n                    credentials: 'include',\n                });\n            } }) }));\n};\nexport const BrazeBanner = ({ meta, idApiUrl }) => {\n    const [BrazeComponent, setBrazeComponent] = useState();\n    useEffect(() => {\n        import(\n        /* webpackChunkName: \"guardian-braze-components-banner\" */ '@guardian/braze-components/banner')\n            .then((module) => {\n            setBrazeComponent(() => module.BrazeBannerComponent);\n        })\n            .catch((error) => window.guardian.modules.sentry.reportError(error, 'braze-banner'));\n    }, []);\n    return (_jsx(_Fragment, { children: BrazeComponent ? (_jsx(BrazeBannerWithSatisfiedDependencies, { BrazeComponent: BrazeComponent, meta: meta, idApiUrl: idApiUrl })) : (_jsx(\"div\", {})) }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { getCookie } from '@guardian/libs';\nimport { getBanner, getPuzzlesBanner, } from '@guardian/support-dotcom-components';\nimport { useState } from 'react';\nimport { trackNonClickInteraction } from '../../browser/ga/ga';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getLastOneOffContributionDate, getPurchaseInfo, hasCmpConsentForBrowserId, hasOptedOutOfArticleCount, lazyFetchEmailWithTimeout, MODULES_VERSION, setLocalNoBannerCachePeriod, shouldHideSupportMessaging, withinLocalNoBannerCachePeriod, } from '../../lib/contributions';\nimport { getToday } from '../../lib/dailyArticleCount';\nimport { getZIndex } from '../../lib/getZIndex';\nimport { setAutomat } from '../../lib/setAutomat';\nimport { useIsInView } from '../../lib/useIsInView';\nimport { useOnce } from '../../lib/useOnce';\nconst getArticleCountToday = (articleCounts) => {\n    const latest = articleCounts?.dailyArticleHistory[0];\n    if (latest) {\n        if (latest.day === getToday()) {\n            return latest.count;\n        }\n        // article counting is enabled, but none so far today\n        return 0;\n    }\n    return undefined;\n};\nconst buildPayload = async ({ isSignedIn, shouldHideReaderRevenue, isPaidContent, alreadyVisitedCount, engagementBannerLastClosedAt, subscriptionBannerLastClosedAt, signInBannerLastClosedAt, countryCode, optedOutOfArticleCount, asyncArticleCounts, sectionId, tags, contentType, }) => {\n    const articleCounts = await asyncArticleCounts;\n    const weeklyArticleHistory = articleCounts?.weeklyArticleHistory;\n    const articleCountToday = getArticleCountToday(articleCounts);\n    const browserId = getCookie({ name: 'bwid', shouldMemoize: true });\n    return {\n        tracking: {\n            ophanPageId: window.guardian.config.ophan.pageViewId,\n            platformId: 'GUARDIAN_WEB',\n            clientName: 'dcr',\n            referrerUrl: window.location.origin + window.location.pathname,\n        },\n        targeting: {\n            alreadyVisitedCount,\n            shouldHideReaderRevenue,\n            isPaidContent,\n            showSupportMessaging: !shouldHideSupportMessaging(isSignedIn),\n            engagementBannerLastClosedAt,\n            subscriptionBannerLastClosedAt,\n            signInBannerLastClosedAt,\n            mvtId: Number(getCookie({ name: 'GU_mvt_id', shouldMemoize: true })),\n            countryCode,\n            weeklyArticleHistory,\n            articleCountToday,\n            hasOptedOutOfArticleCount: optedOutOfArticleCount,\n            modulesVersion: MODULES_VERSION,\n            sectionId,\n            tagIds: tags.map((tag) => tag.id),\n            contentType,\n            browserId: (await hasCmpConsentForBrowserId())\n                ? browserId ?? undefined\n                : undefined,\n            purchaseInfo: getPurchaseInfo(),\n            isSignedIn,\n            lastOneOffContributionDate: getLastOneOffContributionDate(),\n        },\n    };\n};\nexport const canShowRRBanner = async ({ remoteBannerConfig, isSignedIn, asyncCountryCode, contentType, sectionId, shouldHideReaderRevenue, isMinuteArticle, isPaidContent, isSensitive, tags, contributionsServiceUrl, alreadyVisitedCount, engagementBannerLastClosedAt, subscriptionBannerLastClosedAt, signInBannerLastClosedAt, isPreview, idApiUrl, signInGateWillShow, asyncArticleCounts, }) => {\n    if (!remoteBannerConfig)\n        return { show: false };\n    if (shouldHideReaderRevenue ||\n        isPaidContent ||\n        isPreview ||\n        signInGateWillShow) {\n        // We never serve Reader Revenue banners in this case\n        return { show: false };\n    }\n    const purchaseInfo = getPurchaseInfo();\n    const showSignInPrompt = purchaseInfo && !isSignedIn && !signInBannerLastClosedAt;\n    const hasForceBannerParam = window.location.search.includes('force-banner');\n    if (!showSignInPrompt &&\n        !hasForceBannerParam &&\n        engagementBannerLastClosedAt &&\n        subscriptionBannerLastClosedAt &&\n        withinLocalNoBannerCachePeriod()) {\n        return { show: false };\n    }\n    const countryCode = await asyncCountryCode;\n    const optedOutOfArticleCount = await hasOptedOutOfArticleCount();\n    const bannerPayload = await buildPayload({\n        isSignedIn,\n        countryCode,\n        contentType,\n        sectionId,\n        shouldHideReaderRevenue,\n        isMinuteArticle,\n        isPaidContent,\n        tags,\n        contributionsServiceUrl,\n        isSensitive,\n        alreadyVisitedCount,\n        engagementBannerLastClosedAt,\n        subscriptionBannerLastClosedAt,\n        signInBannerLastClosedAt,\n        optedOutOfArticleCount,\n        asyncArticleCounts,\n    });\n    const response = await getBanner(contributionsServiceUrl, bannerPayload);\n    if (!response.data) {\n        if (engagementBannerLastClosedAt && subscriptionBannerLastClosedAt) {\n            setLocalNoBannerCachePeriod();\n        }\n        return { show: false };\n    }\n    const { module, meta } = response.data;\n    const fetchEmail = isSignedIn\n        ? lazyFetchEmailWithTimeout(idApiUrl)\n        : undefined;\n    return { show: true, meta: { module, meta, fetchEmail } };\n};\nexport const canShowPuzzlesBanner = async ({ remoteBannerConfig, isSignedIn, asyncCountryCode, contentType, sectionId, shouldHideReaderRevenue, isMinuteArticle, isPaidContent, isSensitive, tags, contributionsServiceUrl, alreadyVisitedCount, engagementBannerLastClosedAt, subscriptionBannerLastClosedAt, section, asyncArticleCounts, }) => {\n    const isPuzzlesPage = section === 'crosswords' ||\n        tags.some((tag) => tag.type === 'Series' && tag.title === 'Sudoku');\n    if (shouldHideReaderRevenue) {\n        // We never serve Reader Revenue banners in this case\n        return { show: false };\n    }\n    if (isPuzzlesPage && remoteBannerConfig) {\n        const countryCode = await asyncCountryCode;\n        const optedOutOfArticleCount = await hasOptedOutOfArticleCount();\n        const bannerPayload = await buildPayload({\n            isSignedIn,\n            countryCode,\n            contentType,\n            sectionId,\n            shouldHideReaderRevenue,\n            isMinuteArticle,\n            isPaidContent,\n            tags,\n            contributionsServiceUrl,\n            isSensitive,\n            alreadyVisitedCount,\n            engagementBannerLastClosedAt,\n            subscriptionBannerLastClosedAt,\n            optedOutOfArticleCount,\n            asyncArticleCounts,\n        });\n        return getPuzzlesBanner(contributionsServiceUrl, bannerPayload).then((response) => {\n            if (!response.data) {\n                return { show: false };\n            }\n            const { module, meta } = response.data;\n            return { show: true, meta: { module, meta } };\n        });\n    }\n    return { show: false };\n};\nconst RemoteBanner = ({ componentTypeName, displayEvent, meta, module, fetchEmail, }) => {\n    const [Banner, setBanner] = useState();\n    const [hasBeenSeen, setNode] = useIsInView({\n        threshold: 0,\n        debounce: true,\n    });\n    useOnce(() => {\n        if (module === undefined || meta === undefined) {\n            return;\n        }\n        setAutomat();\n        window\n            .guardianPolyfilledImport(module.url)\n            .then((bannerModule) => {\n            setBanner(() => bannerModule[module.name] ?? null); // useState requires functions to be wrapped\n        })\n            .catch((error) => {\n            const msg = `Error importing RR banner: ${String(error)}`;\n            console.log(msg);\n            window.guardian.modules.sentry.reportError(new Error(msg), 'rr-banner');\n        });\n    }, []);\n    useOnce(() => {\n        const { componentType } = meta;\n        // track banner view event in Google Analytics for subscriptions banner\n        if (componentType === componentTypeName) {\n            trackNonClickInteraction(displayEvent);\n        }\n    }, [hasBeenSeen, meta]);\n    if (Banner !== undefined) {\n        return (\n        // The css here is necessary to put the container div in view, so that we can track the view\n        _jsx(\"div\", { ref: setNode, css: css `\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\t${getZIndex('banner')}\n\t\t\t\t`, children: _jsx(Banner, { ...module.props, submitComponentEvent: submitComponentEvent, fetchEmail: fetchEmail }) }));\n    }\n    return null;\n};\nexport const ReaderRevenueBanner = ({ meta, module, fetchEmail, }) => (_jsx(RemoteBanner, { componentTypeName: \"ACQUISITIONS_SUBSCRIPTIONS_BANNER\", displayEvent: \"subscription-banner : display\", meta: meta, module: module, fetchEmail: fetchEmail }));\nexport const PuzzlesBanner = ({ meta, module }) => (_jsx(RemoteBanner, { componentTypeName: \"ACQUISITIONS_OTHER\", displayEvent: \"puzzles-banner : display\", meta: meta, module: module }));\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { cmp } from '@guardian/consent-management-platform';\nimport { getCookie } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getArticleCounts } from '../../lib/articleCount';\nimport { getAlreadyVisitedCount } from '../lib/alreadyVisited';\nimport { getLocaleCode } from '../lib/getCountryCode';\nimport { pickMessage } from '../lib/messagePicker';\nimport { useBraze } from '../lib/useBraze';\nimport { useOnce } from '../lib/useOnce';\nimport { useSignInGateWillShow } from '../lib/useSignInGateWillShow';\nimport { BrazeBanner, canShowBrazeBanner, } from './StickyBottomBanner/BrazeBanner';\nimport { canShowPuzzlesBanner, canShowRRBanner, PuzzlesBanner, ReaderRevenueBanner, } from './StickyBottomBanner/ReaderRevenueBanner';\nconst getBannerLastClosedAt = (key) => {\n    const item = localStorage.getItem(`gu.prefs.${key}`);\n    if (item) {\n        const parsedItem = JSON.parse(item);\n        return parsedItem.value;\n    }\n    return item;\n};\nconst DEFAULT_BANNER_TIMEOUT_MILLIS = 2000;\nconst buildCmpBannerConfig = () => ({\n    candidate: {\n        id: 'cmpUi',\n        canShow: () => cmp\n            .willShowPrivacyMessage()\n            .then((result) => result ? { show: true, meta: undefined } : { show: false }),\n        show: () => {\n            // New CMP is not a react component and is shown outside of react's world\n            // so render nothing if it will show\n            return null;\n        },\n    },\n    timeoutMillis: null,\n});\nconst buildRRBannerConfigWith = ({ id, BannerComponent, canShowFn, isEnabled, }) => {\n    return ({ isSignedIn, asyncCountryCode, isPreview, asyncArticleCounts, signInGateWillShow = false, contentType, section, shouldHideReaderRevenue, isMinuteArticle, isPaidContent, isSensitive, tags, contributionsServiceUrl, idApiUrl, }) => {\n        return {\n            candidate: {\n                id,\n                canShow: () => canShowFn({\n                    remoteBannerConfig: isEnabled,\n                    isSignedIn,\n                    asyncCountryCode,\n                    contentType,\n                    sectionId: section,\n                    shouldHideReaderRevenue,\n                    isMinuteArticle,\n                    isPaidContent,\n                    isSensitive,\n                    tags,\n                    contributionsServiceUrl,\n                    alreadyVisitedCount: getAlreadyVisitedCount(),\n                    engagementBannerLastClosedAt: getBannerLastClosedAt('engagementBannerLastClosedAt'),\n                    subscriptionBannerLastClosedAt: getBannerLastClosedAt('subscriptionBannerLastClosedAt'),\n                    signInBannerLastClosedAt: getBannerLastClosedAt('signInBannerLastClosedAt'),\n                    section,\n                    isPreview,\n                    idApiUrl,\n                    signInGateWillShow,\n                    asyncArticleCounts,\n                }),\n                show: ({ meta, module, fetchEmail }) => () => (_jsx(BannerComponent, { meta: meta, module: module, fetchEmail: fetchEmail })),\n            },\n            timeoutMillis: DEFAULT_BANNER_TIMEOUT_MILLIS,\n        };\n    };\n};\nconst buildPuzzlesBannerConfig = (isEnabled) => buildRRBannerConfigWith({\n    id: 'puzzles-banner',\n    BannerComponent: PuzzlesBanner,\n    canShowFn: canShowPuzzlesBanner,\n    isEnabled,\n});\nconst buildReaderRevenueBannerConfig = (isEnabled) => buildRRBannerConfigWith({\n    id: 'reader-revenue-banner',\n    BannerComponent: ReaderRevenueBanner,\n    canShowFn: canShowRRBanner,\n    isEnabled,\n});\nconst buildBrazeBanner = (brazeMessages, brazeArticleContext, idApiUrl, tags) => ({\n    candidate: {\n        id: 'braze-banner',\n        canShow: () => canShowBrazeBanner(brazeMessages, brazeArticleContext, tags),\n        show: (meta) => () => _jsx(BrazeBanner, { meta: meta, idApiUrl: idApiUrl }),\n    },\n    timeoutMillis: DEFAULT_BANNER_TIMEOUT_MILLIS,\n});\nexport const StickyBottomBanner = ({ contentType, sectionName, section, tags, isPaidContent, isPreview, shouldHideReaderRevenue, isMinuteArticle, isSensitive, contributionsServiceUrl, idApiUrl, pageId, keywordIds, remoteBannerSwitch, puzzleBannerSwitch, }) => {\n    const { brazeMessages } = useBraze(idApiUrl);\n    const asyncCountryCode = getLocaleCode();\n    const isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n    const [SelectedBanner, setSelectedBanner] = useState(null);\n    const [asyncArticleCounts, setAsyncArticleCounts] = useState();\n    const signInGateWillShow = useSignInGateWillShow({\n        isSignedIn,\n        contentType,\n        sectionName,\n        tags,\n        isPaidContent,\n        isPreview,\n    });\n    useEffect(() => {\n        setAsyncArticleCounts(getArticleCounts(pageId, keywordIds));\n    }, [pageId, keywordIds]);\n    useOnce(() => {\n        const CMP = buildCmpBannerConfig();\n        const puzzlesBanner = buildPuzzlesBannerConfig(puzzleBannerSwitch)({\n            isSignedIn,\n            asyncCountryCode: asyncCountryCode,\n            isPreview,\n            asyncArticleCounts: asyncArticleCounts,\n            contentType,\n            section,\n            shouldHideReaderRevenue,\n            isMinuteArticle,\n            isPaidContent,\n            isSensitive,\n            tags,\n            contributionsServiceUrl,\n            idApiUrl,\n        });\n        const readerRevenue = buildReaderRevenueBannerConfig(remoteBannerSwitch)({\n            isSignedIn,\n            asyncCountryCode: asyncCountryCode,\n            isPreview,\n            asyncArticleCounts: asyncArticleCounts,\n            signInGateWillShow,\n            contentType,\n            section,\n            shouldHideReaderRevenue,\n            isMinuteArticle,\n            isPaidContent,\n            isSensitive,\n            tags,\n            contributionsServiceUrl,\n            idApiUrl,\n        });\n        const brazeArticleContext = {\n            section: sectionName,\n        };\n        const brazeBanner = buildBrazeBanner(brazeMessages, brazeArticleContext, idApiUrl, tags);\n        const bannerConfig = {\n            candidates: [CMP, puzzlesBanner, readerRevenue, brazeBanner],\n            name: 'banner',\n        };\n        pickMessage(bannerConfig)\n            .then((PickedBanner) => setSelectedBanner(PickedBanner))\n            .catch((e) => console.error(`StickyBottomBanner pickMessage - error: ${String(e)}`));\n    }, [isSignedIn, asyncCountryCode, brazeMessages, asyncArticleCounts]);\n    if (SelectedBanner) {\n        return _jsx(SelectedBanner, {});\n    }\n    return null;\n};\n","import { useEffect, useState } from 'react';\nimport { useOnce } from './useOnce';\nimport { useSignInGateSelector } from './useSignInGateSelector';\n/**\n * @description\n * A custom hook to determine if a sign in gate will show on the current page\n * @param {Boolean} isSignedIn - Is the user signed in to the guardian\n * */\nexport const useSignInGateWillShow = ({ isSignedIn, contentType, sectionName, tags, isPaidContent, isPreview, }) => {\n    const [gateVariant, setGateVariant] = useState(undefined);\n    const [currentTest, setCurrentTest] = useState(undefined);\n    const [canShowGate, setCanShowGate] = useState(false);\n    const gateSelector = useSignInGateSelector();\n    useOnce(() => {\n        const [gateSelectorVariant, gateSelectorTest] = gateSelector;\n        setGateVariant(gateSelectorVariant);\n        setCurrentTest(gateSelectorTest);\n    }, [gateSelector]);\n    useEffect(() => {\n        if (gateVariant && currentTest) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            gateVariant\n                .canShow({\n                isSignedIn: !!isSignedIn,\n                currentTest,\n                contentType,\n                sectionName,\n                tags,\n                isPaidContent,\n                isPreview,\n            })\n                .then(setCanShowGate);\n        }\n    }, [\n        currentTest,\n        gateVariant,\n        isSignedIn,\n        contentType,\n        sectionName,\n        tags,\n        isPaidContent,\n        isPreview,\n    ]);\n    return canShowGate && !!gateVariant && !!gateVariant.gate;\n};\n","const AlreadyVisitedKey = 'gu.alreadyVisited';\nexport const getAlreadyVisitedCount = () => {\n    const alreadyVisited = parseInt(localStorage.getItem(AlreadyVisitedKey) ?? '', 10);\n    return !Number.isNaN(alreadyVisited) ? alreadyVisited : 0;\n};\nexport const setAlreadyVisited = (count) => {\n    localStorage.setItem(AlreadyVisitedKey, count.toString());\n};\nexport const incrementAlreadyVisited = () => {\n    const alreadyVisited = getAlreadyVisitedCount();\n    setAlreadyVisited(alreadyVisited + 1);\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    ${getZIndex('TheGuardian')}\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n    // Modals will go here at the top\n    // Sticky video and button need to be above everything\n    'sticky-video-button',\n    'sticky-video',\n    'banner',\n    'dropdown',\n    'burger',\n    'expanded-veggie-menu-wrapper',\n    'expanded-veggie-menu',\n    // Mobile sticky appears below banners\n    'mobileSticky',\n    // Headers with sticky ads\n    'stickyAdWrapperLabsHeader',\n    'stickyAdWrapper',\n    'stickyAdWrapperNav',\n    // Edition selector in nav - needs to be below stickyAdWrapper\n    'editionDropdown',\n    // Liveblog toast\n    'toast',\n    // Onwards Carousel (Related content etc)\n    'onwardsCarousel',\n    // Search link should be above The Guardian svg\n    'myAccountDropdown',\n    'searchHeaderLink',\n    'TheGuardian',\n    // Wrapper after nav stuff\n    'headerWrapper',\n    // Article headline (should be above main media)\n    'articleHeadline',\n    'immersiveBlackBox',\n    // Body\n    'bodyArea',\n    'rightColumnArea',\n    // Main media\n    'mainMedia',\n    // Nested links in cards should sit above the main card link\n    // See: https://www.sarasoueidan.com/blog/nested-links/\n    'card-nested-link',\n    'card-link',\n];\nconst decideIndex = (name) => {\n    const index = indices.indexOf(name);\n    if (index === -1)\n        return -1; // indexOf returns -1 if there is no match\n    return indices.length - index; // reverse the indices: last item gets 1\n};\nexport const getZIndex = (zIndex) => `z-index: ${decideIndex(zIndex)};`;\nexport const getZIndexImportant = (zIndex) => `z-index: ${decideIndex(zIndex)} !important;`;\n"],"names":["containerStyles","css","getZIndex","canShowBrazeBanner","brazeMessages","brazeArticleContext","tags","forcedBrazeMeta","getBrazeMetaFromUrlFragment","show","meta","suppressForTaylorReport","getMessageForBanner","message","logButtonClickWithBraze","internalButtonId","logButtonClick","logImpressionWithBraze","logImpression","extras","dataFromBraze","BrazeBannerWithSatisfiedDependencies","BrazeComponent","idApiUrl","useEffect","submitComponentEvent","component","componentType","id","ophanComponentId","componentName","action","_jsx","children","brazeMessageProps","subscribeToNewsletter","newsletterId","fetch","method","body","JSON","stringify","subscribed","credentials","BrazeBanner","useState","setBrazeComponent","then","module","BrazeBannerComponent","catch","error","window","guardian","modules","sentry","reportError","_Fragment","getArticleCountToday","articleCounts","latest","dailyArticleHistory","day","getToday","count","buildPayload","isSignedIn","shouldHideReaderRevenue","isPaidContent","alreadyVisitedCount","engagementBannerLastClosedAt","subscriptionBannerLastClosedAt","signInBannerLastClosedAt","countryCode","optedOutOfArticleCount","asyncArticleCounts","sectionId","contentType","weeklyArticleHistory","articleCountToday","browserId","getCookie","name","shouldMemoize","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","shouldHideSupportMessaging","Number","MODULES_VERSION","map","tag","hasCmpConsentForBrowserId","undefined","getPurchaseInfo","getLastOneOffContributionDate","showSupportMessaging","mvtId","hasOptedOutOfArticleCount","modulesVersion","tagIds","purchaseInfo","lastOneOffContributionDate","tracking","targeting","canShowRRBanner","remoteBannerConfig","asyncCountryCode","isMinuteArticle","isSensitive","contributionsServiceUrl","isPreview","signInGateWillShow","showSignInPrompt","hasForceBannerParam","search","includes","withinLocalNoBannerCachePeriod","bannerPayload","getBanner","response","data","setLocalNoBannerCachePeriod","fetchEmail","lazyFetchEmailWithTimeout","canShowPuzzlesBanner","section","isPuzzlesPage","some","type","title","getPuzzlesBanner","RemoteBanner","componentTypeName","displayEvent","Banner","setBanner","useIsInView","threshold","debounce","hasBeenSeen","setNode","useOnce","setAutomat","guardianPolyfilledImport","url","bannerModule","msg","String","console","log","Error","trackNonClickInteraction","ref","props","ReaderRevenueBanner","PuzzlesBanner","getBannerLastClosedAt","key","item","localStorage","getItem","parse","value","buildRRBannerConfigWith","BannerComponent","canShowFn","isEnabled","candidate","canShow","getAlreadyVisitedCount","timeoutMillis","StickyBottomBanner","sectionName","pageId","keywordIds","remoteBannerSwitch","puzzleBannerSwitch","useBraze","getLocaleCode","SelectedBanner","setSelectedBanner","setAsyncArticleCounts","gateVariant","setGateVariant","currentTest","setCurrentTest","canShowGate","setCanShowGate","gateSelector","useSignInGateSelector","gateSelectorVariant","gateSelectorTest","gate","useSignInGateWillShow","getArticleCounts","CMP","cmp","result","puzzlesBanner","buildPuzzlesBannerConfig","readerRevenue","buildReaderRevenueBannerConfig","brazeBanner","buildBrazeBanner","bannerConfig","candidates","pickMessage","PickedBanner","e","AlreadyVisitedKey","alreadyVisited","parseInt","isNaN","setAlreadyVisited","setItem","toString","incrementAlreadyVisited","indices","zIndex","index","indexOf","length"],"sourceRoot":""}