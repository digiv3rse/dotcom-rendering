{"version":3,"file":"EmbedBlockComponent-importable.legacy.d908e376eed7f0bbdee6.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/escapeData.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/ClickToView.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/EmbedBlockComponent.importable.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/breakpoints/breakpoints.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/mq/mq.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/Button.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/vendor/icons/SvgCheckmark.tsx"],"sourcesContent":["/**\n * Create an escapedData string that can be safely placed inside script tags on the page\n *\n * The level of sanitisation here is limited to escaping script tags to prevent\n * errors when embedded html string contain their own script tags.\n *\n * See: https://www.w3.org/TR/html52/semantics-scripting.html#restrictions-for-contents-of-script-elements\n *\n *  > The easiest and safest way to avoid the rather strange restrictions described in this section is to\n *  > always escape \"&lt;!--\" as \"&lt;\\!--\", \"&lt;script\" as \"&lt;\\script\", and \"&lt;/script\" as \"&lt;\\/script\"\n *\n * TODO: This could be extended\n */\n// See: https://stackoverflow.com/a/1144788\nfunction escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\nexport const escapeData = (data) => {\n    let escaped = data;\n    escaped = replaceAll(escaped, '<!--', '<\\\\!--');\n    escaped = replaceAll(escaped, '<script', '<\\\\script');\n    escaped = replaceAll(escaped, '</script', '<\\\\/script');\n    return escaped;\n};\nexport const unescapeData = (data) => {\n    let unescaped = data;\n    unescaped = replaceAll(unescaped, '<\\\\!--', '<!--');\n    unescaped = replaceAll(unescaped, '<\\\\script', '<script');\n    unescaped = replaceAll(unescaped, '<\\\\/script', '</script');\n    return unescaped;\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { background, border, space, textSans, } from '@guardian/source-foundations';\nimport { Button, SvgCheckmark } from '@guardian/source-react-components';\nimport { useState } from 'react';\nconst roleTextSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return textSans.medium({ lineHeight: 'regular' });\n        }\n        case 'halfWidth':\n        case 'supporting':\n        case 'thumbnail': {\n            return textSans.small({ lineHeight: 'regular' });\n        }\n    }\n};\nconst roleHeadlineSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return textSans.large({\n                fontWeight: 'bold',\n                lineHeight: 'regular',\n            });\n        }\n        case 'halfWidth':\n        case 'supporting':\n        case 'thumbnail': {\n            return textSans.medium({\n                fontWeight: 'bold',\n                lineHeight: 'regular',\n            });\n        }\n    }\n};\nconst roleButtonSize = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase': {\n            return 'default';\n        }\n        case 'halfWidth':\n        case 'supporting':\n            return 'small';\n        case 'thumbnail': {\n            return 'xsmall';\n        }\n    }\n};\nconst roleButtonText = (role) => {\n    switch (role) {\n        case 'immersive':\n        case 'inline':\n        case 'showcase':\n        case 'halfWidth':\n        case 'supporting': {\n            return 'Allow and continue';\n        }\n        case 'thumbnail': {\n            return 'Allow';\n        }\n    }\n};\nconst shouldDisplayOverlay = ({ isTracking, isOverlayClicked, isMainMedia, }) => {\n    if (isMainMedia || !isTracking) {\n        return false;\n    }\n    if (isOverlayClicked) {\n        return false;\n    }\n    return true;\n};\nexport const ClickToView = ({ children, role = 'inline', onAccept, isTracking, isMainMedia, source, sourceDomain = 'unknown', }) => {\n    const [isOverlayClicked, setIsOverlayClicked] = useState(false);\n    const handleClick = () => {\n        setIsOverlayClicked(true);\n        if (onAccept) {\n            setTimeout(() => onAccept());\n        }\n    };\n    const textSize = roleTextSize(role);\n    if (shouldDisplayOverlay({\n        isTracking,\n        isOverlayClicked,\n        isMainMedia,\n    })) {\n        return (_jsxs(\"div\", { css: css `\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbackground: ${background.secondary};\n\t\t\t\t\tborder: 1px solid ${border.secondary};\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tpadding: ${space[1]}px ${space[6]}px ${space[3]}px;\n\t\t\t\t\tmargin-bottom: ${space[3]}px;\n\t\t\t\t`, \"data-component\": `click-to-view:${sourceDomain}`, children: [_jsx(\"div\", { css: css `\n\t\t\t\t\t\t${roleHeadlineSize(role)}\n\t\t\t\t\t\tmargin-bottom: ${space[1]}px;\n\t\t\t\t\t`, children: source\n                        ? `Allow ${source} content?`\n                        : 'Allow content provided by a third party?' }), _jsx(\"p\", { css: css `\n\t\t\t\t\t\t${textSize}\n\t\t\t\t\t`, children: source ? (_jsxs(_Fragment, { children: [\"This article includes content provided by \", source, \". We ask for your permission before anything is loaded, as they may be using cookies and other technologies. To view this content,\", ' ', _jsx(\"strong\", { children: \"click 'Allow and continue'\" }), \".\"] })) : (_jsxs(_Fragment, { children: [\"This article includes content hosted on\", ' ', sourceDomain, \". We ask for your permission before anything is loaded, as the provider may be using cookies and other technologies. To view this content,\", ' ', _jsx(\"strong\", { children: \"click 'Allow and continue'\" }), \".\"] })) }), _jsx(\"div\", { css: css `\n\t\t\t\t\t\tmargin-top: ${space[5]}px;\n\t\t\t\t\t`, children: _jsx(Button, { priority: \"primary\", size: roleButtonSize(role), icon: _jsx(SvgCheckmark, {}), iconSide: \"left\", onClick: () => handleClick(), \"data-cy\": \"click-to-view-button\", \"data-link-name\": \"allow-button\", children: roleButtonText(role) }) })] }));\n    }\n    return _jsx(_Fragment, { children: children });\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { from, space, text, textSans } from '@guardian/source-foundations';\nimport { unescapeData } from '../../lib/escapeData';\nimport { ClickToView } from './ClickToView';\nconst emailCaptionStyle = css `\n\t${textSans.xxsmall()};\n\tword-break: break-all;\n\tcolor: ${text.supporting};\n\tpadding-bottom: ${space[1]}px;\n`;\nconst embedContainerStyles = (isEmailEmbed) => css `\n\t/* By using inline-block we keep email embed content together if a rich link is placed inline nearby */\n\t${isEmailEmbed &&\n    `\n\t\tdisplay: inline-block;\n\t\t${from.tablet}{\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t}\n\t`}\n\tiframe {\n\t\t/* Some embeds can hijack the iframe and calculate an incorrect width, which pushes the body out */\n\t\t/* stylelint-disable-next-line declaration-no-important */\n\t\twidth: 100% !important;\n\t\t${isEmailEmbed && `min-height: 60px;`}\n\t}\n`;\nexport const EmbedBlockComponent = ({ html, caption, role, isTracking, isMainMedia, source, sourceDomain, }) => {\n    // TODO: Email embeds are being turned into atoms, so we can remove this hack when that happens\n    const isEmailEmbed = html.includes('email/form');\n    return (_jsx(ClickToView, { role: role, isTracking: isTracking, isMainMedia: isMainMedia, source: source, sourceDomain: sourceDomain, children: _jsxs(\"div\", { \"data-cy\": \"embed-block\", css: embedContainerStyles(isEmailEmbed), children: [!!(isEmailEmbed && caption) && (_jsx(\"div\", { css: emailCaptionStyle, dangerouslySetInnerHTML: {\n                        __html: caption,\n                    } })), _jsx(\"div\", { dangerouslySetInnerHTML: { __html: unescapeData(html) } })] }) }));\n};\n","export type Breakpoint =\n\t| 'mobile'\n\t| 'mobileMedium'\n\t| 'mobileLandscape'\n\t| 'phablet'\n\t| 'tablet'\n\t| 'desktop'\n\t| 'leftCol'\n\t| 'wide';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page) •\n * [Design System](https://theguardian.design/2a1e5182b/p/41be19-grids)\n */\nexport const breakpoints = {\n\tmobile: 320,\n\tmobileMedium: 375,\n\tmobileLandscape: 480,\n\tphablet: 660,\n\ttablet: 740,\n\tdesktop: 980,\n\tleftCol: 1140,\n\twide: 1300,\n} as const;\n","import { breakpoints } from '../breakpoints/breakpoints';\nimport type { Breakpoint } from '../breakpoints/breakpoints';\n\nexport type BreakpointMap = {\n\t[key in Breakpoint]: string;\n};\n\nconst minWidth = (from: number): string => `@media (min-width: ${`${from}px`})`;\n\nconst maxWidth = (until: number): string =>\n\t`@media (max-width: ${`${until - 1}px`})`;\n\nconst minWidthMaxWidth = (from: number, until: number): string =>\n\t`@media (min-width: ${`${from}px`}) and (max-width: ${`${until - 1}px`})`;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#from)\n *\n * @example\n *\tconst styles = css`\n *\t\t${from.mobileLandscape} {\n *\t\t\tpadding: 0 20px;\n *\t\t}\n * `;\n */\nexport const from: BreakpointMap = {\n\tmobile: minWidth(breakpoints.mobile),\n\tmobileMedium: minWidth(breakpoints.mobileMedium),\n\tmobileLandscape: minWidth(breakpoints.mobileLandscape),\n\tphablet: minWidth(breakpoints.phablet),\n\ttablet: minWidth(breakpoints.tablet),\n\tdesktop: minWidth(breakpoints.desktop),\n\tleftCol: minWidth(breakpoints.leftCol),\n\twide: minWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#until)\n *\n * @example\n *\tconst styles = css`\n *\t\t${until.wide} {\n *\t\t\tpadding: 0 40px;\n *\t\t}\n * `;\n */\nexport const until: BreakpointMap = {\n\tmobile: maxWidth(breakpoints.mobile),\n\tmobileMedium: maxWidth(breakpoints.mobileMedium),\n\tmobileLandscape: maxWidth(breakpoints.mobileLandscape),\n\tphablet: maxWidth(breakpoints.phablet),\n\ttablet: maxWidth(breakpoints.tablet),\n\tdesktop: maxWidth(breakpoints.desktop),\n\tleftCol: maxWidth(breakpoints.leftCol),\n\twide: maxWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#betweenand)\n *\n * @example\n *\tconst styles = css`\n *\t\t${between.phablet.and.desktop} {\n *\t\t\tpadding: 0 32px;\n *\t\t}\n * `;\n */\nexport const between = {\n\tmobile: {\n\t\tand: {\n\t\t\tmobileMedium: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t),\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileMedium: {\n\t\tand: {\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileLandscape: {\n\t\tand: {\n\t\t\tphablet: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.phablet,\n\t\t\t),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.desktop,\n\t\t\t),\n\t\t\tleftCol: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.leftCol,\n\t\t\t),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide),\n\t\t},\n\t},\n\tphablet: {\n\t\tand: {\n\t\t\ttablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide),\n\t\t},\n\t},\n\ttablet: {\n\t\tand: {\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide),\n\t\t},\n\t},\n\tdesktop: {\n\t\tand: {\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide),\n\t\t},\n\t},\n\tleftCol: {\n\t\tand: {\n\t\t\twide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide),\n\t\t},\n\t},\n};\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { ButtonHTMLAttributes } from 'react';\nimport { buttonContents } from './shared';\nimport { buttonStyles } from './styles';\nimport type { SharedButtonProps } from './types';\n\nexport interface ButtonProps\n\textends SharedButtonProps,\n\t\tButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_button--primary-priority-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/435225-button) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/button/Button.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Buttons enable users to make choices or perform actions.\n *\n */\nexport const Button = ({\n\tpriority,\n\tsize,\n\ticon: iconSvg,\n\ticonSide,\n\thideLabel,\n\tnudgeIcon,\n\ttype = 'button',\n\tisLoading = false,\n\tloadingAnnouncement = 'Loading',\n\tcssOverrides,\n\tchildren,\n\t...props\n}: ButtonProps): EmotionJSX.Element => (\n\t<button\n\t\tcss={buttonStyles({\n\t\t\tsize,\n\t\t\tpriority,\n\t\t\ticon: iconSvg,\n\t\t\thideLabel,\n\t\t\ticonSide,\n\t\t\tnudgeIcon,\n\t\t\tcssOverrides,\n\t\t\tisLoading,\n\t\t})}\n\t\ttype={type}\n\t\taria-live=\"polite\"\n\t\taria-label={isLoading ? loadingAnnouncement : undefined}\n\t\t{...props}\n\t>\n\t\t{buttonContents({\n\t\t\thideLabel,\n\t\t\ticonSvg,\n\t\t\tisLoading,\n\t\t\tchildren,\n\t\t})}\n\t</button>\n);\n","// DO NOT EDIT\n// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { iconSize, visuallyHidden } from '@guardian/source-foundations';\nimport type { IconProps } from '../../src/@types/Icons';\n\nconst Svg = ({ size }: IconProps): EmotionJSX.Element => (\n\t<svg\n\t\twidth={size ? iconSize[size] : undefined}\n\t\theight={undefined}\n\t\tviewBox=\"-3 -3 30 30\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable={false}\n\t\taria-hidden={true}\n\t>\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M3.011 11.883 2 12.896l5.057 7.08h.48L22 5.005l-1.011-.986L7.537 16.207l-4.526-4.324Z\"\n\t\t/>\n\t</svg>\n);\n\nexport const SvgCheckmark = ({\n\tsize,\n\tisAnnouncedByScreenReader = false,\n}: IconProps): EmotionJSX.Element => (\n\t<>\n\t\t<Svg size={size} />\n\t\t{isAnnouncedByScreenReader ? (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\tCheckmark\n\t\t\t</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</>\n);\n"],"names":["replaceAll","str","find","replace","RegExp","escapeRegExp","unescapeData","data","unescaped","roleHeadlineSize","role","textSans","fontWeight","lineHeight","roleButtonSize","roleButtonText","ClickToView","children","onAccept","isTracking","isMainMedia","source","sourceDomain","useState","isOverlayClicked","setIsOverlayClicked","textSize","roleTextSize","_jsx","_Fragment","_jsxs","css","background","border","space","Button","priority","size","icon","SvgCheckmark","iconSide","onClick","setTimeout","emailCaptionStyle","text","embedContainerStyles","isEmailEmbed","from","EmbedBlockComponent","html","caption","includes","dangerouslySetInnerHTML","__html","breakpoints","mobile","mobileMedium","mobileLandscape","phablet","tablet","desktop","leftCol","wide","maxWidth","until","minWidthMaxWidth","minWidth","and","hideLabel","nudgeIcon","cssOverrides","isLoading","type","iconSvg","isAnnouncedByScreenReader","jsxs","visuallyHidden"],"sourceRoot":""}