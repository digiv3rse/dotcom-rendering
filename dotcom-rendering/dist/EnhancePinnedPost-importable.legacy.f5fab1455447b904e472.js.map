{"version":3,"file":"EnhancePinnedPost-importable.legacy.f5fab1455447b904e472.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/EnhancePinnedPost.importable.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/../node_modules/lodash.debounce/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { initPerf } from '../browser/initPerf';\nimport { submitComponentEvent } from '../browser/ophan/ophan';\nimport { useIsInView } from '../lib/useIsInView';\nconst isServer = typeof window === 'undefined';\nconst pinnedPost = !isServer\n    ? window.document.querySelector('[data-gu-marker=pinned-post]')\n    : null;\nconst pinnedPostCheckBox = !isServer\n    ? window.document.querySelector('input[name=pinned-post-checkbox]')\n    : null;\nconst pinnedPostContent = !isServer\n    ? window.document.querySelector('#collapsible-body')\n    : null;\n/**\n * toggle show more button and overlay on pinned post\n */\nfunction toggleShowMore(show) {\n    const pinnedPostButton = document.querySelector('#pinned-post-button');\n    const pinnedPostOverlay = document.querySelector('#pinned-post-overlay');\n    if (pinnedPostButton) {\n        if (show) {\n            pinnedPostButton.style.removeProperty('display');\n        }\n        else {\n            pinnedPostButton.style.display = 'none';\n        }\n    }\n    if (pinnedPostOverlay) {\n        if (show) {\n            pinnedPostOverlay.style.removeProperty('display');\n        }\n        else {\n            pinnedPostOverlay.style.display = 'none';\n        }\n    }\n}\n/**\n * Scroll to the top of the main content when the pinned post is collapsed if the top of the post is out of view\n */\nfunction scrollOnCollapse() {\n    const position = pinnedPost?.getBoundingClientRect();\n    if (position && position.top < 0) {\n        pinnedPost?.scrollIntoView({\n            behavior: 'smooth',\n        });\n    }\n}\nconst handleClickTracking = () => {\n    if (pinnedPostCheckBox instanceof HTMLInputElement) {\n        if (pinnedPostCheckBox.checked) {\n            submitComponentEvent({\n                component: {\n                    componentType: 'LIVE_BLOG_PINNED_POST',\n                    id: pinnedPost?.id,\n                },\n                action: 'CLICK',\n                value: 'show-more',\n            });\n        }\n        else {\n            submitComponentEvent({\n                component: {\n                    componentType: 'LIVE_BLOG_PINNED_POST',\n                    id: pinnedPost?.id,\n                },\n                action: 'CLICK',\n                value: 'show-less',\n            });\n            scrollOnCollapse();\n        }\n    }\n};\nexport const EnhancePinnedPost = () => {\n    const [hasBeenSeen, setHasBeenSeen] = useState(false);\n    const [isInView] = useIsInView({\n        threshold: 0.1,\n        repeat: true,\n        node: pinnedPost ?? undefined,\n    });\n    const pinnedPostTiming = useRef();\n    const checkContentHeight = () => {\n        if (pinnedPostContent) {\n            const contentFitsContainer = pinnedPostContent.scrollHeight <=\n                pinnedPostContent.clientHeight;\n            if (contentFitsContainer)\n                toggleShowMore(false);\n            else\n                toggleShowMore(true);\n        }\n    };\n    /**\n     * Checks for dom updates (embeds loading etc) and updates content height\n     */\n    useEffect(() => {\n        if (!pinnedPost)\n            return;\n        checkContentHeight();\n        const observer = new MutationObserver(checkContentHeight);\n        const config = {\n            childList: true,\n            subtree: true,\n        };\n        observer.observe(pinnedPost, config);\n        return () => observer.disconnect();\n    }, []);\n    useEffect(() => {\n        pinnedPostCheckBox?.addEventListener('change', handleClickTracking);\n        return () => {\n            pinnedPostCheckBox?.removeEventListener('change', handleClickTracking);\n        };\n    }, []);\n    useEffect(() => {\n        pinnedPostTiming.current = initPerf('pinned-post-view-duration');\n    }, []);\n    // calculate duration when user is viewing pinned post\n    // and emit ophan events when the pinned post goes out of view\n    useEffect(() => {\n        if (!pinnedPost)\n            return;\n        if (isInView) {\n            setHasBeenSeen(true);\n            pinnedPostTiming.current?.clear();\n            pinnedPostTiming.current?.start();\n        }\n        else if (hasBeenSeen) {\n            const timeTaken = pinnedPostTiming.current?.end();\n            if (timeTaken !== undefined) {\n                const timeTakenInSeconds = timeTaken / 1000;\n                submitComponentEvent({\n                    component: {\n                        componentType: 'LIVE_BLOG_PINNED_POST',\n                        id: pinnedPost.id,\n                    },\n                    action: 'VIEW',\n                    value: timeTakenInSeconds.toString(),\n                });\n            }\n        }\n    }, [isInView, hasBeenSeen]);\n    return null;\n};\n","import libDebounce from 'lodash.debounce';\nimport { useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @param options\n * @param {boolean} [options.debouce] If `true`, debounce triggers by 200ms.\n * By default, trigger instantaneously. Enabling debouncing ensures the target\n * element intersects for at least 200ms before the callback is executed\n * @param {boolean} [options.repeat] If `true`, trigger the hook on\n * all intersections. By default, only trigger on the first intersection.\n * @param {boolean} [options.node] Set the initial node, if known.\n * @returns a tuple containing [isInView, setNode];\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionFn = ([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    };\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionFn, 200)\n        : intersectionFn;\n    useEffect(() => {\n        // TODO: can we remove this? It’s now always cleaned up\n        if (observer.current) {\n            observer.current.disconnect();\n        }\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety for browser support\n        if (window.IntersectionObserver) {\n            observer.current = new window.IntersectionObserver(intersectionCallback, options);\n            if (node) {\n                observer.current.observe(node);\n            }\n        }\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"names":["isServer","window","pinnedPost","document","querySelector","pinnedPostCheckBox","pinnedPostContent","handleClickTracking","position","HTMLInputElement","checked","submitComponentEvent","component","componentType","id","action","value","getBoundingClientRect","top","scrollIntoView","behavior","EnhancePinnedPost","useState","hasBeenSeen","setHasBeenSeen","useIsInView","threshold","repeat","node","undefined","isInView","pinnedPostTiming","useRef","checkContentHeight","show","pinnedPostButton","pinnedPostOverlay","scrollHeight","clientHeight","style","removeProperty","display","useEffect","observer","MutationObserver","observe","childList","subtree","disconnect","addEventListener","removeEventListener","current","initPerf","clear","start","timeTaken","end","timeTakenInSeconds","toString","options","setIsInView","setNode","intersectionFn","entry","isIntersecting","intersectionCallback","debounce","libDebounce","IntersectionObserver","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","nativeMax","Math","max","nativeMin","min","now","Date","isObject","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush"],"sourceRoot":""}