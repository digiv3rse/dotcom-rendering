{"version":3,"file":"discussion.legacy.538d4dcf12473c5809a7.js","mappings":"0MAqBaA,EAAa,WAUtB,OAHiBC,OAAOC,SAASC,KACpBC,SAAS,YA1B1B,WACI,IACI,IAAMC,EAAO,sBAEPC,EAAYC,SAASC,cAAc,kBAAD,OAAmBH,EAAI,MAC/D,IAAKC,EACD,OAEJ,IAAMG,GAAQC,EAAAA,EAAAA,GAASJ,GAEvBG,EAAME,UAAW,GAEZC,EAAAA,EAAAA,GAAYP,EAAMI,EAAOH,GAAWO,EAAAA,EAAAA,KAGzC,CADJ,MAAOC,GACH,CAER,CAUQC,GACGC,QAAQC,SACnB,C","sources":["webpack://@guardian/dotcom-rendering/./src/web/browser/discussion.ts"],"sourcesContent":["import { doHydration } from './islands/doHydration';\nimport { getEmotionCache } from './islands/emotion';\nimport { getProps } from './islands/getProps';\nfunction forceHydration() {\n    try {\n        const name = 'DiscussionContainer';\n        // Select the Discussion island element\n        const guElement = document.querySelector(`gu-island[name=${name}]`);\n        if (!guElement)\n            return;\n        // Read the props from where they have been serialised in the dom using an Island\n        const props = getProps(guElement);\n        // Now that we have the props as an object, tell Discussion we want it to expand itself\n        props.expanded = true;\n        // Force hydration\n        void doHydration(name, props, guElement, getEmotionCache());\n    }\n    catch (err) {\n        // Do nothing\n    }\n}\nexport const discussion = () => {\n    /**\n     * If we have either a #comment-123456 permalink or the #comments link in the url\n     * then we want to hydrate and expand the discussion without waiting for the\n     * reader to scroll down to it\n     *\n     */\n    const hashLink = window.location.hash;\n    if (hashLink.includes('comment'))\n        forceHydration();\n    return Promise.resolve();\n};\n"],"names":["discussion","window","location","hash","includes","name","guElement","document","querySelector","props","getProps","expanded","doHydration","getEmotionCache","err","forceHydration","Promise","resolve"],"sourceRoot":""}