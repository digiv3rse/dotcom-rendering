{"version":3,"file":"AnimatePulsingDots-importable.legacy.ec1aec48ac8192247d20.js","mappings":"wMAkBaA,EAAqB,WAW9B,OAVAC,EAAAA,EAAAA,YAAU,YAMqB,IAHAC,EAAAA,EAAAA,MAAAA,IAAkB,6CAlBhCC,SAASC,iBAAiB,wCAClCC,SAAQ,SAACC,GACdA,EAAQC,aAAa,6BAA8B,QAGnDD,EAAQC,aAAa,eAAgB,OACzC,GAkBA,IACO,IACX,C","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/AnimatePulsingDots.importable.tsx"],"sourcesContent":["import { storage } from '@guardian/libs';\nimport { useEffect } from 'react';\nconst animatePulsingDots = () => {\n    // Get all the elements that aren't hydrated\n    const elements = document.querySelectorAll(`[data-flashing-dot-hydrated=\"false\"]`);\n    elements.forEach((element) => {\n        element.setAttribute('data-flashing-dot-hydrated', 'true');\n        // In PulsingDot.tsx, we set the animation only to run\n        // if this data attribute is set\n        element.setAttribute('data-animate', 'true');\n    });\n};\n/**\n * Island for animating pulsing dots which aren't already hydrated\n * See PulsingDot.tsx for more info\n *\n * - We use this for fronts, where we add pulsing dots to the page which aren't wrapped in islands\n */\nexport const AnimatePulsingDots = () => {\n    useEffect(() => {\n        // Respect the accessibility flag set here\n        // https://www.theguardian.com/help/accessibility-help\n        const flashingPreference = storage.local.get('gu.prefs.accessibility.flashing-elements');\n        // If the user hasn't explicitly set their flashing preference to 'false'\n        // then we can animate the pulsing dots\n        if (flashingPreference !== false) {\n            animatePulsingDots();\n        }\n    });\n    return null;\n};\n"],"names":["AnimatePulsingDots","useEffect","storage","document","querySelectorAll","forEach","element","setAttribute"],"sourceRoot":""}