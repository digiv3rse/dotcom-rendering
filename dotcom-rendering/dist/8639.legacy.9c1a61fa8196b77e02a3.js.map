{"version":3,"file":"8639.legacy.9c1a61fa8196b77e02a3.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/accessibility/focus-halo.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/accessibility/visually-hidden.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/animation/transitions.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/index.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/size/size.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/space/space.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/shared.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/button/theme.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/icons/SvgSpinner.tsx","webpack://@guardian/dotcom-rendering/../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://@guardian/dotcom-rendering/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { palette } from '../colour/palette';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_focushalo--page)\n *\n * CSS rules that provide a clear visual focus state to support keyboard navigation.\n */\nexport const focusHalo = `\n outline: 0;\n html:not(.src-focus-disabled) & {\n\t box-shadow: 0 0 0 5px ${palette.focus[400]};\n }\n`;\n\nexport const focusHaloSpaced = `\n outline: 0;\n html:not(.src-focus-disabled) & {\n\toutline: 5px solid ${palette.focus[400]};\n\toutline-offset: 3px;\n }\n`;\n","/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_visuallyhidden--page)\n *\n * CSS rules that hide something from sight while still being available to screen readers.\n *\n * @see https://webaim.org/techniques/css/invisiblecontent/\n * @see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n * @see https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html\n */\nexport const visuallyHidden = `\n\tposition: absolute;\n\toverflow: hidden; /* gets rid of horizontal scrollbar that appears in some circumstances */\n\twhite-space: nowrap; /* The white-space property forces the content to render on one line. */\n\twidth: 1px;  /* ensures content is announced by VoiceOver. */\n\theight: 1px; /* ensures content is announced by VoiceOver. */\n\tmargin: -1px; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tpadding: 0; /* hide or clip content that does not fit into a 1-pixel visible area. */\n\tborder: 0;\n\tclip: rect(1px, 1px, 1px, 1px); /* clip removes any visible trace of the element */\n\t-webkit-clip-path: inset(50%); /* clip removes any visible trace of the element */\n\tclip-path: inset(50%); /* clip removes any visible trace of the element */\n`;\n","const transitions = {\n\tshort: '.2s cubic-bezier(.64, .57, .67, 1.53)',\n\tmedium: '.3s ease-in-out',\n\tlong: '.65s ease-in-out',\n};\n\nexport { transitions };\n","import { palette } from './colour/palette';\n\n// accessibility\nexport { descriptionId } from './accessibility/description-id';\nexport { focusHalo, focusHaloSpaced } from './accessibility/focus-halo';\nexport { generateSourceId } from './accessibility/generate-source-id';\nexport { visuallyHidden } from './accessibility/visually-hidden';\n\n// animation\nexport { transitions } from './animation/transitions';\n\n// breakpoints\nexport type { Breakpoint } from './breakpoints/breakpoints';\nexport { breakpoints } from './breakpoints/breakpoints';\n\n// mq\nexport { between, from, until } from './mq/mq';\n\n// palette\nexport { palette };\n\n/**\n * @deprecated exports - to be removed in a future major version.\n * Colours should now be imported from the `palette` object.\n */\nexport {\n\tbackground,\n\tbrandBackground,\n\tbrandAltBackground,\n\tborder,\n\tbrandBorder,\n\tbrandAltBorder,\n\tline,\n\tbrandLine,\n\tbrandAltLine,\n\ttext,\n\tbrandText,\n\tbrandAltText,\n} from './colour/palette';\n\n/**\n * @deprecated exports - to be removed in a future major version.\n * Colours should now be imported from the `palette` object.\n */\nexport const {\n\tbrand,\n\tbrandAlt,\n\tneutral,\n\terror,\n\tsuccess,\n\tnews,\n\topinion,\n\tsport,\n\tculture,\n\tlifestyle,\n\tlabs,\n\tspecialReport,\n\tfocus,\n} = palette;\n\n// size\nexport {\n\theight,\n\ticonSize,\n\tremHeight,\n\tremWidth,\n\tsize,\n\twidth,\n} from './size/size';\n\n// space\nexport { space, remSpace } from './space/space';\n\n// typography\nexport {\n\ttitlepiece,\n\theadline,\n\tbody,\n\ttextSans,\n\ttitlepieceSizes,\n\theadlineSizes,\n\tbodySizes,\n\ttextSansSizes,\n\tremTitlepieceSizes,\n\tremHeadlineSizes,\n\tremBodySizes,\n\tremTextSansSizes,\n\tfonts,\n\tfontWeights,\n\tlineHeights,\n} from './typography';\n\nexport {\n\tbody as bodyObjectStyles,\n\theadline as headlineObjectStyles,\n\ttextSans as textSansObjectStyles,\n\ttitlepiece as titlepieceObjectStyles,\n} from './typography/obj';\nexport type {\n\tScaleUnit,\n\tCategory,\n\tLineHeight,\n\tFontWeight,\n\tFontStyle,\n\tFontWeightDefinition,\n\tOption,\n\tTypographyStyles,\n\tTypographySizes,\n\tTitlepieceSizes,\n\tHeadlineSizes,\n\tBodySizes,\n\tTextSansSizes,\n\tFs,\n\tFontScaleFunction,\n\tFontScaleFunctionStr,\n\tFontScaleArgs,\n} from './typography/types';\n\n// utils\nexport { appearance } from './utils/supports-queries';\nexport { FocusStyleManager } from './accessibility/focus-style-manager';\nexport { pxToRem, rootPixelFontSize } from './utils/px-to-rem';\nexport { resets } from './utils/resets';\nexport { svgBackgroundImage } from './utils/svg-background-image';\n","import { pxToRem } from '../utils/px-to-rem';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#global-size-values) •\n * [Design System](https://theguardian.design/2a1e5182b/p/24a3ec-size/t/329aef)\n *\n * May be used for call to action buttons and user input fields.\n */\nexport const size = {\n\txsmall: 24,\n\tsmall: 36,\n\tmedium: 44, // meets WCAG 2.1 AAA compliance for touch targets.\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#global-size-values) •\n * [Design System](https://theguardian.design/2a1e5182b/p/24a3ec-size/t/329aef)\n *\n * May be used for call to action buttons and user input fields.\n *\n ** `remSize.medium` -> 2.75rem\n ** `remSize.small` -> 2.25rem\n ** `remSize.xsmall` -> 1.5rem\n */\nconst remSize: { [K in keyof typeof size]: number } = {\n\txsmall: pxToRem(size.xsmall),\n\tsmall: pxToRem(size.small),\n\tmedium: pxToRem(size.medium),\n};\n\n/*\n   We attempt to use these values for icons within Source components.\n   They are analogous with component heights defined by the size values\n   above. They are based on the size of icons used within the button\n   component.\n*/\nexport const iconSize = {\n\txsmall: 20,\n\tsmall: 26,\n\tmedium: 30,\n} as const;\n\nconst remIconSize: { [K in keyof typeof iconSize]: number } = {\n\txsmall: pxToRem(iconSize.xsmall),\n\tsmall: pxToRem(iconSize.small),\n\tmedium: pxToRem(iconSize.medium),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#tokens) •\n * [Design System](https://theguardian.design/2a1e5182b/p/24a3ec-size/t/329aef)\n *\n * Height tokens expressed in px\n *\n ** `height.ctaMedium`: call to action buttons and links\n ** `height.ctaSmall`: secondary calls to action\n ** `height.ctaXsmall`: calls to action where there is very limited space\n ** `height.inputMedium`: text input fields, radio and checkbox labels\n ** `height.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `height.iconMedium`\n ** `height.iconSmall`\n ** `height.iconXsmall`\n */\nexport const height = {\n\tctaMedium: size.medium,\n\tctaSmall: size.small,\n\tctaXsmall: size.xsmall,\n\tinputMedium: size.medium,\n\tinputXsmall: size.xsmall,\n\ticonMedium: iconSize.medium,\n\ticonSmall: iconSize.small,\n\ticonXsmall: iconSize.xsmall,\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#tokens) •\n * [Design System](https://theguardian.design/2a1e5182b/p/24a3ec-size/t/329aef)\n *\n * Height tokens expressed in rem\n *\n ** `remHeight.ctaMedium`: call to action buttons and links\n ** `remHeight.ctaSmall`: secondary calls to action\n ** `remHeight.ctaXsmall`: calls to action where there is very limited space\n ** `remHeight.inputMedium`: text input fields, radio and checkbox labels\n ** `remHeight.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `remHeight.iconMedium`\n ** `remHeight.iconSmall`\n ** `remHeight.iconXsmall`\n */\nexport const remHeight = {\n\tctaMedium: remSize.medium,\n\tctaSmall: remSize.small,\n\tctaXsmall: remSize.xsmall,\n\tinputMedium: remSize.medium,\n\tinputXsmall: remSize.xsmall,\n\ticonMedium: remIconSize.medium,\n\ticonSmall: remIconSize.small,\n\ticonXsmall: remIconSize.xsmall,\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#tokens) •\n * [Design System](https://theguardian.design/2a1e5182b/p/00ddcb-tokens/t/797660)\n *\n * Width tokens expressed in px\n *\n ** `width.ctaMedium`: medium height call to action buttons and links\n ** `width.ctaSmall`: small height call to action buttons and links\n ** `width.ctaXsmall`: xsmall height call to action buttons and links\n ** `width.inputMedium`: text input fields, radio and checkbox labels\n ** `width.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `width.inputMedium`\n ** `width.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `width.iconMedium`\n ** `width.iconSmall`\n ** `width.iconXsmall`\n */\nexport const width = {\n\tctaMedium: size.medium,\n\tctaSmall: size.small,\n\tctaXsmall: size.xsmall,\n\tinputXsmall: size.xsmall,\n\ticonMedium: iconSize.medium,\n\ticonSmall: iconSize.small,\n\ticonXsmall: iconSize.xsmall,\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_size--page#tokens) •\n * [Design System](https://theguardian.design/2a1e5182b/p/00ddcb-tokens/t/797660)\n *\n * Width tokens expressed in rem\n *\n ** `remWidth.ctaMedium`: medium height call to action buttons and links\n ** `remWidth.ctaSmall`: small height call to action buttons and links\n ** `remWidth.ctaXsmall`: xsmall height call to action buttons and links\n ** `remWidth.inputMedium`: text input fields, radio and checkbox labels\n ** `remWidth.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `remWidth.inputMedium`\n ** `remWidth.inputXsmall`: checkables such as checkboxes or radio buttons\n ** `remWidth.iconMedium`\n ** `remWidth.iconSmall`\n ** `remWidth.iconXsmall`\n */\nexport const remWidth = {\n\tctaMedium: remSize.medium,\n\tctaSmall: remSize.small,\n\tctaXsmall: remSize.xsmall,\n\tinputXsmall: remSize.xsmall,\n\ticonMedium: remIconSize.medium,\n\ticonSmall: remIconSize.small,\n\ticonXsmall: remIconSize.xsmall,\n};\n","import { pxToRem } from '../utils/px-to-rem';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_space--page) •\n * [Design System](https://theguardian.design/2a1e5182b/p/05f835-space)\n *\n * Can be applied to margin or padding properties, vertically or horizontally.\n *\n ** `space[1]` -> 4px\n ** `space[2]` -> 8px\n ** `space[3]` -> 12px\n ** `space[4]` -> 16px\n ** `space[5]` -> 20px\n ** `space[6]` -> 24px\n ** `space[9]` -> 36px\n ** `space[12]` -> 48px\n ** `space[24]` -> 96px\n */\nexport const space = {\n\t1: 4,\n\t2: 8,\n\t3: 12,\n\t4: 16,\n\t5: 20,\n\t6: 24,\n\t9: 36,\n\t12: 48,\n\t24: 96,\n} as const;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_space--page) •\n * [Design System](https://theguardian.design/2a1e5182b/p/05f835-space)\n *\n * Can be applied to margin or padding properties, vertically or horizontally.\n *\n ** `remSpace[1]` -> 0.25rem\n ** `remSpace[2]` -> 0.5rem\n ** `remSpace[3]` -> 0.75rem\n ** `remSpace[4]` -> 1rem\n ** `remSpace[5]` -> 1.25rem\n ** `remSpace[6]` -> 1.5rem\n ** `remSpace[9]` -> 2.25rem\n ** `remSpace[12]` -> 3rem\n ** `remSpace[24]` -> 6rem\n */\nexport const remSpace: { [K in keyof typeof space]: string } = {\n\t1: `${pxToRem(space[1])}rem`,\n\t2: `${pxToRem(space[2])}rem`,\n\t3: `${pxToRem(space[3])}rem`,\n\t4: `${pxToRem(space[4])}rem`,\n\t5: `${pxToRem(space[5])}rem`,\n\t6: `${pxToRem(space[6])}rem`,\n\t9: `${pxToRem(space[9])}rem`,\n\t12: `${pxToRem(space[12])}rem`,\n\t24: `${pxToRem(space[24])}rem`,\n};\n\n/* TODO: this should be exposed as a number instead of a string,\n   so consumers can perform calculations on it */\n","import { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { visuallyHidden } from '@guardian/source-foundations';\nimport type { ReactElement, ReactNode } from 'react';\nimport { cloneElement } from 'react';\nimport { SvgSpinner } from '../icons/SvgSpinner';\n\nexport const buttonContents = ({\n\thideLabel,\n\ticonSvg,\n\tisLoading,\n\tchildren,\n}: {\n\thideLabel?: boolean;\n\ticonSvg?: ReactElement;\n\tisLoading?: boolean;\n\tchildren: ReactNode;\n}): EmotionJSX.Element | ReactNode[] => {\n\tconst contents = [children];\n\n\tif (isLoading) {\n\t\tif (!hideLabel) {\n\t\t\tcontents.push(<div key=\"space\" className=\"src-button-space\" />);\n\t\t}\n\t\tcontents.push(\n\t\t\tcloneElement(<SvgSpinner />, {\n\t\t\t\tkey: 'svg',\n\t\t\t}),\n\t\t);\n\t} else if (iconSvg) {\n\t\tif (!hideLabel) {\n\t\t\tcontents.push(<div key=\"space\" className=\"src-button-space\" />);\n\t\t}\n\t\tcontents.push(cloneElement(iconSvg, { key: 'svg' }));\n\t}\n\tif (hideLabel) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<span\n\t\t\t\t\tcss={css`\n\t\t\t\t\t\t${visuallyHidden};\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t\t{contents[1]}\n\t\t\t</>\n\t\t);\n\t} else {\n\t\treturn contents;\n\t}\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport {\n\tfocusHaloSpaced,\n\theight,\n\tspace,\n\ttextSans,\n\ttransitions,\n\twidth,\n} from '@guardian/source-foundations';\nimport type { Theme } from '../@types/Theme';\nimport type { ButtonTheme } from './theme';\nimport { buttonThemeDefault } from './theme';\nimport type {\n\tButtonPriority,\n\tIconSide,\n\tSharedButtonProps,\n\tSize,\n} from './types';\n\nconst button = css`\n\tdisplay: inline-flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tborder: none;\n\tbackground: transparent;\n\tcursor: pointer;\n\ttransition: ${transitions.medium};\n\ttext-decoration: none;\n\twhite-space: nowrap;\n\n\t:disabled {\n\t\tcursor: not-allowed;\n\t}\n\n\t&:focus {\n\t\t${focusHaloSpaced};\n\t}\n`;\n\n// Width of the loading spinner in pixels for each button size.\nconst loadingSpinnerSizes: Record<Size, number> = {\n\txsmall: 16,\n\tsmall: 20,\n\tdefault: 24,\n};\n\nconst applyButtonStylesToLoadingSpinner = (size: Size) => {\n\treturn css`\n\t\tpath,\n\t\tcircle {\n\t\t\ttransition: stroke ${transitions.medium};\n\t\t\tstroke: transparent;\n\t\t}\n\t\tpath {\n\t\t\tstroke: currentColor;\n\t\t}\n\t\tsvg {\n\t\t\t/*\n\t\t * The loading spinner width has been specified as 24px in the design\n\t\t * which falls outside of the icon sizes in source-foundations, so we\n\t\t * override the width here.\n\t\t */\n\t\t\twidth: ${loadingSpinnerSizes[size]}px;\n\t\t}\n\t`;\n};\n\nconst primary = (\n\tbutton: ButtonTheme = buttonThemeDefault.button,\n): SerializedStyles => css`\n\tbackground-color: ${button.backgroundPrimary};\n\tcolor: ${button.textPrimary};\n\n\t&:hover {\n\t\tbackground-color: ${button.backgroundPrimaryHover};\n\t}\n`;\n\nconst secondary = (\n\tbutton: ButtonTheme = buttonThemeDefault.button,\n): SerializedStyles => css`\n\tbackground-color: ${button.backgroundSecondary};\n\tcolor: ${button.textSecondary};\n\n\t&:hover {\n\t\tbackground-color: ${button.backgroundSecondaryHover};\n\t}\n`;\n\nconst tertiary = (\n\tbutton: ButtonTheme = buttonThemeDefault.button,\n): SerializedStyles => css`\n\tcolor: ${button.textTertiary};\n\tborder: 1px solid ${button.borderTertiary};\n\n\t&:hover {\n\t\tbackground-color: ${button.backgroundTertiaryHover};\n\t}\n`;\n\nconst subdued = (\n\tbutton: ButtonTheme = buttonThemeDefault.button,\n): SerializedStyles => css`\n\tpadding: 0;\n\tbackground-color: transparent;\n\tcolor: ${button.textSubdued};\n\ttext-decoration: underline;\n\ttext-underline-offset: 4px;\n\n\t&:hover {\n\t\ttext-decoration-thickness: 4px;\n\t}\n\n\t/* Why is this zero? Because the default is to have rounded corners but here, when\n\t   there is only text, it is more natural to show a rectangle for the focus halo */\n\tborder-radius: 0;\n`;\n\n/*\n\tGuardian Text Sans appears to be encoded with slightly more space above the lettering\n\tthan below. We add a small amount of padding to the bottom of the button to ensure\n\tthe button label is vertically centred visually.\n\tTODO: find a more scalable solution to this (see https://css-tricks.com/how-to-tame-line-height-in-css/)\n*/\nconst fontSpacingVerticalOffset = css`\n\tpadding-bottom: 2px;\n`;\n\nconst defaultSize = css`\n\t${textSans.medium({ fontWeight: 'bold' })};\n\theight: ${height.ctaMedium}px;\n\tmin-height: ${height.ctaMedium}px;\n\tpadding: 0 ${space[5]}px;\n\tborder-radius: ${height.ctaMedium}px;\n\t${fontSpacingVerticalOffset};\n`;\n\nconst smallSize = css`\n\t${textSans.medium({ fontWeight: 'bold' })};\n\theight: ${height.ctaSmall}px;\n\tmin-height: ${height.ctaSmall}px;\n\tpadding: 0 ${space[4]}px;\n\tborder-radius: ${height.ctaSmall}px;\n\t${fontSpacingVerticalOffset};\n`;\n\nconst xsmallSize = css`\n\t${textSans.small({ fontWeight: 'bold' })};\n\theight: ${height.ctaXsmall}px;\n\tmin-height: ${height.ctaXsmall}px;\n\tpadding: 0 ${space[3]}px;\n\tborder-radius: ${height.ctaXsmall}px;\n\t${fontSpacingVerticalOffset};\n`;\n\nconst iconDefault = css`\n\tsvg {\n\t\tflex: 0 0 auto;\n\t\tdisplay: block;\n\t\tfill: currentColor;\n\t\tposition: relative;\n\t\twidth: ${width.iconMedium}px;\n\t\theight: auto;\n\t}\n\t.src-button-space {\n\t\twidth: ${space[3]}px;\n\t}\n`;\n\nconst iconSmall = css`\n\tsvg {\n\t\tflex: 0 0 auto;\n\t\tdisplay: block;\n\t\tfill: currentColor;\n\t\tposition: relative;\n\t\twidth: ${width.iconSmall}px;\n\t\theight: auto;\n\t}\n\t.src-button-space {\n\t\twidth: ${space[2]}px;\n\t}\n`;\n\nconst iconXsmall = css`\n\tsvg {\n\t\tflex: 0 0 auto;\n\t\tdisplay: block;\n\t\tfill: currentColor;\n\t\tposition: relative;\n\t\twidth: ${width.iconXsmall}px;\n\t\theight: auto;\n\t}\n\t.src-button-space {\n\t\twidth: ${space[1]}px;\n\t}\n`;\n\n/* TODO: we add some negative margin to icons to account for\n the extra space encoded into the SVG. We should consider removing\n or significantly reducing this space\n */\nconst pullIconTowardEdge = -space[1];\n\nconst iconLeft = css`\n\tflex-direction: row-reverse;\n\tsvg {\n\t\tmargin-left: ${pullIconTowardEdge}px;\n\t}\n`;\nconst iconRight = css`\n\tsvg {\n\t\tmargin-right: ${pullIconTowardEdge}px;\n\t}\n`;\n\nconst iconOnly = css`\n\tjustify-content: center;\n\tpadding: 0;\n`;\n\nconst iconOnlyDefault = css`\n\t${iconOnly};\n\twidth: ${width.ctaMedium}px;\n`;\n\nconst iconOnlySmall = css`\n\t${iconOnly};\n\twidth: ${width.ctaSmall}px;\n`;\n\nconst iconOnlyXsmall = css`\n\t${iconOnly};\n\twidth: ${width.ctaXsmall}px;\n`;\n\nconst iconNudgeAnimation = css`\n\tsvg {\n\t\ttransform: translate(0, 0);\n\t\ttransition: ${transitions.short};\n\t}\n\t&:hover,\n\t&:focus {\n\t\tsvg {\n\t\t\ttransform: translate(${space[1] / 2}px, 0);\n\t\t}\n\t}\n`;\n\nconst priorities: {\n\t[key in ButtonPriority]: (button?: ButtonTheme) => SerializedStyles;\n} = {\n\tprimary,\n\tsecondary,\n\ttertiary,\n\tsubdued,\n};\n\nconst iconSides: {\n\t[key in IconSide]: SerializedStyles;\n} = {\n\tright: iconRight,\n\tleft: iconLeft,\n};\n\nconst sizes: {\n\t[key in Size]: SerializedStyles;\n} = {\n\tdefault: defaultSize,\n\tsmall: smallSize,\n\txsmall: xsmallSize,\n};\nconst iconSizes: {\n\t[key in Size]: SerializedStyles;\n} = {\n\tdefault: iconDefault,\n\tsmall: iconSmall,\n\txsmall: iconXsmall,\n};\nconst iconOnlySizes: {\n\t[key in Size]: SerializedStyles;\n} = {\n\tdefault: iconOnlyDefault,\n\tsmall: iconOnlySmall,\n\txsmall: iconOnlyXsmall,\n};\n\nexport const buttonStyles =\n\t({\n\t\tpriority = 'primary',\n\t\tsize = 'default',\n\t\ticon: iconSvg,\n\t\thideLabel,\n\t\ticonSide = 'left',\n\t\tnudgeIcon,\n\t\tcssOverrides,\n\t\tisLoading,\n\t}: SharedButtonProps) =>\n\t(\n\t\ttheme: Theme,\n\t): Array<string | SerializedStyles | SerializedStyles[] | undefined> =>\n\t\t[\n\t\t\tbutton,\n\t\t\tsizes[size],\n\t\t\tpriorities[priority](theme.button),\n\t\t\ticonSvg || isLoading ? iconSizes[size] : '',\n\t\t\t(iconSvg || isLoading) && !hideLabel ? iconSides[iconSide] : '',\n\t\t\tnudgeIcon ? iconNudgeAnimation : '',\n\t\t\thideLabel ? iconOnlySizes[size] : '',\n\t\t\tisLoading ? applyButtonStylesToLoadingSpinner(size) : undefined,\n\t\t\tcssOverrides,\n\t\t];\n","import { palette } from '@guardian/source-foundations';\n\nexport type ButtonTheme = {\n\ttextPrimary: string;\n\tbackgroundPrimary: string;\n\tbackgroundPrimaryHover: string;\n\ttextSecondary?: string;\n\tbackgroundSecondary?: string;\n\tbackgroundSecondaryHover?: string;\n\ttextTertiary?: string;\n\tbackgroundTertiaryHover?: string;\n\tborderTertiary?: string;\n\ttextSubdued?: string;\n};\n\nexport const buttonThemeDefault: { button: ButtonTheme } = {\n\tbutton: {\n\t\ttextPrimary: palette.neutral[100],\n\t\tbackgroundPrimary: palette.brand[400],\n\t\tbackgroundPrimaryHover: '#234B8A', // One-off colour variant generated from palette.brand[400]\n\t\ttextSecondary: palette.brand[400],\n\t\tbackgroundSecondary: palette.brand[800],\n\t\tbackgroundSecondaryHover: '#ACC9F7', // One-off colour variant generated from palette.brand[800]\n\t\ttextTertiary: palette.brand[400],\n\t\tbackgroundTertiaryHover: '#E5E5E5', // One-off colour variant\n\t\tborderTertiary: palette.brand[400],\n\t\ttextSubdued: palette.brand[400],\n\t},\n};\n\nexport const buttonThemeBrand: { button: ButtonTheme } = {\n\tbutton: {\n\t\ttextPrimary: palette.brand[400],\n\t\tbackgroundPrimary: palette.neutral[100],\n\t\tbackgroundPrimaryHover: '#E0E0E0', // One-off colour variant generated from palette.neutral[100]\n\t\ttextSecondary: palette.neutral[100],\n\t\tbackgroundSecondary: palette.brand[600],\n\t\tbackgroundSecondaryHover: '#234B8A', // One-off colour variant generated from palette.brand[600]\n\t\ttextTertiary: palette.neutral[100],\n\t\tbackgroundTertiaryHover: palette.brand[300],\n\t\tborderTertiary: palette.neutral[100],\n\t\ttextSubdued: palette.neutral[100],\n\t},\n};\n\nexport const buttonThemeBrandAlt: { button: ButtonTheme } = {\n\tbutton: {\n\t\ttextPrimary: palette.neutral[100],\n\t\tbackgroundPrimary: palette.neutral[7],\n\t\tbackgroundPrimaryHover: '#454545', // One-off colour variant generated from palette.neutral[7]\n\t\ttextSecondary: palette.neutral[7],\n\t\tbackgroundSecondary: palette.brandAlt[200],\n\t\tbackgroundSecondaryHover: '#F2AE00', // One-off colour variant generated from palette.brandAlt[200]\n\t\tbackgroundTertiaryHover: '#FFD213', // One-off colour variant\n\t\tborderTertiary: palette.neutral[7],\n\t\ttextSubdued: palette.neutral[7],\n\t},\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { brand, iconSize } from '@guardian/source-foundations';\nimport type { IconProps } from '../@types/Icons';\n\ninterface LoadingCircleIconProps extends IconProps {\n\tadditionalCss?: SerializedStyles;\n}\n\nconst circleLineThickness = 5;\n\nconst lightblueStyles = css`\n\tstroke: #a5c0e8;\n\tstroke-width: ${circleLineThickness};\n\tfill: transparent;\n`;\n\nconst darkblueStyles = css`\n\tstroke: ${brand['400']};\n\tstroke-dasharray: 82;\n\tstroke-dashoffset: 82;\n\tstroke-width: ${circleLineThickness};\n\tfill: transparent;\n`;\n\nexport const SvgSpinner = ({\n\tsize,\n}: LoadingCircleIconProps): EmotionJSX.Element => {\n\treturn (\n\t\t<svg width={size ? iconSize[size] : undefined} viewBox=\"0 0 30 30\">\n\t\t\t<g>\n\t\t\t\t<animateTransform\n\t\t\t\t\tattributeName=\"transform\"\n\t\t\t\t\tattributeType=\"XML\"\n\t\t\t\t\ttype=\"rotate\"\n\t\t\t\t\tfrom=\"0 15 15\"\n\t\t\t\t\tto=\"360 15 15\"\n\t\t\t\t\tdur=\"2.5s\"\n\t\t\t\t\trepeatCount=\"indefinite\"\n\t\t\t\t/>\n\t\t\t\t<circle cx=\"15\" cy=\"15\" r=\"12.6\" css={lightblueStyles} />\n\t\t\t\t<path\n\t\t\t\t\tcss={darkblueStyles}\n\t\t\t\t\td=\"M15,15 m0,-12.6 a 12.6,12.6 0 0,1 0,25.2 a 12.6,12.6 0 0,1 0,-25.2\"\n\t\t\t\t>\n\t\t\t\t\t<animate\n\t\t\t\t\t\tattributeName=\"stroke-dashoffset\"\n\t\t\t\t\t\tdur=\"3.5s\"\n\t\t\t\t\t\tto=\"-82\"\n\t\t\t\t\t\trepeatCount=\"indefinite\"\n\t\t\t\t\t/>\n\t\t\t\t</path>\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["focusHaloSpaced","visuallyHidden","transitions","short","medium","long","xsmall","small","pxToRem","size","remIconSize","iconSize","ctaMedium","ctaSmall","ctaXsmall","inputMedium","inputXsmall","iconMedium","iconSmall","iconXsmall","remSize","space","contents","key","hideLabel","_Fragment","children","default","applyButtonStylesToLoadingSpinner","css","defaultSize","textSans","fontWeight","height","fontSpacingVerticalOffset","smallSize","xsmallSize","iconDefault","iconLeft","iconRight","iconOnly","iconOnlyDefault","width","iconOnlySmall","iconOnlyXsmall","iconNudgeAnimation","priorities","primary","button","secondary","tertiary","textTertiary","subdued","iconSides","right","left","sizes","iconSizes","iconOnlySizes","buttonStyles","priority","iconSvg","isLoading","nudgeIcon","cssOverrides","textPrimary","backgroundPrimary","backgroundPrimaryHover","textSecondary","backgroundSecondary","backgroundSecondaryHover","backgroundTertiaryHover","borderTertiary","textSubdued","buttonThemeBrandAlt","lightblueStyles","darkblueStyles","brand","SvgSpinner","jsx","_objectWithoutProperties","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}