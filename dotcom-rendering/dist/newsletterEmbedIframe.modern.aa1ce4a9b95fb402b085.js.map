{"version":3,"file":"newsletterEmbedIframe.modern.aa1ce4a9b95fb402b085.js","mappings":"kMAGA,MAAMA,EAAiB,CAAC,+BACXC,EAAwB,KACpC,MAAMC,EAAkC,GAAGC,MAAMC,KAChDC,SAASC,iBAAiB,uBAoD3B,OA9CAJ,EAAWK,SAASC,I,IACnBA,EAAoB,QAApBA,EAAAA,EAAOC,qBAAPD,IAAAA,GAAAA,EAAsBE,YACrB,SACA,kCAIFC,OAAOC,iBAAiB,WAAYC,IACnC,IAAKb,EAAec,SAASD,EAAME,QAAS,OAE5C,MAAMC,EAA+Bd,EAAWe,QAAQC,IACvD,IACC,GAAwB,OAApBA,EAAET,eAA2C,OAAjBI,EAAMM,OACrC,OAAOD,EAAET,gBAAkBI,EAAMM,MAInC,CAFE,MAAOC,GACR,OAAO,CACR,CACA,OAAO,CAAK,IAEb,GAAuB,IAAnBJ,EAAQK,OACX,IACC,MAAMC,EAAmBC,KAAKC,MAAMX,EAAMY,MAC1C,KAAKC,EAAAA,EAAAA,GAASJ,IAAoC,iBAAjBA,EAAQK,KACxC,OAGK,eADEL,EAAQK,MAEdX,EAAQT,SAASC,IAChB,GAA6B,iBAAlBc,EAAQM,MAClBpB,EAAOqB,OAAS,GAAiB,OAAdP,EAAQM,YACrB,GAA6B,iBAAlBN,EAAQM,MAAoB,CAC7C,MAAMA,EAAQE,SAASR,EAAQM,MAAO,IAClCG,OAAOC,UAAUJ,KACpBpB,EAAOqB,OAAS,GAAS,OAAND,GAErB,IAMS,CAAX,MAAOR,GAAI,CACd,IAGMa,QAAQC,SAAS,C","sources":["webpack://@guardian/dotcom-rendering/./src/web/browser/newsletterEmbedIframe.ts"],"sourcesContent":["import { isObject } from '@guardian/libs';\n\n// No trailing slash!\nconst allowedOrigins = ['https://www.theguardian.com'];\nexport const newsletterEmbedIframe = (): Promise<void> => {\n\tconst allIframes: HTMLIFrameElement[] = [].slice.call(\n\t\tdocument.querySelectorAll('.email-sub__iframe'),\n\t);\n\n\t// Tell the iframes to resize once this script is loaded\n\t// Otherwise, earlier resize events might be missed\n\t// So we don't have to load this script as a priority on each load\n\tallIframes.forEach((iframe) => {\n\t\tiframe.contentWindow?.postMessage(\n\t\t\t'resize',\n\t\t\t'https://www.theguardian.com',\n\t\t);\n\t});\n\n\twindow.addEventListener('message', (event) => {\n\t\tif (!allowedOrigins.includes(event.origin)) return;\n\n\t\tconst iframes: HTMLIFrameElement[] = allIframes.filter((i) => {\n\t\t\ttry {\n\t\t\t\tif (i.contentWindow !== null && event.source !== null) {\n\t\t\t\t\treturn i.contentWindow === event.source;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\tif (iframes.length !== 0) {\n\t\t\ttry {\n\t\t\t\tconst message: unknown = JSON.parse(event.data);\n\t\t\t\tif (!isObject(message) || typeof message.type !== 'string')\n\t\t\t\t\treturn;\n\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase 'set-height':\n\t\t\t\t\t\tiframes.forEach((iframe) => {\n\t\t\t\t\t\t\tif (typeof message.value === 'number') {\n\t\t\t\t\t\t\t\tiframe.height = `${message.value}`;\n\t\t\t\t\t\t\t} else if (typeof message.value === 'string') {\n\t\t\t\t\t\t\t\tconst value = parseInt(message.value, 10);\n\t\t\t\t\t\t\t\tif (Number.isInteger(value)) {\n\t\t\t\t\t\t\t\t\tiframe.height = `${value}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-empty\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\n\treturn Promise.resolve();\n};\n"],"names":["allowedOrigins","newsletterEmbedIframe","allIframes","slice","call","document","querySelectorAll","forEach","iframe","contentWindow","postMessage","window","addEventListener","event","includes","origin","iframes","filter","i","source","e","length","message","JSON","parse","data","isObject","type","value","height","parseInt","Number","isInteger","Promise","resolve"],"sourceRoot":""}