{"version":3,"file":"FocusStyles-importable.legacy.4d4054a6c2cbdf5db95b.js","mappings":"8KA+DIA,E,8BA/DEC,EAAe,EAaRC,EAAqB,WAGjC,WAAoBC,EAA4BC,GAAiB,uHAF7C,IAAK,6BA8BD,SAACC,GACpBA,EAAEC,QAAUL,IACf,EAAKM,QACL,EAAKJ,UAAUK,iBAAiB,YAAa,EAAKC,iBAEpD,KAAC,+BAEyB,WACzB,EAAKF,QACL,EAAKJ,UAAUO,UAAUC,IAAI,EAAKP,WAClC,EAAKD,UAAUK,iBACd,UACA,EAAKI,cAEP,IA1CoB,KAAS,UAATT,EAA4B,KAAS,UAATC,CAAS,CA0BxD,OA1BwD,gCAGlD,WACN,OAAOS,KAAKC,SAAU,GAAD,mBAIf,WACND,KAAKV,UAAUK,iBAAiB,YAAaK,KAAKJ,iBAClDI,KAAKC,WAAY,CAAK,GAAD,kBAIf,WACND,KAAKN,QACLM,KAAKC,WAAY,CAAM,GACvB,mBAEO,WACPD,KAAKV,UAAUO,UAAUK,OAAOF,KAAKT,WACrCS,KAAKV,UAAUa,oBACd,UACAH,KAAKD,eAENC,KAAKV,UAAUa,oBAAoB,YAAaH,KAAKJ,gBAAiB,KACtE,EA7BgC,GA+DrBQ,EAGS,kBAbhBjB,IACJA,EAAe,IAAIE,EAClBgB,SAASC,gBAPW,uBAYfnB,GAMwCoB,OAAO,E,UC7E1CC,EAAc,WAQvB,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,IAEI,IACX,C","sources":["webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/accessibility/focus-style-manager.ts","webpack://@guardian/dotcom-rendering/./src/web/components/FocusStyles.importable.tsx"],"sourcesContent":["const TAB_KEY_CODE = 9;\n\n/**\n * Source: Blueprint https://blueprintjs.com/\n * https://github.com/palantir/blueprint/blob/06a186c90758bbdca604ed6d7bf639c3d05b1fa0/packages/core/src/common/interactionMode.ts\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n * Requires @babel/plugin-proposal-class-properties\n *\n * Modifications to original source:\n * - Add return types to `isActive`, `start` and `stop` functions\n */\nexport class InteractionModeEngine {\n\tprivate isRunning = false;\n\n\tconstructor(private container: Element, private className: string) {}\n\n\t/** Returns whether the engine is currently running. */\n\tpublic isActive(): boolean {\n\t\treturn this.isRunning;\n\t}\n\n\t/** Enable behavior which applies the given className when in mouse mode. */\n\tpublic start(): void {\n\t\tthis.container.addEventListener('mousedown', this.handleMouseDown);\n\t\tthis.isRunning = true;\n\t}\n\n\t/** Disable interaction mode behavior and remove className from container. */\n\tpublic stop(): void {\n\t\tthis.reset();\n\t\tthis.isRunning = false;\n\t}\n\n\tprivate reset() {\n\t\tthis.container.classList.remove(this.className);\n\t\tthis.container.removeEventListener(\n\t\t\t'keydown',\n\t\t\tthis.handleKeyDown as (evt: Event) => void,\n\t\t);\n\t\tthis.container.removeEventListener('mousedown', this.handleMouseDown);\n\t}\n\n\tprivate handleKeyDown = (e: KeyboardEvent) => {\n\t\tif (e.which === TAB_KEY_CODE) {\n\t\t\tthis.reset();\n\t\t\tthis.container.addEventListener('mousedown', this.handleMouseDown);\n\t\t}\n\t};\n\n\tprivate handleMouseDown = () => {\n\t\tthis.reset();\n\t\tthis.container.classList.add(this.className);\n\t\tthis.container.addEventListener(\n\t\t\t'keydown',\n\t\t\tthis.handleKeyDown as (evt: Event) => void,\n\t\t);\n\t};\n}\n\nconst FOCUS_DISABLED = 'src-focus-disabled';\n\nlet _focusEngine: InteractionModeEngine | undefined;\n\nconst focusEngine = (): InteractionModeEngine => {\n\tif (!_focusEngine) {\n\t\t_focusEngine = new InteractionModeEngine(\n\t\t\tdocument.documentElement,\n\t\t\tFOCUS_DISABLED,\n\t\t);\n\t}\n\n\treturn _focusEngine;\n};\n\nexport const FocusStyleManager = {\n\talwaysShowFocus: (): void => focusEngine().stop(),\n\tisActive: (): boolean => focusEngine().isActive(),\n\tonlyShowFocusOnTabs: (): void => focusEngine().start(),\n};\n","import { FocusStyleManager } from '@guardian/source-foundations';\nimport { useEffect } from 'react';\nexport const FocusStyles = () => {\n    // Ensure the focus state of any buttons/inputs in any of the Source\n    // components are only applied when navigating via keyboard.\n    // READ: https://www.theguardian.design/2a1e5182b/p/6691bb-accessibility/t/32e9fb\n    useEffect(() => {\n        FocusStyleManager.onlyShowFocusOnTabs();\n    }, []);\n    // Nothing is rendered by this component\n    return null;\n};\n"],"names":["_focusEngine","TAB_KEY_CODE","InteractionModeEngine","container","className","e","which","reset","addEventListener","handleMouseDown","classList","add","handleKeyDown","this","isRunning","remove","removeEventListener","FocusStyleManager","document","documentElement","start","FocusStyles","useEffect"],"sourceRoot":""}