{"version":3,"file":"DiscussionContainer-importable.modern.cb67bcd4c1c04f7c7a77.js","mappings":"sKAcO,MAAMA,EAAkC,CAC9CC,EACAC,KAEA,MAAMC,EAAoC,CACzCC,cAAe,yBACfH,eAOD,OAJIC,IACHC,EAAOE,OAASH,GAGV,wBAAmE,OAA3CI,oBAAmBC,EAAAA,EAAAA,GAAeJ,IAAAA,C,iCC3BlE,MAAMI,EAAkBC,GACvBC,OAAOC,KAAKF,GACVG,KAAKC,IACL,MAAMC,EAAQL,EAAMI,GACdE,EAAaC,MAAMC,QAAQH,GAC9BA,EAAMF,KAAKM,GAAMX,mBAAmBW,KAAIC,KAAK,KAC7CZ,mBAAmBO,GACtB,MAAO,GAAYC,OAATF,EAAM,KAAc,OAAXE,EAAAA,IAEnBI,KAAK,I,m6BCgBR,MAAMC,GAAgBC,EAAAA,EAAAA,KAAGA,IAGrBC,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,MAWEC,GAAYF,EAAAA,EAAAA,KAAGA,KAMfG,GAAmBH,EAAAA,EAAAA,KAAGA,KAgBfI,EAAc,I,IAAA,OAC1BC,EAAM,iBACNC,EAAgB,WAChBC,EAAU,gBACVC,EAAe,0BACfC,EAAyB,uBACzBC,EAAsB,KACtBC,EAAI,SACJC,GACO,EACP,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,aAC/BC,EAAiBC,IAAsBF,EAAAA,EAAAA,aACvCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,aAGrCK,EAAYC,IAAiBN,EAAAA,EAAAA,WAAkB,IAC/CO,EAAeC,IAAoBR,EAAAA,EAAAA,UA5BlB,MACxB,GAAsB,oBAAXS,OAAwB,OAEnC,MAAM,KAAEC,GAASD,OAAOE,SACxB,IAAKD,EAAKE,SAAS,WAAY,OAE/B,MAAO,CAAEC,GAAaH,EAAKI,MAAM,KACjC,OAAKD,EAEEE,SAASF,EAAW,SAF3B,CAE8B,EAoB7BG,KAGK,aAAEC,EAAY,oBAAEC,IAAwBC,EAAAA,EAAAA,IAC7CC,EAAAA,EAAAA,GAAQ7B,EAAkB,aAAcC,IAGnC6B,GAAUC,EAAAA,EAAAA,GAAchC,GAExBiC,EACa,oBAAXd,QAAmD,cAAzBA,OAAOE,SAASD,KA0DlD,OAtCAc,EAAAA,EAAAA,YAAU,UACaC,IAAlBlB,GCtB2BmB,OAChCC,EACAd,KAEA,MAAMe,GAAMR,EAAAA,EAAAA,GAAQO,EAAS,UAAWd,EAAUgB,WAAY,WACxDC,EAtD6B,MACnC,IAAIC,EACAC,EACAC,EAEJ,I,IAGEC,EAGAA,EAGAA,EAPDD,EAAUE,KAAKC,MACO,QAArBF,EAAAA,aAAaG,QAAQ,oCAArBH,IAAAA,EAAAA,EAAqD,MAEtDH,EAAUI,KAAKC,MACO,QAArBF,EAAAA,aAAaG,QAAQ,wCAArBH,IAAAA,EAAAA,EAAyD,MAE1DF,EAAWG,KAAKC,MACM,QAArBF,EAAAA,aAAaG,QAAQ,uCAArBH,IAAAA,EAAAA,EAAwD,KAU1D,CARE,MAAOI,GAGR,MAAO,CACNL,QAAS,SACTD,SAAU,GACVD,QAAS,YAEX,CAGA,MAAO,CACNE,SAASA,aAAAA,EAAAA,EAASvD,OAAQuD,EAAQvD,MAAQ,SAC1CqD,SAASA,aAAAA,EAAAA,EAASrD,OAAQqD,EAAQrD,MAAQ,YAC1CsD,UAAUA,aAAAA,EAAAA,EAAUtD,OAAQsD,EAAStD,MAAQ,GAC7C,EAuBe6D,GACVvE,EAAS,IAAIwE,gBArBA,CAACV,IACb,CAGNG,QACqB,oBAApBH,EAAQG,QACL,kBACAH,EAAQG,QACZD,SAAUS,OAAOX,EAAQE,UACzBU,gBAAiBD,OACI,cAApBX,EAAQC,SAA+C,aAApBD,EAAQC,WAWVY,CAAYb,IAE/C,OAAOc,MAAMhB,EAAM,IAAM5D,EAAO6D,YAC9BgB,MAAMC,IACN,IAAKA,EAASC,GACb,MAAMC,MACLF,EAASG,YACR,wDAAwE,OAAhBH,EAASI,SAGpE,OAAOJ,CAAQ,IAEfD,MAAMC,GAAaA,EAASK,SAC5BC,OAAOd,IACP7B,OAAO4C,SAASC,QAAQC,OAAOC,YAC9BlB,EACA,sBAEA,EDDDmB,CAAkBlE,EAAkBgB,GAClCsC,MAAMa,IACN3D,EAAe2D,EAAQC,MACvBzD,EAAmBwD,EAAQ1B,UAC3B5B,EAAkBsD,EAAQzB,SAC1B3B,GAAc,EAAK,IAEnB8C,OAAOQ,GACPC,QAAQvB,MAAM,8BAAwC,OAAVG,OAAOmB,MAEtD,GACE,CAACrE,EAAkBgB,KAEtBiB,EAAAA,EAAAA,YAAU,KACLD,GACHjB,GAAc,EACf,GACE,CAACiB,KAEJC,EAAAA,EAAAA,YAAU,KACesC,SAASC,iBAChC,0BAEeC,SAASC,IACxBA,EAAQC,UAAUC,IAAI,UACtBF,EAAQC,UAAUE,OAAO,aACxB,GACA,KAEH5C,EAAAA,EAAAA,YAAU,KAEY,IAAjBP,GAAuC,IAAjBA,GAAuC,IAAjBA,GAC/CX,GAAc,EACf,GACE,CAACW,KAGH,sB,WACC,SAACoD,MAAAA,CACApF,IAAK,CAACG,EAAkBkF,EAAAA,GAAejE,GAAclB,GACrDoF,UAAU,a,UAEV,UAACF,MAAAA,CAAIE,UAAU,U,WACd,SAACC,EAAAA,EAAIA,CAACC,KAAK,QAAQC,WAAW,U,UAC7B,SAACL,MAAAA,CACAM,UAAQ,aACR1F,KAAKA,EAAAA,EAAAA,KAAGA,IACW2F,EAAAA,EAAAA,I,UAGnB,SAACC,EAAAA,EAAUA,CACVxD,QAASA,EACT1B,uBAAwBA,EACxBC,KAAMA,EACNqB,aAAcA,EACdC,oBAAqBA,SAIxB,SAAC4D,EAAAA,EAAQA,CACRlF,KAAMA,EACNmF,QAASxF,EACTyF,OAAQ1F,EAAO2F,MACfC,YAAapF,EACbqF,iBAAkBlF,EAClBiB,sBACGA,IAAwBvB,EAE3ByF,gBAAiBjF,EACjBkF,SAAU7F,EACV8F,kBAAmB,CAClB,WAAY7F,EACZ,YAAaC,GAEd6F,SAAUlF,EACVmF,kBAAmBjF,EACnBkF,iBAhGoB5E,IACF,oBAAXJ,SACXA,OAAOE,SAASD,KAAO,YAAsB,OAAVG,GAInCL,EAAiBK,KALyB,GAgGtC6E,OAAO,mBACPC,SAAU,KACTrF,GAAc,EAAK,EAEpBT,SAAUA,KAETQ,IACD,SAACgE,MAAAA,CAAIuB,GAAG,qBAAqB3G,IAAKD,UAInCqB,IACD,SAACwF,EAAAA,EAAeA,CACfvG,OAAQA,EACRwG,QAAS,KACRxF,GAAc,GAtGmB,MACrC,MAAMyF,EAAQ,IAAIC,YAAY,qBAC9BlC,SAASmC,cAAcF,EAAM,EAqGzBG,EAA+B,EAEhCC,MAAM,SAACC,EAAAA,EAAOA,CAAAA,G,SACd,yB,wIE1ME,MAAMC,EAA0BC,IACtC,MAAM,iBAAE/G,GAAqB+G,GACvB,KAAEC,IAASC,EAAAA,EAAAA,IAChBpF,EAAAA,EAAAA,GAAQ7B,EAAkB,2CAC1B,CAAC,EACD,CACCkH,YAAa,YAGf,OAAKF,GAEE,SAAClH,E,sUAAUA,CAAAA,CAACO,KAAM2G,EAAKG,aAAiBJ,IAF7B,IAE6BA,E,gcCQzC,MAAMK,EAAuBL,IACdM,EAAAA,EAAAA,GAAU,CAAEC,KAAM,OAAQC,eAAe,KAEvC,SAACT,EAAsBA,EAAAA,CAAAA,EAAKC,KAE5C,SAACjH,EAAUA,EAAAA,CAAAA,EAAKiH,G,sZCZjB,MAAM9B,EAAQ,I,IAMhBuC,GANgB,SACpBC,EAAQ,KACRvC,EAAI,WACJC,EAAU,GACVuC,GACqB,EAerB,OAZCF,EADY,UAATtC,GACUxF,EAAAA,EAAAA,KAAGA,IACbiI,EAAAA,GAAMxC,KAKIzF,EAAAA,EAAAA,KAAGA,IACbkI,EAAAA,GAAKzC,IAKK,OAAPuC,GACN,SAACG,KAAAA,CAAGnI,IAAK8H,E,SAAaC,KAEtB,SAACK,OAAAA,CAAKpI,IAAK8H,E,SAAaC,GACxB,C,2/CCnBF,MAAMM,GAAkBrI,EAAAA,EAAAA,KAAGA,IACX2F,EAAAA,EAAAA,GACGA,EAAAA,EAAAA,IAGb2C,GAActI,EAAAA,EAAAA,KAAGA,IAIpBiI,EAAAA,GAAAA,SAMGM,GAAevI,EAAAA,EAAAA,KAAGA,IACL2F,EAAAA,EAAAA,GACDA,EAAAA,EAAAA,IAGZ6C,GAAgBxI,EAAAA,EAAAA,KAAGA,IACtByI,EAAAA,GAAAA,QAAiB,CAAEC,WAAY,SACf/C,EAAAA,EAAAA,IAGbgD,GAAa3I,EAAAA,EAAAA,KAAGA,IACnB4I,EAAAA,GAAAA,QACAX,EAAAA,GAAAA,QACCW,EAAAA,GAAAA,UAEMC,EAAAA,GAAAA,WACSlD,EAAAA,EAAAA,IAGbmD,GAAiB9I,EAAAA,EAAAA,KAAGA,IACvByI,EAAAA,GAAAA,WACOI,EAAAA,GAAAA,WACSlD,EAAAA,EAAAA,IAGboD,GAAiB/I,EAAAA,EAAAA,KAAGA,IAEhB6I,EAAAA,GAAAA,SAGJG,EAAc5G,IAAqBpC,EAAAA,EAAAA,KAAGA,IAClCoC,EAAQyG,KAAKI,WAEKC,EAAAA,GAAAA,UAGVC,EAAAA,EAAAA,MAIZC,GAAkBpJ,EAAAA,EAAAA,KAAGA,IAGxBiI,EAAAA,GAAAA,SAKGoB,EAAW,I,IAAA,MAAEC,GAA2B,EAC7C,OACC,UAACC,KAAAA,CAAGvJ,IAAKwI,E,UAAe,WACd,KACT,UAACJ,OAAAA,CACApI,KAAKA,EAAAA,EAAAA,KAAGA,IACEC,EAAAA,GAAAA,K,UAEV,IACEqJ,QAAAA,EAAS,IAAI,S,EAMN1D,EAAc,I,IAAA,aAC1B5D,EAAY,QACZI,EAAO,uBACP1B,EAAsB,KACtBC,EAAI,oBACJsB,GACO,EACP,MAAMuH,GAAW7I,aAAAA,EAAAA,EAAM8I,iBAAkB9I,EAAK8I,cAAcC,eAE5D,OAAKhJ,EAyCD8I,GAGF,UAACpE,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,UAACoG,OAAAA,CAAKpI,IAAK8I,E,UAAgB,mDAE1B,SAACa,IAAAA,CACAC,KAAK,kDACL5J,IAAKgJ,EAAW5G,G,SAChB,SAEI,IAAI,UAOTzB,GAAQsB,GAGV,UAACmD,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,SAACoG,OAAAA,CAAKpI,IAAK8I,E,SAAgB,+CAOzBnI,GAAQsB,GAGX,UAACmD,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,UAACoG,OAAAA,CAAKpI,IAAK8I,E,UAAgB,+DACmC,KAC7D,SAACa,IAAAA,CACAC,KAAM,wEAEJ,QAF4EhL,EAAAA,EAAAA,GAC7E,sBAEDoB,IAAKgJ,EAAW5G,G,SAChB,YAEI,IAAI,KACN,KACH,SAACuH,IAAAA,CACAC,KAAM,uEAEJ,QAF2EhL,EAAAA,EAAAA,GAC5E,wBAEDoB,IAAKgJ,EAAW5G,G,SAChB,iCAEI,IAAI,yCAORzB,GA+BJ,UAACyE,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,UAACoD,MAAAA,CAAIpF,IAAKoJ,E,WACT,SAAChE,MAAAA,CAAIpF,IAAKuI,E,UACT,SAACsB,MAAAA,CACAC,IACCnJ,EAAKoJ,iBACL,8CAEDC,IAAKrJ,EAAKsJ,aAAe,gBACzBjK,IAAKsI,OAGP,UAAClD,MAAAA,CAAIpF,IAAK2I,E,UAAY,gBAErB,SAACvD,MAAAA,CAAIpF,IAAK+I,E,SACRpI,EAAKsJ,aAAe,4BA5CxB,UAAC7E,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,UAACoG,OAAAA,CAAKpI,IAAK8I,E,WACV,SAACa,IAAAA,CACAC,KAAM,wEAEJ,QAF4EhL,EAAAA,EAAAA,GAC7E,sBAEDoB,IAAKgJ,EAAW5G,G,SAChB,YAEI,IAAI,KACN,KACH,SAACuH,IAAAA,CACAC,KAAM,uEAEJ,QAF2EhL,EAAAA,EAAAA,GAC5E,wBAEDoB,IAAKgJ,EAAW5G,G,SAChB,iCAEI,IAAI,+BA1HRzB,GAEF,UAACyE,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,SAACoG,OAAAA,CAAKpI,IAAK8I,E,SAAgB,kDAQ7B,UAAC1D,MAAAA,CAAIpF,IAAKqI,E,WACT,SAACgB,EAAAA,CAAQC,MAAOtH,KAChB,UAACoG,OAAAA,CAAKpI,IAAK8I,E,UAAgB,8DACkC,KAC5D,SAACa,IAAAA,CACAC,KAAM,wEAEJ,QAF4EhL,EAAAA,EAAAA,GAC7E,sBAEDoB,IAAKgJ,EAAW5G,G,SAChB,YAEI,IAAI,KACN,KACH,SAACuH,IAAAA,CACAC,KAAM,uEAEJ,QAF2EhL,EAAAA,EAAAA,GAC5E,wBAEDoB,IAAKgJ,EAAW5G,G,SAChB,iCAEI,IAAI,6C,gtBCzIP,MAAMiD,GAAerF,EAAAA,EAAAA,KAAGA,KAIhBkK,EAAAA,EAAAA,WAASA,MAMTA,EAAAA,EAAAA,WAASA,K,gDCbxB,SAASC,EAAetG,GACvB,IAAKA,EAASC,GACb,MAAMC,MACLF,EAASG,YACR,6CAA6D,OAAhBH,EAASI,SAGzD,OAAOJ,CACR,CAEA,MAmBa0D,EAAS,CACrB5E,EACAyH,EACAC,KAEA,MAAM,KAAE/C,EAAI,MAAEjE,IAAUiH,EAAAA,EAAAA,IAAO3H,EAxBhB,CAAC0H,GAAwB1H,GACxCgB,MAAMhB,EAAK0H,GACTzG,KAAKuG,GACLvG,MAAM2G,GAAQA,EAAIrG,SAqBgBsG,CAAQH,GAAOD,GAEnD,MAAO,CACN9C,OACAjE,QACAoH,UAAW9H,IAAQU,IAAUiE,EAC7B,C,gDCSK,MAAMpF,EACZS,IAEA,MAAM,KAAE2E,IAASC,EAAAA,EAAAA,GAA2B5E,EAAK,CAGhD+H,iBAAkB,MAGnB,MAAO,CACN1I,aAAcsF,aAAAA,EAAAA,EAAMqD,WAAW3I,aAC/BC,oBAAqBqF,aAAAA,EAAAA,EAAMqD,WAAW1I,oBACtC,C","sources":["webpack://@guardian/dotcom-rendering/./src/lib/identity-component-event.ts","webpack://@guardian/dotcom-rendering/./src/lib/querystring.ts","webpack://@guardian/dotcom-rendering/./src/web/components/Discussion.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/getCommentContext.ts","webpack://@guardian/dotcom-rendering/./src/web/components/DiscussionWhenSignedIn.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/DiscussionContainer.importable.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/Hide.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SignedInAs.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/revealStyles.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useApi.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/useDiscussion.ts"],"sourcesContent":["import { constructQuery } from './querystring';\n\ntype AuthenticationComponentId =\n\t| 'amp_sidebar_signin'\n\t| 'guardian_signin_header'\n\t| 'signin_to_comment'\n\t| 'register_to_comment';\n\ntype AuthenticationEventParams = {\n\tcomponentType: string;\n\tcomponentId: AuthenticationComponentId;\n\tviewId?: string;\n};\n\nexport const createAuthenticationEventParams = (\n\tcomponentId: AuthenticationComponentId,\n\tpageViewId?: string,\n): string => {\n\tconst params: AuthenticationEventParams = {\n\t\tcomponentType: 'identityauthentication',\n\t\tcomponentId,\n\t};\n\n\tif (pageViewId) {\n\t\tparams.viewId = pageViewId;\n\t}\n\n\treturn `componentEventParams=${encodeURIComponent(constructQuery(params))}`;\n};\n","const constructQuery = (query: { [key: string]: any }): string =>\n\tObject.keys(query)\n\t\t.map((param: string) => {\n\t\t\tconst value = query[param];\n\t\t\tconst queryValue = Array.isArray(value)\n\t\t\t\t? value.map((v) => encodeURIComponent(v)).join(',')\n\t\t\t\t: encodeURIComponent(value);\n\t\t\treturn `${param}=${queryValue}`;\n\t\t})\n\t\t.join('&');\n\nexport { constructQuery };\n","import { css } from '@emotion/react';\nimport { App as Comments } from '@guardian/discussion-rendering';\nimport { joinUrl } from '@guardian/libs';\nimport { neutral, space } from '@guardian/source-foundations';\nimport { SvgPlus } from '@guardian/source-react-components';\nimport { EditorialButton } from '@guardian/source-react-components-development-kitchen';\nimport { useEffect, useState } from 'react';\nimport { decidePalette } from '../lib/decidePalette';\nimport { getCommentContext } from '../lib/getCommentContext';\nimport { revealStyles } from '../lib/revealStyles';\nimport { useDiscussion } from '../lib/useDiscussion';\nimport { Hide } from './Hide';\nimport { SignedInAs } from './SignedInAs';\n\nexport type Props = {\n\tformat: ArticleFormat;\n\tdiscussionApiUrl: string;\n\tshortUrlId: string;\n\tdiscussionD2Uid: string;\n\tdiscussionApiClientHeader: string;\n\tenableDiscussionSwitch: boolean;\n\tuser?: UserProfile;\n\tidApiUrl: string;\n};\n\nconst overlayStyles = css`\n\tbackground-image: linear-gradient(\n\t\t0deg,\n\t\t${neutral[100]},\n\t\t${neutral[100]} 40%,\n\t\trgba(255, 255, 255, 0)\n\t);\n\theight: 80px;\n\tposition: absolute;\n\tbottom: 0;\n\tright: 0;\n\twidth: 100%;\n\tdisplay: block;\n`;\n\nconst fixHeight = css`\n\tmax-height: 280px;\n\tmin-height: 280px;\n\toverflow: hidden;\n`;\n\nconst positionRelative = css`\n\tposition: relative;\n`;\n\nconst commentIdFromUrl = () => {\n\tif (typeof window === 'undefined') return;\n\n\tconst { hash } = window.location;\n\tif (!hash.includes('comment')) return;\n\n\tconst [, commentId] = hash.split('-');\n\tif (!commentId) return;\n\n\treturn parseInt(commentId, 10);\n};\n\nexport const Discussion = ({\n\tformat,\n\tdiscussionApiUrl,\n\tshortUrlId,\n\tdiscussionD2Uid,\n\tdiscussionApiClientHeader,\n\tenableDiscussionSwitch,\n\tuser,\n\tidApiUrl,\n}: Props) => {\n\tconst [commentPage, setCommentPage] = useState<number>();\n\tconst [commentPageSize, setCommentPageSize] = useState<25 | 50 | 100>();\n\tconst [commentOrderBy, setCommentOrderBy] = useState<\n\t\t'newest' | 'oldest' | 'recommendations'\n\t>();\n\tconst [isExpanded, setIsExpanded] = useState<boolean>(false);\n\tconst [hashCommentId, setHashCommentId] = useState<number | undefined>(\n\t\tcommentIdFromUrl(),\n\t);\n\n\tconst { commentCount, isClosedForComments } = useDiscussion(\n\t\tjoinUrl(discussionApiUrl, 'discussion', shortUrlId),\n\t);\n\n\tconst palette = decidePalette(format);\n\n\tconst hasCommentsHash =\n\t\ttypeof window !== 'undefined' && window.location.hash === '#comments';\n\n\tconst handlePermalink = (commentId: number) => {\n\t\tif (typeof window === 'undefined') return false;\n\t\twindow.location.hash = `#comment-${commentId}`;\n\t\t// Put this comment id into the hashCommentId state which will\n\t\t// trigger an api call to get the comment context and then expand\n\t\t// and reload the discussion based on the resuts\n\t\tsetHashCommentId(commentId);\n\t\treturn false;\n\t};\n\n\tconst dispatchCommentsExpandedEvent = () => {\n\t\tconst event = new CustomEvent('comments-expanded');\n\t\tdocument.dispatchEvent(event);\n\t};\n\n\t// Check the url to see if there is a comment hash, e.g. ...crisis#comment-139113120\n\t// If so, make a call to get the context of this comment so we know what page it is\n\t// on.\n\tuseEffect(() => {\n\t\tif (hashCommentId !== undefined) {\n\t\t\tgetCommentContext(discussionApiUrl, hashCommentId)\n\t\t\t\t.then((context) => {\n\t\t\t\t\tsetCommentPage(context.page);\n\t\t\t\t\tsetCommentPageSize(context.pageSize);\n\t\t\t\t\tsetCommentOrderBy(context.orderBy);\n\t\t\t\t\tsetIsExpanded(true);\n\t\t\t\t})\n\t\t\t\t.catch((e) =>\n\t\t\t\t\tconsole.error(`getCommentContext - error: ${String(e)}`),\n\t\t\t\t);\n\t\t}\n\t}, [discussionApiUrl, hashCommentId]);\n\n\tuseEffect(() => {\n\t\tif (hasCommentsHash) {\n\t\t\tsetIsExpanded(true);\n\t\t}\n\t}, [hasCommentsHash]);\n\n\tuseEffect(() => {\n\t\tconst pendingElements = document.querySelectorAll<HTMLElement>(\n\t\t\t'.discussion > .pending',\n\t\t);\n\t\tpendingElements.forEach((element) => {\n\t\t\telement.classList.add('reveal');\n\t\t\telement.classList.remove('pending');\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// There's no point showing the view more button if there isn't much more to view\n\t\tif (commentCount === 0 || commentCount === 1 || commentCount === 2) {\n\t\t\tsetIsExpanded(true);\n\t\t}\n\t}, [commentCount]);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tcss={[positionRelative, revealStyles, !isExpanded && fixHeight]}\n\t\t\t\tclassName=\"discussion\"\n\t\t\t>\n\t\t\t\t<div className=\"pending\">\n\t\t\t\t\t<Hide when=\"above\" breakpoint=\"leftCol\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tdata-cy=\"discussion\"\n\t\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t\tpadding-bottom: ${space[2]}px;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SignedInAs\n\t\t\t\t\t\t\t\tpalette={palette}\n\t\t\t\t\t\t\t\tenableDiscussionSwitch={enableDiscussionSwitch}\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tcommentCount={commentCount}\n\t\t\t\t\t\t\t\tisClosedForComments={isClosedForComments}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Hide>\n\t\t\t\t\t<Comments\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\tbaseUrl={discussionApiUrl}\n\t\t\t\t\t\tpillar={format.theme}\n\t\t\t\t\t\tinitialPage={commentPage}\n\t\t\t\t\t\tpageSizeOverride={commentPageSize}\n\t\t\t\t\t\tisClosedForComments={\n\t\t\t\t\t\t\t!!isClosedForComments || !enableDiscussionSwitch\n\t\t\t\t\t\t}\n\t\t\t\t\t\torderByOverride={commentOrderBy}\n\t\t\t\t\t\tshortUrl={shortUrlId}\n\t\t\t\t\t\tadditionalHeaders={{\n\t\t\t\t\t\t\t'D2-X-UID': discussionD2Uid,\n\t\t\t\t\t\t\t'GU-Client': discussionApiClientHeader,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\texpanded={isExpanded}\n\t\t\t\t\t\tcommentToScrollTo={hashCommentId}\n\t\t\t\t\t\tonPermalinkClick={handlePermalink}\n\t\t\t\t\t\tapiKey=\"dotcom-rendering\"\n\t\t\t\t\t\tonExpand={() => {\n\t\t\t\t\t\t\tsetIsExpanded(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tidApiUrl={idApiUrl}\n\t\t\t\t\t/>\n\t\t\t\t\t{!isExpanded && (\n\t\t\t\t\t\t<div id=\"discussion-overlay\" css={overlayStyles} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!isExpanded && (\n\t\t\t\t<EditorialButton\n\t\t\t\t\tformat={format}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetIsExpanded(true);\n\t\t\t\t\t\tdispatchCommentsExpandedEvent();\n\t\t\t\t\t}}\n\t\t\t\t\ticon={<SvgPlus />}\n\t\t\t\t>\n\t\t\t\t\tView more comments\n\t\t\t\t</EditorialButton>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { joinUrl } from '@guardian/libs';\n\n// GET http://discussion.guardianapis.com/discussion-api/comment/3519111/context\n// {\n//     status: 'ok',\n//     commentId: 3519111,\n//     commentAncestorId: 3519111,\n//     discussionKey: '/p/27y27',\n//     discussionWebUrl:\n//         'https://www.theguardian.com/commentisfree/cifamerica/2009/may/14/washington-post-torture-libel',\n//     discussionApiUrl:\n//         'https://discussion.guardianapis.com/discussion-api/discussion//p/27y27?orderBy=oldest&pageSize=20&page=1',\n//     orderBy: 'oldest',\n//     pageSize: 20,\n//     page: 1,\n// };\n\ntype CommentContextType = {\n\tstatus: 'ok' | 'error';\n\tcommentId: number;\n\tcommentAncestorId: number;\n\tdiscussionKey: string;\n\tdiscussionWebUrl: string;\n\tdiscussionApiUrl: string;\n\torderBy: OrderByType;\n\tpageSize: PageSizeType; // TODO: Review these https://trello.com/c/7v4VDNY0/1326-review-page-size-values\n\tpage: number;\n};\n\ntype OrderByType = 'newest' | 'oldest' | 'recommendations';\ntype ThreadsType = 'collapsed' | 'expanded' | 'unthreaded';\ntype PageSizeType = 25 | 50 | 100;\n\ninterface FilterOptions {\n\torderBy: OrderByType;\n\tpageSize: PageSizeType;\n\tthreads: ThreadsType;\n}\n\nconst initFiltersFromLocalStorage = (): FilterOptions => {\n\tlet threads: { [key: string]: ThreadsType } | undefined;\n\tlet pageSize: { [key: string]: PageSizeType } | undefined;\n\tlet orderBy: { [key: string]: OrderByType } | undefined;\n\n\ttry {\n\t\t// Try to read from local storage\n\t\torderBy = JSON.parse(\n\t\t\tlocalStorage.getItem('gu.prefs.discussion.order') ?? '{}',\n\t\t);\n\t\tthreads = JSON.parse(\n\t\t\tlocalStorage.getItem('gu.prefs.discussion.threading') ?? '{}',\n\t\t);\n\t\tpageSize = JSON.parse(\n\t\t\tlocalStorage.getItem('gu.prefs.discussion.pagesize') ?? '{}',\n\t\t);\n\t} catch (error) {\n\t\t// Sometimes it's not possible to access localStorage, we accept this and don't want to\n\t\t// capture these errors\n\t\treturn {\n\t\t\torderBy: 'newest',\n\t\t\tpageSize: 25,\n\t\t\tthreads: 'collapsed',\n\t\t};\n\t}\n\n\t// If we found something in LS, use it, otherwise return defaults\n\treturn {\n\t\torderBy: orderBy?.value ? orderBy.value : 'newest',\n\t\tthreads: threads?.value ? threads.value : 'collapsed',\n\t\tpageSize: pageSize?.value ? pageSize.value : 25,\n\t};\n};\n\nconst buildParams = (filters: FilterOptions) => {\n\treturn {\n\t\t// Frontend uses the 'recommendations' key to store this options but the api expects\n\t\t// 'mostRecommended' so we have to map here to support both\n\t\torderBy:\n\t\t\tfilters.orderBy === 'recommendations'\n\t\t\t\t? 'mostRecommended'\n\t\t\t\t: filters.orderBy,\n\t\tpageSize: String(filters.pageSize),\n\t\tdisplayThreaded: String(\n\t\t\tfilters.threads === 'collapsed' || filters.threads === 'expanded',\n\t\t),\n\t};\n};\n\nexport const getCommentContext = async (\n\tajaxUrl: string,\n\tcommentId: number,\n): Promise<CommentContextType> => {\n\tconst url = joinUrl(ajaxUrl, 'comment', commentId.toString(), 'context');\n\tconst filters = initFiltersFromLocalStorage();\n\tconst params = new URLSearchParams(buildParams(filters));\n\n\treturn fetch(url + '?' + params.toString())\n\t\t.then((response) => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow Error(\n\t\t\t\t\tresponse.statusText ||\n\t\t\t\t\t\t`getCommentContext | An api call returned HTTP status ${response.status}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.catch((error) => {\n\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\terror,\n\t\t\t\t'get-comment-page',\n\t\t\t);\n\t\t});\n};\n","import { joinUrl } from '@guardian/libs';\nimport type { Props as DiscussionProps } from '../../web/components/Discussion';\nimport { useApi } from '../lib/useApi';\nimport { Discussion } from './Discussion';\n\nexport const DiscussionWhenSignedIn = (props: DiscussionProps) => {\n\tconst { discussionApiUrl } = props;\n\tconst { data } = useApi<{ userProfile: UserProfile }>(\n\t\tjoinUrl(discussionApiUrl, 'profile/me?strict_sanctions_check=false'),\n\t\t{},\n\t\t{\n\t\t\tcredentials: 'include',\n\t\t},\n\t);\n\tif (!data) return null;\n\n\treturn <Discussion user={data.userProfile} {...props} />;\n};\n","import { getCookie } from '@guardian/libs';\nimport type { Props as DiscussionProps } from './Discussion';\nimport { Discussion } from './Discussion';\nimport { DiscussionWhenSignedIn } from './DiscussionWhenSignedIn';\n\n/**\n * DiscussionContainer\n *\n * A wrapper component that decides if the user is signed in or not.\n *\n * If they\n * are, it renders DiscussionWhenSignedIn which includes an api call to fetch\n * the user profile.\n *\n * If not, it simply renders Discussion\n *\n * We use component composition like this here because you cannot call react\n * hooks conditionally and we're using a hook to make the fetch request\n *\n * Note. We allow the ...props pattern here because it makes sense when we're\n * just passing them through\n *\n */\n\nexport const DiscussionContainer = (props: DiscussionProps) => {\n\tconst isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n\n\tif (isSignedIn) return <DiscussionWhenSignedIn {...props} />;\n\n\treturn <Discussion {...props} />;\n};\n","import { css } from '@emotion/react';\nimport type { Breakpoint } from '@guardian/source-foundations';\nimport { from, until } from '@guardian/source-foundations';\n\ninterface Props {\n\tchildren: React.ReactNode;\n\twhen: 'above' | 'below';\n\tbreakpoint: Breakpoint;\n}\n\ninterface PropsSpan extends Props {\n\tel?: 'span';\n}\ninterface PropsLi extends Props {\n\tel: 'li';\n}\n\nexport const Hide = ({\n\tchildren,\n\twhen,\n\tbreakpoint,\n\tel,\n}: PropsSpan | PropsLi) => {\n\tlet whenToHide;\n\tif (when === 'below') {\n\t\twhenToHide = css`\n\t\t\t${until[breakpoint]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n\t} else {\n\t\twhenToHide = css`\n\t\t\t${from[breakpoint]} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`;\n\t}\n\treturn el === 'li' ? (\n\t\t<li css={whenToHide}>{children}</li>\n\t) : (\n\t\t<span css={whenToHide}>{children}</span>\n\t);\n};\n","import { css } from '@emotion/react';\nimport {\n\tborder,\n\theadline,\n\tneutral,\n\tnews,\n\tspace,\n\ttext,\n\ttextSans,\n\tuntil,\n} from '@guardian/source-foundations';\nimport { createAuthenticationEventParams } from '../../lib/identity-component-event';\nimport type { Palette } from '../../types/palette';\n\ntype Props = {\n\tcommentCount?: number;\n\tpalette: Palette;\n\tenableDiscussionSwitch: boolean;\n\tuser?: UserProfile;\n\tisClosedForComments?: boolean;\n};\n\nconst containerStyles = css`\n\tpadding-top: ${space[1]}px;\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst imageStyles = css`\n\tborder-radius: 70px;\n\twidth: 60px;\n\theight: 60px;\n\t${until.desktop} {\n\t\twidth: 36px;\n\t\theight: 36px;\n\t}\n`;\n\nconst imageWrapper = css`\n\tpadding-bottom: ${space[1]}px;\n\tpadding-right: ${space[2]}px;\n`;\n\nconst headingStyles = css`\n\t${headline.xxsmall({ fontWeight: 'bold' })};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst textStyles = css`\n\t${textSans.small()}\n\t${until.desktop} {\n\t\t${textSans.xxsmall()}\n\t}\n\tcolor: ${text.supporting};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst headlineStyles = css`\n\t${headline.xxxsmall()}\n\tcolor: ${text.supporting};\n\tpadding-bottom: ${space[1]}px;\n`;\n\nconst usernameStyles = css`\n\tfont-weight: 700;\n\tcolor: ${text.primary};\n`;\n\nconst linkStyles = (palette: Palette) => css`\n\tcolor: ${palette.text.signInLink};\n\ttext-decoration: none;\n\tborder-bottom: 1px solid ${border.secondary};\n\ttransition: border-color 0.15s ease-out;\n\t:hover {\n\t\tborder-color: ${news[300]};\n\t}\n`;\n\nconst rowUntilDesktop = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\t${until.desktop} {\n\t\tflex-direction: row;\n\t}\n`;\n\nconst Heading = ({ count }: { count?: number }) => {\n\treturn (\n\t\t<h2 css={headingStyles}>\n\t\t\tcomments{' '}\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\tcolor: ${neutral[60]};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t({count ?? '…'})\n\t\t\t</span>\n\t\t</h2>\n\t);\n};\n\nexport const SignedInAs = ({\n\tcommentCount,\n\tpalette,\n\tenableDiscussionSwitch,\n\tuser,\n\tisClosedForComments,\n}: Props) => {\n\tconst isBanned = user?.privateFields && !user.privateFields.canPostComment;\n\n\tif (!enableDiscussionSwitch) {\n\t\t// Discussion is disabled sitewide and user is signed in\n\t\tif (user) {\n\t\t\treturn (\n\t\t\t\t<div css={containerStyles}>\n\t\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\t\tCommenting has been disabled at this time\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t// Discussion disabled sitewide and user logged out\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tCommenting has been disabled at this time but you can still{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'signin_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tsign in\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'register_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tto join the discussion when it&apos;s back\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (isBanned) {\n\t\t// User is banned\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tCommenting has been disabled for this account (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.theguardian.com/community-faqs#321a\"\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\twhy?\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\t)\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (user && isClosedForComments) {\n\t\t// The reader is logged in but the discussion is closed\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tThis discussion is closed for comments\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!user && isClosedForComments) {\n\t\t// The discussion is closed and the reader is not logged in\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\tThis discussion is now closed for comments but you can still{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'signin_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tsign in\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'register_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tto join the discussion next time\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (!user) {\n\t\t// The discussion is open but the reader is not logged in\n\t\treturn (\n\t\t\t<div css={containerStyles}>\n\t\t\t\t<Heading count={commentCount} />\n\t\t\t\t<span css={headlineStyles}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/signin?INTCMP=DOTCOM_COMMENTS_SIGNIN&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'signin_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tor{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`https://profile.theguardian.com/register?INTCMP=DOTCOM_COMMENTS_REG&${createAuthenticationEventParams(\n\t\t\t\t\t\t\t'register_to_comment',\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tcss={linkStyles(palette)}\n\t\t\t\t\t>\n\t\t\t\t\t\tcreate your Guardian account\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tto join the discussion\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Discussion open and user logged in\n\treturn (\n\t\t<div css={containerStyles}>\n\t\t\t<Heading count={commentCount} />\n\t\t\t<div css={rowUntilDesktop}>\n\t\t\t\t<div css={imageWrapper}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\tuser.secureAvatarUrl ||\n\t\t\t\t\t\t\t'https://avatar.guim.co.uk/no-user-image.gif'\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={user.displayName || 'Guardian User'}\n\t\t\t\t\t\tcss={imageStyles}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div css={textStyles}>\n\t\t\t\t\tSigned in as\n\t\t\t\t\t<div css={usernameStyles}>\n\t\t\t\t\t\t{user.displayName || 'Guardian User'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { css, keyframes } from '@emotion/react';\n\n/**\n * Sometimes we want to animate in new content using plain\n * javascript. We use these classes to do that.\n */\nexport const revealStyles = css`\n\t/* We're using classnames here because we add and remove these classes\n\t   using plain javascript */\n\t.reveal {\n\t\tanimation: ${keyframes`\n\t\t\t0% { opacity: 0; }\n\t\t\t100% { opacity: 1; }\n\t\t`} 1s ease-out;\n\t}\n\t.reveal-slowly {\n\t\tanimation: ${keyframes`\n\t\t\t0% { opacity: 0; }\n\t\t\t100% { opacity: 1; }\n\t\t`} 4s ease-out;\n\t}\n\t.pending {\n\t\tdisplay: none;\n\t}\n`;\n","import type { SWRConfiguration } from 'swr';\nimport useSWR from 'swr';\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`useApi | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\nconst fetcher = (init?: RequestInit) => (url: string) =>\n\tfetch(url, init)\n\t\t.then(checkForErrors)\n\t\t.then((res) => res.json());\n\ninterface ApiResponse<T> {\n\tloading: boolean;\n\tdata?: T;\n\terror?: Error;\n}\n\n/**\n * @description\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/)\n * returns { loading, error, data }\n * @param {String} url - The url to fetch\n * @param {SWRConfiguration} options - The SWR config object - https://swr.vercel.app/docs/options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * */\nexport const useApi = <T,>(\n\turl?: string,\n\toptions?: SWRConfiguration,\n\tinit?: RequestInit,\n): ApiResponse<T> => {\n\tconst { data, error } = useSWR(url, fetcher(init), options);\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading: !!url && !error && !data,\n\t};\n};\n","import { useApi } from './useApi';\n\ntype DiscussionResponse = {\n\tstatus: string;\n\tpage: number;\n\tpages: number;\n\tpageSize: number;\n\torderBy: string;\n\tdiscussion: {\n\t\tkey: string;\n\t\twebUrl: string;\n\t\tapiUrl: string;\n\t\tcommentCount: number;\n\t\ttopLevelCommentCount: number;\n\t\tisClosedForComments: boolean;\n\t\tisClosedForRecommendation: boolean;\n\t\tisThreaded: boolean;\n\t\ttitle: string;\n\t\tcomments: CommentType[];\n\t};\n};\n\ntype CommentType = {\n\tid: number;\n\tbody: string;\n\tdate: string;\n\tisoDateTime: string;\n\tstatus: string;\n\twebUrl: string;\n\tapiUrl: string;\n\tnumResponses?: number;\n\tnumRecommends: number;\n\tisHighlighted: boolean;\n\tuserProfile: UserProfile;\n\tresponseTo?: {\n\t\tdisplayName: string;\n\t\tcommentApiUrl: string;\n\t\tisoDateTime: string;\n\t\tdate: string;\n\t\tcommentId: number;\n\t\tcommentWebUrl: string;\n\t};\n\tresponses?: CommentType[];\n\tmetaData?: {\n\t\tcommentCount: number;\n\t\tstaffCommenterCount: number;\n\t\teditorsPickCount: number;\n\t\tblockedCount: number;\n\t\tresponseCount: number;\n\t};\n};\n\nexport const useDiscussion = (\n\turl: string,\n): { commentCount?: number; isClosedForComments?: boolean } => {\n\tconst { data } = useApi<DiscussionResponse>(url, {\n\t\t// The default for dedupingInterval is 2 seconds but we want to wait longer here because the cache time\n\t\t// for a discussion is at least 15 seconds\n\t\tdedupingInterval: 8000,\n\t});\n\n\treturn {\n\t\tcommentCount: data?.discussion.commentCount,\n\t\tisClosedForComments: data?.discussion.isClosedForComments,\n\t};\n};\n"],"names":["createAuthenticationEventParams","componentId","pageViewId","params","componentType","viewId","encodeURIComponent","constructQuery","query","Object","keys","map","param","value","queryValue","Array","isArray","v","join","overlayStyles","css","neutral","fixHeight","positionRelative","Discussion","format","discussionApiUrl","shortUrlId","discussionD2Uid","discussionApiClientHeader","enableDiscussionSwitch","user","idApiUrl","commentPage","setCommentPage","useState","commentPageSize","setCommentPageSize","commentOrderBy","setCommentOrderBy","isExpanded","setIsExpanded","hashCommentId","setHashCommentId","window","hash","location","includes","commentId","split","parseInt","commentIdFromUrl","commentCount","isClosedForComments","useDiscussion","joinUrl","palette","decidePalette","hasCommentsHash","useEffect","undefined","async","ajaxUrl","url","toString","filters","threads","pageSize","orderBy","localStorage","JSON","parse","getItem","error","initFiltersFromLocalStorage","URLSearchParams","String","displayThreaded","buildParams","fetch","then","response","ok","Error","statusText","status","json","catch","guardian","modules","sentry","reportError","getCommentContext","context","page","e","console","document","querySelectorAll","forEach","element","classList","add","remove","div","revealStyles","className","Hide","when","breakpoint","data-cy","space","SignedInAs","Comments","baseUrl","pillar","theme","initialPage","pageSizeOverride","orderByOverride","shortUrl","additionalHeaders","expanded","commentToScrollTo","onPermalinkClick","apiKey","onExpand","id","EditorialButton","onClick","event","CustomEvent","dispatchEvent","dispatchCommentsExpandedEvent","icon","SvgPlus","DiscussionWhenSignedIn","props","data","useApi","credentials","userProfile","DiscussionContainer","getCookie","name","shouldMemoize","whenToHide","children","el","until","from","li","span","containerStyles","imageStyles","imageWrapper","headingStyles","headline","fontWeight","textStyles","textSans","text","headlineStyles","usernameStyles","linkStyles","signInLink","border","news","rowUntilDesktop","Heading","count","h2","isBanned","privateFields","canPostComment","a","href","img","src","secureAvatarUrl","alt","displayName","keyframes","checkForErrors","options","init","useSWR","res","fetcher","loading","dedupingInterval","discussion"],"sourceRoot":""}