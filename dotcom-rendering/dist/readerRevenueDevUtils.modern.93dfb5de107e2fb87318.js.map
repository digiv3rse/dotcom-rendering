{"version":3,"file":"readerRevenueDevUtils.modern.93dfb5de107e2fb87318.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/lib/alreadyVisited.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getIdapiUserData.ts","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/cookies/setCookie.js","webpack://@guardian/dotcom-rendering/./src/web/lib/readerRevenueDevUtils.ts","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/cookies/removeCookie.js","webpack://@guardian/dotcom-rendering/./src/web/lib/useOnce.ts","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/joinUrl/joinUrl.js"],"sourcesContent":["const AlreadyVisitedKey = 'gu.alreadyVisited';\n\nexport const getAlreadyVisitedCount = (): number => {\n\tconst alreadyVisited = parseInt(\n\t\tlocalStorage.getItem(AlreadyVisitedKey) ?? '',\n\t\t10,\n\t);\n\treturn !Number.isNaN(alreadyVisited) ? alreadyVisited : 0;\n};\n\nexport const setAlreadyVisited = (count: number): void => {\n\tlocalStorage.setItem(AlreadyVisitedKey, count.toString());\n};\n\nexport const incrementAlreadyVisited = (): void => {\n\tconst alreadyVisited = getAlreadyVisitedCount();\n\tsetAlreadyVisited(alreadyVisited + 1);\n};\n","import { onConsentChange } from '@guardian/consent-management-platform';\nimport { getCookie } from '@guardian/libs';\nimport type { HeaderPayload } from '@guardian/support-dotcom-components/dist/dotcom/src/types';\nimport { useState } from 'react';\nimport type { FEArticleType } from '../../types/frontend';\nimport type { IdApiUserData } from './getIdapiUserData';\nimport { getIdApiUserData } from './getIdapiUserData';\nimport { useOnce } from './useOnce';\n\n// User Atributes API cookies (dropped on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const ONE_OFF_CONTRIBUTION_DATE_COOKIE = 'gu_one_off_contribution_date';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n\n// Support Frontend cookies (dropped when contribution is made)\nexport const SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE =\n\t'gu.contributions.recurring.contrib-timestamp.Monthly';\nexport const SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE =\n\t'gu.contributions.recurring.contrib-timestamp.Annual';\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE =\n\t'gu.contributions.contrib-timestamp';\n\n//  Local storage keys\nconst DAILY_ARTICLE_COUNT_KEY = 'gu.history.dailyArticleCount';\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_TIMESTAMP_KEY = 'gu.noRRBannerTimestamp'; // timestamp of when we were last told not to show a RR banner\n\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n\n// Cookie set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nconst shouldShowSupportMessaging = (): boolean => {\n\tconst hideSupportMessaging =\n\t\tgetCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE }) === 'true';\n\n\treturn !hideSupportMessaging;\n};\n\n// Determine if user is a recurring contributor by checking if they are signed in\n// AND have at least one of the relevant cookies.\n// We need to look at both User Attributes and Frontend Support cookies\n// as the former might not reflect the latest contributor status, since it's set upon signing in.\n// Frontend Support cookies are set when a contribution is made.\nexport const isRecurringContributor = (isSignedIn: boolean): boolean => {\n\t// Attributes cookie - we want this to have a specific value\n\tconst isRecurringContributorFromAttrs =\n\t\tgetCookie({ name: RECURRING_CONTRIBUTOR_COOKIE }) === 'true';\n\n\t// Support cookies - we only care whether these exist\n\tconst hasMonthlyContributionCookie =\n\t\tgetCookie({\n\t\t\tname: SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n\t\t\tshouldMemoize: true,\n\t\t}) !== null;\n\tconst hasAnnualContributionCookie =\n\t\tgetCookie({\n\t\t\tname: SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n\t\t\tshouldMemoize: true,\n\t\t}) !== null;\n\n\treturn (\n\t\tisSignedIn &&\n\t\t(isRecurringContributorFromAttrs ||\n\t\t\thasMonthlyContributionCookie ||\n\t\t\thasAnnualContributionCookie)\n\t);\n};\n\n// looks at attribute and support cookies\n// ONE_OFF_CONTRIBUTION_DATE_COOKIE (attributes cookie, when loggin in)\n// SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (support cookie, when making one-off contribution)\n// Get the date of the latest one-off contribution by looking at the two relevant cookies\n// and returning a Unix epoch string of the latest date found.\nexport const getLastOneOffContributionTimestamp = (): number | undefined => {\n\t// Attributes cookie - expects YYYY-MM-DD\n\tconst contributionDateFromAttributes = getCookie({\n\t\tname: ONE_OFF_CONTRIBUTION_DATE_COOKIE,\n\t});\n\n\t// Support cookies - expects Unix epoch\n\tconst contributionDateFromSupport = getCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t});\n\n\tif (!contributionDateFromAttributes && !contributionDateFromSupport) {\n\t\treturn undefined;\n\t}\n\n\t// Parse dates into common format so they can be compared\n\tconst parsedDateFromAttributes = contributionDateFromAttributes\n\t\t? Date.parse(contributionDateFromAttributes)\n\t\t: 0;\n\tconst parsedDateFromSupport = contributionDateFromSupport\n\t\t? parseInt(contributionDateFromSupport, 10)\n\t\t: 0;\n\n\t// Return most recent date\n\t// Condition only passed if 'parsedDateFromAttributes' is NOT NaN\n\tif (parsedDateFromAttributes > parsedDateFromSupport) {\n\t\treturn parsedDateFromAttributes;\n\t}\n\n\treturn parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\n\nexport const getLastOneOffContributionDate = (): string | undefined => {\n\tconst timestamp = getLastOneOffContributionTimestamp();\n\n\tif (timestamp === undefined) {\n\t\treturn undefined;\n\t}\n\n\tconst date = new Date(timestamp);\n\tconst year = date.getFullYear();\n\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\n\tconst day = date.getDate().toString().padStart(2, '0');\n\n\treturn `${year}-${month}-${day}`;\n};\n\nconst dateDiffDays = (from: number, to: number): number => {\n\tconst oneDayMs = 1000 * 60 * 60 * 24;\n\tconst diffMs = to - from;\n\treturn Math.floor(diffMs / oneDayMs);\n};\n\nconst AskPauseDays = 90;\n\nexport const isRecentOneOffContributor = (): boolean => {\n\tconst lastContributionDate = getLastOneOffContributionTimestamp();\n\tif (lastContributionDate !== undefined) {\n\t\tconst now = Date.now();\n\t\treturn dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n\t}\n\n\treturn false;\n};\n\nexport const shouldHideSupportMessaging = (isSignedIn = false): boolean =>\n\t!shouldShowSupportMessaging() ||\n\tisRecurringContributor(isSignedIn) ||\n\tisRecentOneOffContributor();\n\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\n\nexport const hasArticleCountOptOutCookie = (): boolean =>\n\tgetCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\n\nconst removeArticleCountsFromLocalStorage = () => {\n\twindow.localStorage.removeItem(DAILY_ARTICLE_COUNT_KEY);\n\twindow.localStorage.removeItem(WEEKLY_ARTICLE_COUNT_KEY);\n};\n\nexport const hasCmpConsentForArticleCount = (): Promise<boolean> => {\n\treturn new Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ ccpa, tcfv2, aus }) => {\n\t\t\tif (ccpa || aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\n\t\t\t\tif (!hasRequiredConsents) {\n\t\t\t\t\tremoveArticleCountsFromLocalStorage();\n\t\t\t\t}\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const hasOptedOutOfArticleCount = async (): Promise<boolean> => {\n\tconst hasCmpConsent = await hasCmpConsentForArticleCount();\n\treturn !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = (): boolean | 'Pending' => {\n\tconst [hasOptedOut, setHasOptedOut] = useState<boolean | 'Pending'>(\n\t\t'Pending',\n\t);\n\n\tuseOnce(() => {\n\t\thasOptedOutOfArticleCount()\n\t\t\t.then(setHasOptedOut)\n\t\t\t.catch(() => setHasOptedOut(true));\n\t}, []);\n\n\treturn hasOptedOut;\n};\n\nexport const hasCmpConsentForBrowserId = (): Promise<boolean> =>\n\tnew Promise((resolve) => {\n\t\tif (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n\t\t\tresolve(true);\n\t\t}\n\t\tonConsentChange(({ ccpa, tcfv2, aus }) => {\n\t\t\tif (ccpa || aus) {\n\t\t\t\tresolve(true);\n\t\t\t} else if (tcfv2) {\n\t\t\t\tconst hasRequiredConsents =\n\t\t\t\t\tREQUIRED_CONSENTS_FOR_BROWSER_ID.every(\n\t\t\t\t\t\t(consent) => tcfv2.consents[consent],\n\t\t\t\t\t);\n\t\t\t\tresolve(hasRequiredConsents);\n\t\t\t}\n\t\t});\n\t});\n\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = (): boolean => {\n\tconst item = window.localStorage.getItem(NO_RR_BANNER_TIMESTAMP_KEY);\n\tif (item && !Number.isNaN(parseInt(item, 10))) {\n\t\tconst withinCachePeriod = parseInt(item, 10) + twentyMins > Date.now();\n\t\tif (!withinCachePeriod) {\n\t\t\t// Expired\n\t\t\twindow.localStorage.removeItem(NO_RR_BANNER_TIMESTAMP_KEY);\n\t\t}\n\t\treturn withinCachePeriod;\n\t}\n\treturn false;\n};\n\nexport const setLocalNoBannerCachePeriod = (): void =>\n\twindow.localStorage.setItem(NO_RR_BANNER_TIMESTAMP_KEY, `${Date.now()}`);\n\nconst getEmail = (ajaxUrl: string): Promise<string | undefined> => {\n\treturn getIdApiUserData(ajaxUrl)\n\t\t.then((data: IdApiUserData) => data.user?.primaryEmailAddress)\n\t\t.catch((error) => {\n\t\t\twindow.guardian.modules.sentry.reportError(error, 'getEmail');\n\t\t\treturn undefined;\n\t\t});\n};\n\nexport const lazyFetchEmailWithTimeout =\n\t(idapiUrl: string): (() => Promise<string | null>) =>\n\t() => {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => resolve(null), 1000);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-floating-promises\n\t\t\tgetEmail(idapiUrl).then((email) => {\n\t\t\t\tif (email) {\n\t\t\t\t\tresolve(email);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(null);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\nexport const getContributionsServiceUrl = (article: FEArticleType): string =>\n\tprocess.env.SDC_URL ?? article.contributionsServiceUrl;\n\ntype PurchaseInfo = HeaderPayload['targeting']['purchaseInfo'];\nexport const getPurchaseInfo = (): PurchaseInfo => {\n\tconst purchaseInfoRaw = getCookie({\n\t\tname: 'GU_CO_COMPLETE',\n\t\tshouldMemoize: true,\n\t});\n\n\tif (!purchaseInfoRaw) {\n\t\treturn undefined;\n\t}\n\n\tlet purchaseInfo: PurchaseInfo;\n\n\ttry {\n\t\tpurchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n\t} catch {} // eslint-disable-line no-empty -- silently handle error\n\n\treturn purchaseInfo;\n};\n","import { joinUrl } from '@guardian/libs';\n\nexport interface IdApiUserData {\n\tuser?: {\n\t\tprimaryEmailAddress?: string;\n\t\tprivateFields?: {\n\t\t\tbrazeUuid?: string;\n\t\t};\n\t};\n}\n\nexport interface IdApiUserIdentifiers {\n\tid: string;\n\tbrazeUuid: string;\n\tpuzzleId: string;\n\tgoogleTagId: string;\n}\n\nfunction checkForErrors(response: Response) {\n\tif (!response.ok) {\n\t\tthrow Error(\n\t\t\tresponse.statusText ||\n\t\t\t\t`getIdApiUserData | An api call returned HTTP status ${response.status}`,\n\t\t);\n\t}\n\treturn response;\n}\n\nconst callApi = (url: string) => {\n\treturn fetch(url, {\n\t\tcredentials: 'include',\n\t})\n\t\t.then(checkForErrors)\n\t\t.then((response) => response.json());\n};\n\nconst cache: {\n\tidapiUserMeResponse?: Promise<IdApiUserData>;\n\tidapiUserIdentifiersResponse?: Promise<IdApiUserIdentifiers>;\n} = {};\n\nexport const getIdApiUserData = (ajaxUrl: string): Promise<IdApiUserData> => {\n\tif (!cache.idapiUserMeResponse) {\n\t\tconst url = joinUrl(ajaxUrl, 'user/me');\n\t\tcache.idapiUserMeResponse = callApi(url);\n\t}\n\treturn cache.idapiUserMeResponse;\n};\n\nexport const getIdapiUserIdentifiers = (\n\tajaxUrl: string,\n): Promise<IdApiUserIdentifiers> => {\n\tif (!cache.idapiUserIdentifiersResponse) {\n\t\tconst url = joinUrl(ajaxUrl, 'user/me/identifiers');\n\t\tcache.idapiUserIdentifiersResponse = callApi(url);\n\t}\n\treturn cache.idapiUserIdentifiersResponse;\n};\n","import { ERR_INVALID_COOKIE } from './ERR_INVALID_COOKIE.js';\nimport { getCookieValues } from './getCookieValues.js';\nimport { getDomainAttribute } from './getDomainAttribute.js';\nimport { isValidCookie } from './isValidCookie.js';\nimport { memoizedCookies } from './memoizedCookies.js';\n\n/**\n * Set a cookie. If it's been memoized it will replace it's memoized value\n * @param details Details about the cookie.\n * @param details.name - the cookie’s name.\n * @param details.value - the cookie’s value.\n * @param details.daysToLive - optional expiry date will be calculated based on the daysToLive\n * @param details.isCrossSubdomain - specify if it's a cross subdomain cookie, default false\n */\nconst setCookie = ({ name, value, daysToLive, isCrossSubdomain = false, }) => {\n    const expires = new Date();\n    if (!isValidCookie(name, value)) {\n        throw new Error(`${ERR_INVALID_COOKIE} ${name}=${value}`);\n    }\n    if (daysToLive) {\n        expires.setUTCDate(expires.getUTCDate() + daysToLive);\n    }\n    else {\n        expires.setUTCMonth(expires.getUTCMonth() + 5);\n        expires.setUTCDate(1);\n    }\n    document.cookie = `${name}=${value}; path=/; expires=${expires.toUTCString()};${getDomainAttribute({\n        isCrossSubdomain,\n    })}`;\n    // If the cookie is already memoized we want to replace its value\n    if (memoizedCookies.has(name)) {\n        const [value] = getCookieValues(name);\n        if (value) {\n            memoizedCookies.set(name, value);\n        }\n    }\n};\n\nexport { setCookie };\n//# sourceMappingURL=setCookie.js.map\n","import { getCookie, removeCookie, setCookie, storage } from '@guardian/libs';\nimport { setAlreadyVisited } from './alreadyVisited';\nimport {\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n} from './contributions';\nimport { getLocaleCode } from './getCountryCode';\n\nconst readerRevenueCookies = [\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n];\n\nconst clearEpicViewLog = (): void =>\n\tlocalStorage.removeItem('gu.contributions.views');\n\nconst clearBannerLastClosedAt = (): void => {\n\tlocalStorage.removeItem('gu.prefs.engagementBannerLastClosedAt');\n\tlocalStorage.removeItem('gu.prefs.subscriptionBannerLastClosedAt');\n\tlocalStorage.removeItem('gu.noRRBannerTimestamp');\n};\n\nconst fakeOneOffContributor = (): void =>\n\tsetCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t\tvalue: Date.now().toString(),\n\t});\n\nconst MULTIVARIATE_ID_COOKIE = 'GU_mvt_id';\nconst MAX_CLIENT_MVT_ID = 1000000;\nconst incrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === MAX_CLIENT_MVT_ID) {\n\t\t\t// Wrap back to 1 if it would exceed the max\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: '1' });\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId + 1}` });\n\t\t}\n\t}\n};\nconst decrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === 0) {\n\t\t\t// Wrap back to max if it would be less than 0\n\t\t\tsetCookie({\n\t\t\t\tname: MULTIVARIATE_ID_COOKIE,\n\t\t\t\tvalue: MAX_CLIENT_MVT_ID.toString(),\n\t\t\t});\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId - 1}` });\n\t\t}\n\t}\n};\n\nconst clearCommonReaderRevenueStateAndReload = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tif (shouldHideReaderRevenue) {\n\t\talert(\n\t\t\t'This page has \"Prevent membership/contribution appeals\" ticked in Composer. Please try a different page',\n\t\t);\n\t\treturn;\n\t}\n\n\treaderRevenueCookies.forEach((cookie) => removeCookie({ name: cookie }));\n\tclearEpicViewLog();\n\n\tif (asExistingSupporter) {\n\t\tfakeOneOffContributor();\n\t}\n\n\twindow.location.reload();\n};\n\nconst showMeTheEpic = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showMeTheBanner = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearBannerLastClosedAt();\n\tsetAlreadyVisited(2);\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showNextVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tincrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showPreviousVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tdecrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst changeGeolocation = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tgetLocaleCode()\n\t\t.then((current) => {\n\t\t\tconst geo = window.prompt(\n\t\t\t\t`Enter two-letter geolocation code (e.g. GB, US, AU). Current is ${\n\t\t\t\t\tcurrent ?? 'null'\n\t\t\t\t}.`,\n\t\t\t);\n\t\t\tif (geo === 'UK') {\n\t\t\t\talert(\n\t\t\t\t\t`'UK' is not a valid geolocation - please use 'GB' instead!`,\n\t\t\t\t);\n\t\t\t} else if (geo) {\n\t\t\t\tstorage.local.set('gu.geo.override', geo);\n\t\t\t\tclearCommonReaderRevenueStateAndReload(\n\t\t\t\t\tasExistingSupporter,\n\t\t\t\t\tshouldHideReaderRevenue,\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(`changeGeolocation - error: ${String(e)}`);\n\t\t});\n};\n\ntype ReaderRevenueDevUtil = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n) => void;\nexport interface ReaderRevenueDevUtils {\n\tchangeGeolocation: ReaderRevenueDevUtil;\n\tshowMeTheEpic: ReaderRevenueDevUtil;\n\tshowMeTheBanner: ReaderRevenueDevUtil;\n\tshowNextVariant: ReaderRevenueDevUtil;\n\tshowPreviousVariant: ReaderRevenueDevUtil;\n}\n\nconst getForcedVariant = (type: 'epic' | 'banner'): string | null => {\n\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety in global,\n\tif (URLSearchParams) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tconst value = params.get(`force-${type}`);\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport {\n\tchangeGeolocation,\n\tshowMeTheEpic,\n\tshowMeTheBanner,\n\tshowNextVariant,\n\tshowPreviousVariant,\n\tgetForcedVariant,\n};\n","import { getShortDomain } from './getShortDomain.js';\n\n/**\n * Removes a cookie.\n * @param details Details about the cookie.\n * @param details.name - the cookie’s name.\n * @param details.currentDomainOnly - set to true if it's only for current domain\n */\nconst removeCookie = ({ name, currentDomainOnly = false, }) => {\n    const expires = 'expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    const path = 'path=/;';\n    // Remove cookie, implicitly using the document's domain.\n    document.cookie = `${name}=;${path}${expires}`;\n    if (!currentDomainOnly) {\n        // also remove from the short domain\n        document.cookie = `${name}=;${path}${expires} domain=${getShortDomain()};`;\n    }\n};\n\nexport { removeCookie };\n//# sourceMappingURL=removeCookie.js.map\n","import { useEffect, useState } from 'react';\n\n/**\n * Ensures that the given task is only run once and only after all items in waitFor are defined\n * @param {Function} task - The task to execute once\n * @param {Array} waitFor - An array of variables that must be defined before the task is executed\n * */\nexport const useOnce = (task: () => void, waitFor: unknown[]): void => {\n\tconst [alreadyRun, setAlreadyRun] = useState(false);\n\tconst isReady = waitFor.every((dep) => dep !== undefined);\n\tuseEffect(() => {\n\t\tif (!alreadyRun && isReady) {\n\t\t\ttask();\n\t\t\tsetAlreadyRun(true);\n\t\t}\n\t}, [alreadyRun, isReady, task]);\n};\n","// detect two or more `/` chars after a word boundary\nconst multipleSlashesInRoute = /\\b\\/{2,}/g;\nconst joinUrl = (...args) => args.join('/').replace(multipleSlashesInRoute, '/');\n\nexport { joinUrl };\n//# sourceMappingURL=joinUrl.js.map\n"],"names":["AlreadyVisitedKey","getAlreadyVisitedCount","localStorage","alreadyVisited","parseInt","getItem","Number","isNaN","setAlreadyVisited","count","setItem","toString","incrementAlreadyVisited","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_TIMESTAMP_KEY","MODULES_VERSION","shouldShowSupportMessaging","getCookie","name","isRecurringContributor","isSignedIn","isRecurringContributorFromAttrs","hasMonthlyContributionCookie","shouldMemoize","hasAnnualContributionCookie","getLastOneOffContributionTimestamp","contributionDateFromAttributes","contributionDateFromSupport","parsedDateFromAttributes","Date","parse","parsedDateFromSupport","undefined","getLastOneOffContributionDate","timestamp","date","year","getFullYear","month","getMonth","padStart","day","getDate","isRecentOneOffContributor","lastContributionDate","from","to","diffMs","now","Math","floor","dateDiffDays","shouldHideSupportMessaging","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasCmpConsentForArticleCount","Promise","resolve","onConsentChange","ccpa","tcfv2","aus","hasRequiredConsents","every","consent","consents","window","removeItem","hasOptedOutOfArticleCount","async","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","useState","useOnce","then","catch","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","item","withinCachePeriod","setLocalNoBannerCachePeriod","lazyFetchEmailWithTimeout","idapiUrl","ajaxUrl","setTimeout","getIdApiUserData","data","user","primaryEmailAddress","error","guardian","modules","sentry","reportError","email","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","JSON","decodeURIComponent","checkForErrors","response","ok","Error","statusText","status","callApi","url","fetch","credentials","json","cache","idapiUserMeResponse","joinUrl","getIdapiUserIdentifiers","idapiUserIdentifiersResponse","setCookie","value","daysToLive","isCrossSubdomain","expires","isValidCookie","ERR_INVALID_COOKIE","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","document","cookie","getDomainAttribute","toUTCString","memoizedCookies","getCookieValues","readerRevenueCookies","clearBannerLastClosedAt","MULTIVARIATE_ID_COOKIE","MAX_CLIENT_MVT_ID","incrementMvtCookie","mvtId","decrementMvtCookie","clearCommonReaderRevenueStateAndReload","asExistingSupporter","shouldHideReaderRevenue","alert","forEach","currentDomainOnly","path","getShortDomain","removeCookie","location","reload","showMeTheEpic","showMeTheBanner","showNextVariant","showPreviousVariant","changeGeolocation","getLocaleCode","current","geo","prompt","storage","e","console","String","getForcedVariant","type","URLSearchParams","search","get","task","waitFor","alreadyRun","setAlreadyRun","isReady","dep","useEffect","multipleSlashesInRoute","args","join","replace"],"sourceRoot":""}