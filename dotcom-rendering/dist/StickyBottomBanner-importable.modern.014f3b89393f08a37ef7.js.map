{"version":3,"file":"StickyBottomBanner-importable.modern.014f3b89393f08a37ef7.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner/BrazeBanner.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner/ReaderRevenueBanner.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/StickyBottomBanner.importable.tsx","webpack://@guardian/dotcom-rendering/./src/web/lib/useSignInGateWillShow.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/alreadyVisited.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getZIndex.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { BrazeBannerComponent } from '@guardian/braze-components/banner';\nimport type {\n\tBrazeArticleContext,\n\tBrazeMessagesInterface,\n} from '@guardian/braze-components/logic';\nimport { useEffect, useState } from 'react';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getBrazeMetaFromUrlFragment } from '../../lib/braze/forceBrazeMessage';\nimport { getZIndex } from '../../lib/getZIndex';\nimport type { CanShowResult } from '../../lib/messagePicker';\nimport { suppressForTaylorReport } from '../../lib/braze/taylorReport';\nimport { TagType } from '../../../types/tag';\n\ntype Meta = {\n\tdataFromBraze: { [key: string]: string };\n\tlogImpressionWithBraze: () => void;\n\tlogButtonClickWithBraze: (id: number) => void;\n};\n\ntype Props = {\n\tmeta: Meta;\n\tidApiUrl: string;\n};\n\nconst containerStyles = css`\n\tposition: fixed;\n\tbottom: -1px;\n\twidth: 100%;\n\t${getZIndex('banner')}\n`;\n\n// We can show a Braze banner if:\n// - The Braze switch is on\n// - We have a Braze API key\n// - The user should have support messaging hidden, implying they are a contributor or subscriber\n// - We're not on a Glabs paid content page\n// - We've got a Braze UUID from the API, given a user's ID Creds\n// - The user has given Consent via CCPA or TCFV2\n// - The Braze websdk appboy initialisation does not throw an error\n// - The Braze app Boy subscription to in app message returns meta info\n// OR\n// - The force-braze-message query string arg is passed\nexport const canShowBrazeBanner = async (\n\tbrazeMessages: BrazeMessagesInterface,\n\tbrazeArticleContext: BrazeArticleContext,\n\ttags: TagType[],\n): Promise<CanShowResult<Meta>> => {\n\tconst forcedBrazeMeta = getBrazeMetaFromUrlFragment();\n\tif (forcedBrazeMeta) {\n\t\treturn {\n\t\t\tshow: true,\n\t\t\tmeta: forcedBrazeMeta,\n\t\t};\n\t}\n\n\tif (suppressForTaylorReport(tags)) {\n\t\treturn { show: false };\n\t}\n\n\ttry {\n\t\tconst message = await brazeMessages.getMessageForBanner(\n\t\t\tbrazeArticleContext,\n\t\t);\n\n\t\tconst logButtonClickWithBraze = (internalButtonId: number) => {\n\t\t\tmessage.logButtonClick(internalButtonId);\n\t\t};\n\n\t\tconst logImpressionWithBraze = () => {\n\t\t\t// Log the impression with Braze\n\t\t\tmessage.logImpression();\n\t\t};\n\n\t\tif (message.extras) {\n\t\t\tconst meta = {\n\t\t\t\tdataFromBraze: message.extras,\n\t\t\t\tlogImpressionWithBraze,\n\t\t\t\tlogButtonClickWithBraze,\n\t\t\t};\n\n\t\t\treturn { show: true, meta };\n\t\t}\n\n\t\treturn { show: false };\n\t} catch (e) {\n\t\treturn { show: false };\n\t}\n};\n\ntype InnerProps = {\n\tmeta: Meta;\n\tBrazeComponent: typeof BrazeBannerComponent;\n\tidApiUrl: string;\n};\n\nconst BrazeBannerWithSatisfiedDependencies = ({\n\tBrazeComponent,\n\tmeta,\n\tidApiUrl,\n}: InnerProps) => {\n\tuseEffect(() => {\n\t\t// Log the impression with Braze\n\t\tmeta.logImpressionWithBraze();\n\n\t\t// Log VIEW event with Ophan\n\t\tsubmitComponentEvent({\n\t\t\tcomponent: {\n\t\t\t\tcomponentType: 'RETENTION_ENGAGEMENT_BANNER',\n\t\t\t\tid:\n\t\t\t\t\tmeta.dataFromBraze.ophanComponentId ??\n\t\t\t\t\tmeta.dataFromBraze.componentName,\n\t\t\t},\n\t\t\taction: 'VIEW',\n\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst componentName = meta.dataFromBraze.componentName;\n\tif (!componentName) return null;\n\n\treturn (\n\t\t<div css={containerStyles}>\n\t\t\t<BrazeComponent\n\t\t\t\tlogButtonClickWithBraze={meta.logButtonClickWithBraze}\n\t\t\t\tsubmitComponentEvent={submitComponentEvent}\n\t\t\t\tcomponentName={componentName}\n\t\t\t\tbrazeMessageProps={meta.dataFromBraze}\n\t\t\t\tsubscribeToNewsletter={async (newsletterId: string) => {\n\t\t\t\t\tawait fetch(`${idApiUrl}/users/me/newsletters`, {\n\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tid: newsletterId,\n\t\t\t\t\t\t\tsubscribed: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcredentials: 'include',\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport const BrazeBanner = ({ meta, idApiUrl }: Props) => {\n\tconst [BrazeComponent, setBrazeComponent] =\n\t\tuseState<typeof BrazeBannerComponent>();\n\n\tuseEffect(() => {\n\t\timport(\n\t\t\t/* webpackChunkName: \"guardian-braze-components-banner\" */ '@guardian/braze-components/banner'\n\t\t)\n\t\t\t.then((module) => {\n\t\t\t\tsetBrazeComponent(() => module.BrazeBannerComponent);\n\t\t\t})\n\t\t\t.catch((error) =>\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\terror,\n\t\t\t\t\t'braze-banner',\n\t\t\t\t),\n\t\t\t);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{BrazeComponent ? (\n\t\t\t\t<BrazeBannerWithSatisfiedDependencies\n\t\t\t\t\tBrazeComponent={BrazeComponent}\n\t\t\t\t\tmeta={meta}\n\t\t\t\t\tidApiUrl={idApiUrl}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div />\n\t\t\t)}\n\t\t</>\n\t);\n};\n","import { css } from '@emotion/react';\nimport { getCookie } from '@guardian/libs';\nimport {\n\tgetBanner,\n\tgetPuzzlesBanner,\n} from '@guardian/support-dotcom-components';\nimport type {\n\tBannerPayload,\n\tModuleData,\n\tModuleDataResponse,\n} from '@guardian/support-dotcom-components/dist/dotcom/src/types';\nimport { useState } from 'react';\nimport type { ArticleCounts } from '../../../lib/articleCount';\nimport type { TagType } from '../../../types/tag';\nimport { trackNonClickInteraction } from '../../browser/ga/ga';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport {\n\tgetLastOneOffContributionDate,\n\tgetPurchaseInfo,\n\thasCmpConsentForBrowserId,\n\thasOptedOutOfArticleCount,\n\tlazyFetchEmailWithTimeout,\n\tMODULES_VERSION,\n\tsetLocalNoBannerCachePeriod,\n\tshouldHideSupportMessaging,\n\twithinLocalNoBannerCachePeriod,\n} from '../../lib/contributions';\nimport { getToday } from '../../lib/dailyArticleCount';\nimport { getZIndex } from '../../lib/getZIndex';\nimport type { CanShowResult } from '../../lib/messagePicker';\nimport { setAutomat } from '../../lib/setAutomat';\nimport { useIsInView } from '../../lib/useIsInView';\nimport { useOnce } from '../../lib/useOnce';\n\ntype BaseProps = {\n\tisSignedIn: boolean;\n\tcontentType: string;\n\tsectionId?: string;\n\tshouldHideReaderRevenue: boolean;\n\tisMinuteArticle: boolean;\n\tisPaidContent: boolean;\n\tisSensitive: boolean;\n\ttags: TagType[];\n\tcontributionsServiceUrl: string;\n\talreadyVisitedCount: number;\n\tengagementBannerLastClosedAt?: string;\n\tsubscriptionBannerLastClosedAt?: string;\n\tsignInBannerLastClosedAt?: string;\n};\n\ntype BuildPayloadProps = BaseProps & {\n\tcountryCode: string;\n\toptedOutOfArticleCount: boolean;\n\tasyncArticleCounts: Promise<ArticleCounts | undefined>;\n};\n\ntype CanShowProps = BaseProps & {\n\tasyncCountryCode: Promise<string>;\n\tremoteBannerConfig: boolean;\n\tsection: string;\n\tisPreview: boolean;\n\tidApiUrl: string;\n\tsignInGateWillShow: boolean;\n\tasyncArticleCounts: Promise<ArticleCounts | undefined>;\n};\n\ntype ReaderRevenueComponentType =\n\t| 'ACQUISITIONS_SUBSCRIPTIONS_BANNER'\n\t| 'ACQUISITIONS_OTHER';\n\nexport type CanShowFunctionType<T> = (\n\tprops: CanShowProps,\n) => Promise<CanShowResult<T>>;\n\nconst getArticleCountToday = (\n\tarticleCounts: ArticleCounts | undefined,\n): number | undefined => {\n\tconst latest = articleCounts?.dailyArticleHistory[0];\n\tif (latest) {\n\t\tif (latest.day === getToday()) {\n\t\t\treturn latest.count;\n\t\t}\n\t\t// article counting is enabled, but none so far today\n\t\treturn 0;\n\t}\n\treturn undefined;\n};\n\nconst buildPayload = async ({\n\tisSignedIn,\n\tshouldHideReaderRevenue,\n\tisPaidContent,\n\talreadyVisitedCount,\n\tengagementBannerLastClosedAt,\n\tsubscriptionBannerLastClosedAt,\n\tsignInBannerLastClosedAt,\n\tcountryCode,\n\toptedOutOfArticleCount,\n\tasyncArticleCounts,\n\tsectionId,\n\ttags,\n\tcontentType,\n}: BuildPayloadProps): Promise<BannerPayload> => {\n\tconst articleCounts = await asyncArticleCounts;\n\tconst weeklyArticleHistory = articleCounts?.weeklyArticleHistory;\n\tconst articleCountToday = getArticleCountToday(articleCounts);\n\n\tconst browserId = getCookie({ name: 'bwid', shouldMemoize: true });\n\n\treturn {\n\t\ttracking: {\n\t\t\tophanPageId: window.guardian.config.ophan.pageViewId,\n\t\t\tplatformId: 'GUARDIAN_WEB',\n\t\t\tclientName: 'dcr',\n\t\t\treferrerUrl: window.location.origin + window.location.pathname,\n\t\t},\n\t\ttargeting: {\n\t\t\talreadyVisitedCount,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisPaidContent,\n\t\t\tshowSupportMessaging: !shouldHideSupportMessaging(isSignedIn),\n\t\t\tengagementBannerLastClosedAt,\n\t\t\tsubscriptionBannerLastClosedAt,\n\t\t\tsignInBannerLastClosedAt,\n\t\t\tmvtId: Number(\n\t\t\t\tgetCookie({ name: 'GU_mvt_id', shouldMemoize: true }),\n\t\t\t),\n\t\t\tcountryCode,\n\t\t\tweeklyArticleHistory,\n\t\t\tarticleCountToday,\n\t\t\thasOptedOutOfArticleCount: optedOutOfArticleCount,\n\t\t\tmodulesVersion: MODULES_VERSION,\n\t\t\tsectionId,\n\t\t\ttagIds: tags.map((tag) => tag.id),\n\t\t\tcontentType,\n\t\t\tbrowserId: (await hasCmpConsentForBrowserId())\n\t\t\t\t? browserId ?? undefined\n\t\t\t\t: undefined,\n\t\t\tpurchaseInfo: getPurchaseInfo(),\n\t\t\tisSignedIn,\n\t\t\tlastOneOffContributionDate: getLastOneOffContributionDate(),\n\t\t},\n\t};\n};\n\nexport const canShowRRBanner: CanShowFunctionType<BannerProps> = async ({\n\tremoteBannerConfig,\n\tisSignedIn,\n\tasyncCountryCode,\n\tcontentType,\n\tsectionId,\n\tshouldHideReaderRevenue,\n\tisMinuteArticle,\n\tisPaidContent,\n\tisSensitive,\n\ttags,\n\tcontributionsServiceUrl,\n\talreadyVisitedCount,\n\tengagementBannerLastClosedAt,\n\tsubscriptionBannerLastClosedAt,\n\tsignInBannerLastClosedAt,\n\tisPreview,\n\tidApiUrl,\n\tsignInGateWillShow,\n\tasyncArticleCounts,\n}) => {\n\tif (!remoteBannerConfig) return { show: false };\n\n\tif (\n\t\tshouldHideReaderRevenue ||\n\t\tisPaidContent ||\n\t\tisPreview ||\n\t\tsignInGateWillShow\n\t) {\n\t\t// We never serve Reader Revenue banners in this case\n\t\treturn { show: false };\n\t}\n\n\tconst purchaseInfo = getPurchaseInfo();\n\tconst showSignInPrompt =\n\t\tpurchaseInfo && !isSignedIn && !signInBannerLastClosedAt;\n\n\tconst hasForceBannerParam = window.location.search.includes('force-banner');\n\n\tif (\n\t\t!showSignInPrompt &&\n\t\t!hasForceBannerParam &&\n\t\tengagementBannerLastClosedAt &&\n\t\tsubscriptionBannerLastClosedAt &&\n\t\twithinLocalNoBannerCachePeriod()\n\t) {\n\t\treturn { show: false };\n\t}\n\n\tconst countryCode = await asyncCountryCode;\n\tconst optedOutOfArticleCount = await hasOptedOutOfArticleCount();\n\tconst bannerPayload = await buildPayload({\n\t\tisSignedIn,\n\t\tcountryCode,\n\t\tcontentType,\n\t\tsectionId,\n\t\tshouldHideReaderRevenue,\n\t\tisMinuteArticle,\n\t\tisPaidContent,\n\t\ttags,\n\t\tcontributionsServiceUrl,\n\t\tisSensitive,\n\t\talreadyVisitedCount,\n\t\tengagementBannerLastClosedAt,\n\t\tsubscriptionBannerLastClosedAt,\n\t\tsignInBannerLastClosedAt,\n\t\toptedOutOfArticleCount,\n\t\tasyncArticleCounts,\n\t});\n\n\tconst response: ModuleDataResponse = await getBanner(\n\t\tcontributionsServiceUrl,\n\t\tbannerPayload,\n\t);\n\tif (!response.data) {\n\t\tif (engagementBannerLastClosedAt && subscriptionBannerLastClosedAt) {\n\t\t\tsetLocalNoBannerCachePeriod();\n\t\t}\n\t\treturn { show: false };\n\t}\n\n\tconst { module, meta } = response.data;\n\n\tconst fetchEmail = isSignedIn\n\t\t? lazyFetchEmailWithTimeout(idApiUrl)\n\t\t: undefined;\n\n\treturn { show: true, meta: { module, meta, fetchEmail } };\n};\n\nexport const canShowPuzzlesBanner: CanShowFunctionType<BannerProps> = async ({\n\tremoteBannerConfig,\n\tisSignedIn,\n\tasyncCountryCode,\n\tcontentType,\n\tsectionId,\n\tshouldHideReaderRevenue,\n\tisMinuteArticle,\n\tisPaidContent,\n\tisSensitive,\n\ttags,\n\tcontributionsServiceUrl,\n\talreadyVisitedCount,\n\tengagementBannerLastClosedAt,\n\tsubscriptionBannerLastClosedAt,\n\tsection,\n\tasyncArticleCounts,\n}) => {\n\tconst isPuzzlesPage =\n\t\tsection === 'crosswords' ||\n\t\ttags.some((tag) => tag.type === 'Series' && tag.title === 'Sudoku');\n\n\tif (shouldHideReaderRevenue) {\n\t\t// We never serve Reader Revenue banners in this case\n\t\treturn { show: false };\n\t}\n\n\tif (isPuzzlesPage && remoteBannerConfig) {\n\t\tconst countryCode = await asyncCountryCode;\n\t\tconst optedOutOfArticleCount = await hasOptedOutOfArticleCount();\n\t\tconst bannerPayload = await buildPayload({\n\t\t\tisSignedIn,\n\t\t\tcountryCode,\n\t\t\tcontentType,\n\t\t\tsectionId,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisMinuteArticle,\n\t\t\tisPaidContent,\n\t\t\ttags,\n\t\t\tcontributionsServiceUrl,\n\t\t\tisSensitive,\n\t\t\talreadyVisitedCount,\n\t\t\tengagementBannerLastClosedAt,\n\t\t\tsubscriptionBannerLastClosedAt,\n\t\t\toptedOutOfArticleCount,\n\t\t\tasyncArticleCounts,\n\t\t});\n\t\treturn getPuzzlesBanner(contributionsServiceUrl, bannerPayload).then(\n\t\t\t(response: ModuleDataResponse) => {\n\t\t\t\tif (!response.data) {\n\t\t\t\t\treturn { show: false };\n\t\t\t\t}\n\n\t\t\t\tconst { module, meta } = response.data;\n\t\t\t\treturn { show: true, meta: { module, meta } };\n\t\t\t},\n\t\t);\n\t}\n\n\treturn { show: false };\n};\n\nexport type BannerProps = {\n\tmeta: any;\n\tmodule: ModuleData;\n\tfetchEmail?: () => Promise<string | null>;\n};\n\ntype RemoteBannerProps = BannerProps & {\n\tcomponentTypeName: ReaderRevenueComponentType;\n\tdisplayEvent: string;\n};\n\nconst RemoteBanner = ({\n\tcomponentTypeName,\n\tdisplayEvent,\n\tmeta,\n\tmodule,\n\tfetchEmail,\n}: RemoteBannerProps) => {\n\tconst [Banner, setBanner] = useState<React.ElementType>();\n\n\tconst [hasBeenSeen, setNode] = useIsInView({\n\t\tthreshold: 0,\n\t\tdebounce: true,\n\t});\n\n\tuseOnce(() => {\n\t\tif (module === undefined || meta === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAutomat();\n\n\t\twindow\n\t\t\t.guardianPolyfilledImport(module.url)\n\t\t\t.then((bannerModule: { [key: string]: JSX.Element }) => {\n\t\t\t\tsetBanner(() => bannerModule[module.name] ?? null); // useState requires functions to be wrapped\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconst msg = `Error importing RR banner: ${String(error)}`;\n\n\t\t\t\tconsole.log(msg);\n\t\t\t\twindow.guardian.modules.sentry.reportError(\n\t\t\t\t\tnew Error(msg),\n\t\t\t\t\t'rr-banner',\n\t\t\t\t);\n\t\t\t});\n\t}, []);\n\n\tuseOnce(() => {\n\t\tconst { componentType } = meta;\n\n\t\t// track banner view event in Google Analytics for subscriptions banner\n\t\tif (componentType === componentTypeName) {\n\t\t\ttrackNonClickInteraction(displayEvent);\n\t\t}\n\t}, [hasBeenSeen, meta]);\n\n\tif (Banner !== undefined) {\n\t\treturn (\n\t\t\t// The css here is necessary to put the container div in view, so that we can track the view\n\t\t\t<div\n\t\t\t\tref={setNode}\n\t\t\t\tcss={css`\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\t${getZIndex('banner')}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{}\n\t\t\t\t<Banner\n\t\t\t\t\t{...module.props}\n\t\t\t\t\tsubmitComponentEvent={submitComponentEvent}\n\t\t\t\t\tfetchEmail={fetchEmail}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const ReaderRevenueBanner = ({\n\tmeta,\n\tmodule,\n\tfetchEmail,\n}: BannerProps) => (\n\t<RemoteBanner\n\t\tcomponentTypeName=\"ACQUISITIONS_SUBSCRIPTIONS_BANNER\"\n\t\tdisplayEvent=\"subscription-banner : display\"\n\t\tmeta={meta}\n\t\tmodule={module}\n\t\tfetchEmail={fetchEmail}\n\t/>\n);\n\nexport const PuzzlesBanner = ({ meta, module }: BannerProps) => (\n\t<RemoteBanner\n\t\tcomponentTypeName=\"ACQUISITIONS_OTHER\"\n\t\tdisplayEvent=\"puzzles-banner : display\"\n\t\tmeta={meta}\n\t\tmodule={module}\n\t/>\n);\n","import type {\n\tBrazeArticleContext,\n\tBrazeMessagesInterface,\n} from '@guardian/braze-components/logic';\nimport { cmp } from '@guardian/consent-management-platform';\nimport { getCookie } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport type { ArticleCounts } from '../../lib/articleCount';\nimport { getArticleCounts } from '../../lib/articleCount';\nimport type { TagType } from '../../types/tag';\nimport { getAlreadyVisitedCount } from '../lib/alreadyVisited';\nimport { getLocaleCode } from '../lib/getCountryCode';\nimport type {\n\tCandidateConfig,\n\tMaybeFC,\n\tSlotConfig,\n} from '../lib/messagePicker';\nimport { pickMessage } from '../lib/messagePicker';\nimport { useBraze } from '../lib/useBraze';\nimport { useOnce } from '../lib/useOnce';\nimport { useSignInGateWillShow } from '../lib/useSignInGateWillShow';\nimport {\n\tBrazeBanner,\n\tcanShowBrazeBanner,\n} from './StickyBottomBanner/BrazeBanner';\nimport {\n\tcanShowPuzzlesBanner,\n\tcanShowRRBanner,\n\tPuzzlesBanner,\n\tReaderRevenueBanner,\n} from './StickyBottomBanner/ReaderRevenueBanner';\nimport type {\n\tBannerProps,\n\tCanShowFunctionType,\n} from './StickyBottomBanner/ReaderRevenueBanner';\n\ntype Props = {\n\tcontentType: string;\n\tsectionName?: string;\n\tsection: string;\n\ttags: TagType[];\n\tisPaidContent: boolean;\n\tisPreview: boolean;\n\tshouldHideReaderRevenue: boolean;\n\tisMinuteArticle: boolean;\n\n\tcontributionsServiceUrl: string;\n\tidApiUrl: string;\n\n\tpageId: string;\n\tkeywordIds: string;\n};\n\ntype RRBannerConfig = {\n\tid: string;\n\tBannerComponent: typeof ReaderRevenueBanner;\n\tcanShowFn: CanShowFunctionType<BannerProps>;\n\tisEnabled: boolean;\n};\n\nconst getBannerLastClosedAt = (key: string): string | undefined => {\n\tconst item = localStorage.getItem(`gu.prefs.${key}`) as undefined | string;\n\n\tif (item) {\n\t\tconst parsedItem = JSON.parse(item) as Record<string, any>;\n\t\treturn parsedItem.value;\n\t}\n\treturn item;\n};\n\nconst DEFAULT_BANNER_TIMEOUT_MILLIS = 2000;\n\nconst buildCmpBannerConfig = (): CandidateConfig<void> => ({\n\tcandidate: {\n\t\tid: 'cmpUi',\n\t\tcanShow: () =>\n\t\t\tcmp\n\t\t\t\t.willShowPrivacyMessage()\n\t\t\t\t.then((result) =>\n\t\t\t\t\tresult ? { show: true, meta: undefined } : { show: false },\n\t\t\t\t),\n\t\tshow: () => {\n\t\t\t// New CMP is not a react component and is shown outside of react's world\n\t\t\t// so render nothing if it will show\n\t\t\treturn null;\n\t\t},\n\t},\n\ttimeoutMillis: null,\n});\n\nconst buildRRBannerConfigWith = ({\n\tid,\n\tBannerComponent,\n\tcanShowFn,\n\tisEnabled,\n}: RRBannerConfig) => {\n\treturn ({\n\t\tisSignedIn,\n\t\tasyncCountryCode,\n\t\tisPreview,\n\t\tasyncArticleCounts,\n\t\tsignInGateWillShow = false,\n\t\tcontentType,\n\t\tsection,\n\t\tshouldHideReaderRevenue,\n\t\tisMinuteArticle,\n\t\tisPaidContent,\n\t\tisSensitive,\n\t\ttags,\n\t\tcontributionsServiceUrl,\n\t\tidApiUrl,\n\t}: {\n\t\tisSignedIn: boolean;\n\t\tasyncCountryCode: Promise<string>;\n\t\tisPreview: boolean;\n\t\tasyncArticleCounts: Promise<ArticleCounts | undefined>;\n\t\tsignInGateWillShow?: boolean;\n\t\tcontentType: string;\n\t\tsection: string;\n\t\tshouldHideReaderRevenue: boolean;\n\t\tisMinuteArticle: boolean;\n\t\tisPaidContent: boolean;\n\t\tisSensitive: boolean;\n\t\ttags: TagType[];\n\t\tcontributionsServiceUrl: string;\n\t\tidApiUrl: string;\n\t}): CandidateConfig<BannerProps> => {\n\t\treturn {\n\t\t\tcandidate: {\n\t\t\t\tid,\n\t\t\t\tcanShow: () =>\n\t\t\t\t\tcanShowFn({\n\t\t\t\t\t\tremoteBannerConfig: isEnabled,\n\t\t\t\t\t\tisSignedIn,\n\t\t\t\t\t\tasyncCountryCode,\n\t\t\t\t\t\tcontentType,\n\t\t\t\t\t\tsectionId: section,\n\t\t\t\t\t\tshouldHideReaderRevenue,\n\t\t\t\t\t\tisMinuteArticle,\n\t\t\t\t\t\tisPaidContent,\n\t\t\t\t\t\tisSensitive,\n\t\t\t\t\t\ttags,\n\t\t\t\t\t\tcontributionsServiceUrl,\n\t\t\t\t\t\talreadyVisitedCount: getAlreadyVisitedCount(),\n\t\t\t\t\t\tengagementBannerLastClosedAt: getBannerLastClosedAt(\n\t\t\t\t\t\t\t'engagementBannerLastClosedAt',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsubscriptionBannerLastClosedAt: getBannerLastClosedAt(\n\t\t\t\t\t\t\t'subscriptionBannerLastClosedAt',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsignInBannerLastClosedAt: getBannerLastClosedAt(\n\t\t\t\t\t\t\t'signInBannerLastClosedAt',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsection,\n\t\t\t\t\t\tisPreview,\n\t\t\t\t\t\tidApiUrl,\n\t\t\t\t\t\tsignInGateWillShow,\n\t\t\t\t\t\tasyncArticleCounts,\n\t\t\t\t\t}),\n\t\t\t\tshow:\n\t\t\t\t\t({ meta, module, fetchEmail }: BannerProps) =>\n\t\t\t\t\t() =>\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<BannerComponent\n\t\t\t\t\t\t\t\tmeta={meta}\n\t\t\t\t\t\t\t\tmodule={module}\n\t\t\t\t\t\t\t\tfetchEmail={fetchEmail}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t},\n\t\t\ttimeoutMillis: DEFAULT_BANNER_TIMEOUT_MILLIS,\n\t\t};\n\t};\n};\n\nconst buildPuzzlesBannerConfig = (isEnabled: boolean) =>\n\tbuildRRBannerConfigWith({\n\t\tid: 'puzzles-banner',\n\t\tBannerComponent: PuzzlesBanner,\n\t\tcanShowFn: canShowPuzzlesBanner,\n\t\tisEnabled,\n\t});\n\nconst buildReaderRevenueBannerConfig = (isEnabled: boolean) =>\n\tbuildRRBannerConfigWith({\n\t\tid: 'reader-revenue-banner',\n\t\tBannerComponent: ReaderRevenueBanner,\n\t\tcanShowFn: canShowRRBanner,\n\t\tisEnabled,\n\t});\n\nconst buildBrazeBanner = (\n\tbrazeMessages: BrazeMessagesInterface,\n\tbrazeArticleContext: BrazeArticleContext,\n\tidApiUrl: string,\n\ttags: TagType[],\n): CandidateConfig<any> => ({\n\tcandidate: {\n\t\tid: 'braze-banner',\n\t\tcanShow: () =>\n\t\t\tcanShowBrazeBanner(brazeMessages, brazeArticleContext, tags),\n\t\tshow: (meta: any) => () =>\n\t\t\t<BrazeBanner meta={meta} idApiUrl={idApiUrl} />,\n\t},\n\ttimeoutMillis: DEFAULT_BANNER_TIMEOUT_MILLIS,\n});\n\nexport const StickyBottomBanner = ({\n\tcontentType,\n\tsectionName,\n\tsection,\n\ttags,\n\tisPaidContent,\n\tisPreview,\n\tshouldHideReaderRevenue,\n\tisMinuteArticle,\n\tisSensitive,\n\tcontributionsServiceUrl,\n\tidApiUrl,\n\tpageId,\n\tkeywordIds,\n\tremoteBannerSwitch,\n\tpuzzleBannerSwitch,\n}: Props & {\n\tremoteBannerSwitch: boolean;\n\tpuzzleBannerSwitch: boolean;\n\tisSensitive: boolean;\n}) => {\n\tconst { brazeMessages } = useBraze(idApiUrl);\n\n\tconst asyncCountryCode = getLocaleCode();\n\tconst isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n\tconst [SelectedBanner, setSelectedBanner] = useState<MaybeFC | null>(null);\n\tconst [asyncArticleCounts, setAsyncArticleCounts] =\n\t\tuseState<Promise<ArticleCounts | undefined>>();\n\tconst signInGateWillShow = useSignInGateWillShow({\n\t\tisSignedIn,\n\t\tcontentType,\n\t\tsectionName,\n\t\ttags,\n\t\tisPaidContent,\n\t\tisPreview,\n\t});\n\n\tuseEffect(() => {\n\t\tsetAsyncArticleCounts(getArticleCounts(pageId, keywordIds));\n\t}, [pageId, keywordIds]);\n\n\tuseOnce(() => {\n\t\tconst CMP = buildCmpBannerConfig();\n\t\tconst puzzlesBanner = buildPuzzlesBannerConfig(puzzleBannerSwitch)({\n\t\t\tisSignedIn,\n\t\t\tasyncCountryCode: asyncCountryCode as Promise<string>,\n\t\t\tisPreview,\n\t\t\tasyncArticleCounts: asyncArticleCounts as Promise<\n\t\t\t\tArticleCounts | undefined\n\t\t\t>,\n\t\t\tcontentType,\n\t\t\tsection,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisMinuteArticle,\n\t\t\tisPaidContent,\n\t\t\tisSensitive,\n\t\t\ttags,\n\t\t\tcontributionsServiceUrl,\n\t\t\tidApiUrl,\n\t\t});\n\t\tconst readerRevenue = buildReaderRevenueBannerConfig(\n\t\t\tremoteBannerSwitch,\n\t\t)({\n\t\t\tisSignedIn,\n\t\t\tasyncCountryCode: asyncCountryCode as Promise<string>,\n\t\t\tisPreview,\n\t\t\tasyncArticleCounts: asyncArticleCounts as Promise<\n\t\t\t\tArticleCounts | undefined\n\t\t\t>,\n\t\t\tsignInGateWillShow,\n\t\t\tcontentType,\n\t\t\tsection,\n\t\t\tshouldHideReaderRevenue,\n\t\t\tisMinuteArticle,\n\t\t\tisPaidContent,\n\t\t\tisSensitive,\n\t\t\ttags,\n\t\t\tcontributionsServiceUrl,\n\t\t\tidApiUrl,\n\t\t});\n\t\tconst brazeArticleContext: BrazeArticleContext = {\n\t\t\tsection: sectionName,\n\t\t};\n\t\tconst brazeBanner = buildBrazeBanner(\n\t\t\tbrazeMessages as BrazeMessagesInterface,\n\t\t\tbrazeArticleContext,\n\t\t\tidApiUrl,\n\t\t\ttags,\n\t\t);\n\t\tconst bannerConfig: SlotConfig = {\n\t\t\tcandidates: [CMP, puzzlesBanner, readerRevenue, brazeBanner],\n\t\t\tname: 'banner',\n\t\t};\n\n\t\tpickMessage(bannerConfig)\n\t\t\t.then((PickedBanner: () => MaybeFC) =>\n\t\t\t\tsetSelectedBanner(PickedBanner),\n\t\t\t)\n\t\t\t.catch((e) =>\n\t\t\t\tconsole.error(\n\t\t\t\t\t`StickyBottomBanner pickMessage - error: ${String(e)}`,\n\t\t\t\t),\n\t\t\t);\n\t}, [isSignedIn, asyncCountryCode, brazeMessages, asyncArticleCounts]);\n\n\tif (SelectedBanner) {\n\t\treturn <SelectedBanner />;\n\t}\n\n\treturn null;\n};\n","import { useEffect, useState } from 'react';\nimport type { TagType } from '../../types/tag';\nimport type {\n\tCurrentSignInGateABTest,\n\tSignInGateComponent,\n} from '../components/SignInGate/types';\nimport { useOnce } from './useOnce';\nimport { useSignInGateSelector } from './useSignInGateSelector';\n\ntype Props = {\n\tisSignedIn?: boolean;\n\tcontentType: string;\n\tsectionName?: string;\n\ttags: TagType[];\n\tisPaidContent: boolean;\n\tisPreview: boolean;\n};\n/**\n * @description\n * A custom hook to determine if a sign in gate will show on the current page\n * @param {Boolean} isSignedIn - Is the user signed in to the guardian\n * */\nexport const useSignInGateWillShow = ({\n\tisSignedIn,\n\tcontentType,\n\tsectionName,\n\ttags,\n\tisPaidContent,\n\tisPreview,\n}: Props): boolean | undefined => {\n\tconst [gateVariant, setGateVariant] = useState<\n\t\tSignInGateComponent | null | undefined\n\t>(undefined);\n\tconst [currentTest, setCurrentTest] = useState<\n\t\tCurrentSignInGateABTest | null | undefined\n\t>(undefined);\n\tconst [canShowGate, setCanShowGate] = useState(false);\n\tconst gateSelector = useSignInGateSelector();\n\n\tuseOnce(() => {\n\t\tconst [gateSelectorVariant, gateSelectorTest] = gateSelector as [\n\t\t\tSignInGateComponent | null,\n\t\t\tCurrentSignInGateABTest | null,\n\t\t];\n\t\tsetGateVariant(gateSelectorVariant);\n\t\tsetCurrentTest(gateSelectorTest);\n\t}, [gateSelector]);\n\n\tuseEffect(() => {\n\t\tif (gateVariant && currentTest) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-floating-promises\n\t\t\tgateVariant\n\t\t\t\t.canShow({\n\t\t\t\t\tisSignedIn: !!isSignedIn,\n\t\t\t\t\tcurrentTest,\n\t\t\t\t\tcontentType,\n\t\t\t\t\tsectionName,\n\t\t\t\t\ttags,\n\t\t\t\t\tisPaidContent,\n\t\t\t\t\tisPreview,\n\t\t\t\t})\n\t\t\t\t.then(setCanShowGate);\n\t\t}\n\t}, [\n\t\tcurrentTest,\n\t\tgateVariant,\n\t\tisSignedIn,\n\t\tcontentType,\n\t\tsectionName,\n\t\ttags,\n\t\tisPaidContent,\n\t\tisPreview,\n\t]);\n\n\treturn canShowGate && !!gateVariant && !!gateVariant.gate;\n};\n","const AlreadyVisitedKey = 'gu.alreadyVisited';\n\nexport const getAlreadyVisitedCount = (): number => {\n\tconst alreadyVisited = parseInt(\n\t\tlocalStorage.getItem(AlreadyVisitedKey) ?? '',\n\t\t10,\n\t);\n\treturn !Number.isNaN(alreadyVisited) ? alreadyVisited : 0;\n};\n\nexport const setAlreadyVisited = (count: number): void => {\n\tlocalStorage.setItem(AlreadyVisitedKey, count.toString());\n};\n\nexport const incrementAlreadyVisited = (): void => {\n\tconst alreadyVisited = getAlreadyVisitedCount();\n\tsetAlreadyVisited(alreadyVisited + 1);\n};\n","/**\n * How do I get a z-index for my new item?\n *\n * Decide a meaningful name for your item and then insert it\n * in the indices array below. The higher up your item visually,\n * then the higher it will be in the z-index stack,\n * 'higher' means _earlier_ in the array.\n *\n * Eg. stickyAdWrapper will be given a higher z-index than bodyArea\n *\n * Once inserted in the array, use getZIndex() to return the css\n *\n * Eg.\n *\n * import { getZIndex } from './getZIndex';\n *\n * const myCss = css`\n *    color: blue;\n *    ${getZIndex('TheGuardian')}\n * `;\n *\n * As new items are added, all z-indexes are adjusted\n */\nconst indices = [\n\t// Modals will go here at the top\n\n\t// Sticky video and button need to be above everything\n\t'sticky-video-button',\n\t'sticky-video',\n\t'banner',\n\t'dropdown',\n\t'burger',\n\t'expanded-veggie-menu-wrapper',\n\t'expanded-veggie-menu',\n\n\t// Mobile sticky appears below banners\n\t'mobileSticky',\n\n\t// Headers with sticky ads\n\t'stickyAdWrapperLabsHeader',\n\t'stickyAdWrapper',\n\t'stickyAdWrapperNav',\n\n\t// Edition selector in nav - needs to be below stickyAdWrapper\n\t'editionDropdown',\n\n\t// Liveblog toast\n\t'toast',\n\n\t// Onwards Carousel (Related content etc)\n\t'onwardsCarousel',\n\n\t// Search link should be above The Guardian svg\n\t'myAccountDropdown',\n\t'searchHeaderLink',\n\t'TheGuardian',\n\n\t// Wrapper after nav stuff\n\t'headerWrapper',\n\n\t// Article headline (should be above main media)\n\t'articleHeadline',\n\t'immersiveBlackBox',\n\n\t// Body\n\t'bodyArea',\n\t'rightColumnArea',\n\n\t// Main media\n\t'mainMedia',\n\n\t// Nested links in cards should sit above the main card link\n\t// See: https://www.sarasoueidan.com/blog/nested-links/\n\t'card-nested-link',\n\t'card-link',\n] as const;\n\n// Implementation code - you don't need to change this to get a new index\nexport type ZIndex = (typeof indices)[number];\n\nconst decideIndex = (name: ZIndex): number => {\n\tconst index = indices.indexOf(name);\n\tif (index === -1) return -1; // indexOf returns -1 if there is no match\n\treturn indices.length - index; // reverse the indices: last item gets 1\n};\n\nexport const getZIndex = (zIndex: ZIndex): string =>\n\t`z-index: ${decideIndex(zIndex)};`;\n\nexport const getZIndexImportant = (zIndex: ZIndex): string =>\n\t`z-index: ${decideIndex(zIndex)} !important;`;\n"],"names":["containerStyles","css","getZIndex","BrazeBannerWithSatisfiedDependencies","BrazeComponent","meta","idApiUrl","useEffect","logImpressionWithBraze","submitComponentEvent","component","componentType","id","dataFromBraze","ophanComponentId","componentName","action","div","logButtonClickWithBraze","brazeMessageProps","subscribeToNewsletter","async","newsletterId","fetch","method","body","JSON","stringify","subscribed","credentials","BrazeBanner","setBrazeComponent","useState","then","module","BrazeBannerComponent","catch","error","window","guardian","modules","sentry","reportError","buildPayload","isSignedIn","shouldHideReaderRevenue","isPaidContent","alreadyVisitedCount","engagementBannerLastClosedAt","subscriptionBannerLastClosedAt","signInBannerLastClosedAt","countryCode","optedOutOfArticleCount","asyncArticleCounts","sectionId","tags","contentType","articleCounts","weeklyArticleHistory","articleCountToday","latest","dailyArticleHistory","day","getToday","count","getArticleCountToday","browserId","getCookie","name","shouldMemoize","tracking","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","targeting","showSupportMessaging","shouldHideSupportMessaging","mvtId","Number","hasOptedOutOfArticleCount","modulesVersion","MODULES_VERSION","tagIds","map","tag","hasCmpConsentForBrowserId","undefined","purchaseInfo","getPurchaseInfo","lastOneOffContributionDate","getLastOneOffContributionDate","canShowRRBanner","remoteBannerConfig","asyncCountryCode","isMinuteArticle","isSensitive","contributionsServiceUrl","isPreview","signInGateWillShow","show","showSignInPrompt","hasForceBannerParam","search","includes","withinLocalNoBannerCachePeriod","bannerPayload","response","getBanner","data","setLocalNoBannerCachePeriod","fetchEmail","lazyFetchEmailWithTimeout","canShowPuzzlesBanner","section","isPuzzlesPage","some","type","title","getPuzzlesBanner","RemoteBanner","componentTypeName","displayEvent","Banner","setBanner","hasBeenSeen","setNode","useIsInView","threshold","debounce","useOnce","setAutomat","guardianPolyfilledImport","url","bannerModule","msg","String","console","log","Error","trackNonClickInteraction","ref","props","ReaderRevenueBanner","PuzzlesBanner","getBannerLastClosedAt","key","item","localStorage","getItem","parse","value","buildRRBannerConfigWith","BannerComponent","canShowFn","isEnabled","candidate","canShow","getAlreadyVisitedCount","timeoutMillis","buildBrazeBanner","brazeMessages","brazeArticleContext","forcedBrazeMeta","getBrazeMetaFromUrlFragment","suppressForTaylorReport","message","getMessageForBanner","internalButtonId","logButtonClick","logImpression","extras","e","canShowBrazeBanner","StickyBottomBanner","sectionName","pageId","keywordIds","remoteBannerSwitch","puzzleBannerSwitch","useBraze","getLocaleCode","SelectedBanner","setSelectedBanner","setAsyncArticleCounts","gateVariant","setGateVariant","currentTest","setCurrentTest","canShowGate","setCanShowGate","gateSelector","useSignInGateSelector","gateSelectorVariant","gateSelectorTest","gate","useSignInGateWillShow","getArticleCounts","bannerConfig","candidates","cmp","result","buildPuzzlesBannerConfig","buildReaderRevenueBannerConfig","pickMessage","PickedBanner","AlreadyVisitedKey","alreadyVisited","parseInt","isNaN","setAlreadyVisited","setItem","toString","incrementAlreadyVisited","indices","zIndex","index","indexOf","length","decideIndex"],"sourceRoot":""}