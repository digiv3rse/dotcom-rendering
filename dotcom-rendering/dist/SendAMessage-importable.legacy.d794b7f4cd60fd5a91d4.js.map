{"version":3,"file":"SendAMessage-importable.legacy.d794b7f4cd60fd5a91d4.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/Callout/FormField.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/vendor/icons/SvgMessageRound.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SendAMessage.importable.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/breakpoints/breakpoints.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/mq/mq.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components-development-kitchen/src/file-input/fileHelpers.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components-development-kitchen/src/file-input/theme.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components-development-kitchen/src/file-input/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components-development-kitchen/src/file-input/FileInput.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components-development-kitchen/src/summary/styles.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/src/select/Option.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-react-components/vendor/icons/SvgChevronUpSingle.tsx"],"sourcesContent":["import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { Checkbox, CheckboxGroup, Option, Radio, RadioGroup, Select, TextArea, TextInput, } from '@guardian/source-react-components';\nimport { FileInput } from '@guardian/source-react-components-development-kitchen';\nimport { useEffect, useRef } from 'react';\nexport const FormField = ({ formField, formData, setFieldInFormData, pageId, validationErrors, }) => {\n    const { type, label, hideLabel, description, required, id } = formField;\n    const name = `field_${type}_${id}`;\n    const fieldValue = formField.id in formData ? formData[formField.id] : '';\n    const fieldError = validationErrors[formField.id];\n    const firstUpdate = useRef(true);\n    useEffect(() => {\n        if (firstUpdate.current &&\n            formField.hidden &&\n            formField.type === 'text') {\n            setFieldInFormData(formField.id, pageId);\n            firstUpdate.current = false;\n        }\n    }, [formField, pageId, setFieldInFormData]);\n    switch (formField.type) {\n        case 'phone':\n        case 'email':\n        case 'text': {\n            if (formField.hidden)\n                return null;\n            return (_jsx(TextInput, { name: name, label: label, hideLabel: hideLabel, supporting: description, optional: !required, value: fieldValue, error: fieldError, \"data-testid\": `form-field-${formField.id}`, type: formField.type, onChange: (e) => setFieldInFormData(formField.id, e.target.value) }));\n        }\n        case 'textarea':\n            return (_jsx(TextArea, { name: name, label: label, hideLabel: hideLabel, supporting: description, optional: !required, value: fieldValue, error: fieldError, \"data-testid\": `form-field-${formField.id}`, onChange: (e) => setFieldInFormData(formField.id, e.target.value) }));\n        case 'file':\n            return (_jsx(FileInput, { label: label, hideLabel: hideLabel, supporting: description, optional: !required, error: fieldError, \"data-testid\": `form-field-${formField.id}`, onUpload: (file) => setFieldInFormData(formField.id, file) }));\n        case 'select':\n            return (_jsx(Select, { name: name, label: label, hideLabel: hideLabel, supporting: description, optional: !required, value: fieldValue, error: fieldError, \"data-testid\": `form-field-${formField.id}`, onChange: (e) => setFieldInFormData(formField.id, e.target.value), children: [\n                    {\n                        value: 'default',\n                        label: 'Please choose an option',\n                    },\n                ]\n                    .concat(formField.options)\n                    .map(({ value, label: formLabel }) => {\n                    return (_jsx(Option, { value: value, children: formLabel }, value));\n                }) }));\n        case 'checkbox':\n            return (_jsx(CheckboxGroup, { name: name, label: label, hideLabel: hideLabel, supporting: description, optional: !required, error: fieldError ? fieldError : undefined, \"data-testid\": `form-field-${formField.id}`, children: formField.options.map((option) => {\n                    const selectedCheckboxesArray = formData[formField.id] ?? [];\n                    const isCheckboxChecked = !!selectedCheckboxesArray.find((ele) => ele === option.value);\n                    const filterOutCheckboxFromArray = () => selectedCheckboxesArray.filter((ele) => ele !== option.value);\n                    const addCheckboxToArray = () => [\n                        ...selectedCheckboxesArray,\n                        option.value,\n                    ];\n                    return (_jsx(Checkbox, { name: name, label: option.label, value: option.value, checked: isCheckboxChecked, error: fieldError ? true : false, \"data-testid\": `form-field-${option.value}`, onChange: () => setFieldInFormData(id, isCheckboxChecked\n                            ? filterOutCheckboxFromArray()\n                            : addCheckboxToArray()) }, option.value));\n                }) }));\n        case 'radio':\n            return (_jsx(RadioGroup, { label: formField.label, supporting: formField.description, error: validationErrors[formField.id], name: formField.name, orientation: formField.options.length > 2 ? 'vertical' : 'horizontal', children: formField.options.map((option, index) => {\n                    return (_jsx(Radio, { \"data-testid\": `form-field-${option.value}`, label: option.label, value: option.value, name: `${formField.id}`, checked: formField.id in formData &&\n                            formData[formField.id] === option.value, onChange: (e) => setFieldInFormData(formField.id, e.target.value) }, index));\n                }) }));\n        default:\n            return null;\n    }\n};\n","// DO NOT EDIT\n// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { iconSize, visuallyHidden } from '@guardian/source-foundations';\nimport type { IconProps } from '../../src/@types/Icons';\n\nconst Svg = ({ size }: IconProps): EmotionJSX.Element => (\n\t<svg\n\t\twidth={size ? iconSize[size] : undefined}\n\t\theight={undefined}\n\t\tviewBox=\"-3 -3 30 30\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable={false}\n\t\taria-hidden={true}\n\t>\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10Zm3.336-14.444v1.27H7.558v-1.27h7.778Zm-2.699 2.54v1.27h-5.08v-1.27h5.08Zm3.81 2.539v1.27h-8.89v-1.27h8.89Zm-2.223 2.54v1.27H7.558v-1.27h6.666Z\"\n\t\t/>\n\t</svg>\n);\n\nexport const SvgMessageRound = ({\n\tsize,\n\tisAnnouncedByScreenReader = false,\n}: IconProps): EmotionJSX.Element => (\n\t<>\n\t\t<Svg size={size} />\n\t\t{isAnnouncedByScreenReader ? (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\tMessage\n\t\t\t</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</>\n);\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { focusHalo, from, neutral, palette, space, success, textSans, until, } from '@guardian/source-foundations';\nimport { Button, SvgChevronDownSingle, SvgChevronUpSingle, SvgMessageRound, SvgTickRound, } from '@guardian/source-react-components';\nimport { ErrorSummary } from '@guardian/source-react-components-development-kitchen';\nimport { useState } from 'react';\nimport { decidePalette } from '../lib/decidePalette';\nimport { FormField } from './Callout/FormField';\nconst CALLOUT_URL = 'https://callouts.code.dev-guardianapis.com/formstack-campaign/submit';\nconst containerStyles = (format) => css `\n\t${until.desktop} {\n\t\tbackground-color: ${decidePalette(format).background.messageForm};\n\t\tcolor: ${neutral[100]};\n\t}\n\tbackground-color: ${neutral[86]};\n\tpadding: ${space[3]}px;\n`;\nconst textStyles = css `\n\t${textSans.xsmall()};\n\tpadding-bottom: ${space[4]}px;\n`;\nconst successStyles = css `\n\t${textSans.xsmall()};\n\t${until.desktop} {\n\t\tcolor: ${neutral[100]};\n\t}\n`;\nconst tickBoxStyles = css `\n\tfill: ${success[400]};\n\twidth: ${space[12]}px;\n\tmargin-left: -${space[2]}px;\n`;\nconst errorTextStyles = css `\n\tcolor: ${palette.error[400]};\n\t${textSans.medium({ fontWeight: 'bold' })};\n\tdisplay: flex;\n\tpadding-bottom: ${space[2]}px;\n`;\nconst formStyles = css `\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n`;\nconst formFieldWrapperStyles = css `\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: ${space[4]}px;\n\t${until.desktop} {\n\t\tlabel > div,\n\t\tlabel > div > span {\n\t\t\tcolor: ${neutral[100]};\n\t\t}\n\t}\n`;\nconst submitButtonStyles = css `\n\tbackground-color: ${neutral[100]};\n\tcolor: ${neutral[0]};\n\t:hover,\n\t:active {\n\t\tbackground-color: ${neutral[86]};\n\t}\n\t${until.phablet} {\n\t\twidth: 100%;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t${until.desktop} {\n\t\talign-self: flex-start;\n\t}\n\t${from.desktop} {\n\t\tcolor: ${neutral[100]};\n\t\tbackground-color: ${neutral[7]};\n\t\talign-self: center;\n\t\t:hover,\n\t\t:active {\n\t\t\tbackground-color: ${neutral[20]};\n\t\t}\n\t}\n`;\nconst footerPaddingStyles = css `\n\tdisplay: flex;\n\tflex-direction: row;\n\t${until.desktop} {\n\t\tjustify-content: flex-start;\n\t}\n\tjustify-content: space-around;\n\tpadding-bottom: ${space[4]}px;\n`;\nconst prefaceStyles = css `\n\t${textSans.xsmall()};\n\tcolor: ${neutral[100]};\n\tpadding-bottom: ${space[4]}px;\n\t${from.desktop} {\n\t\tcolor: ${neutral[0]};\n\t}\n`;\nconst Form = ({ formFields, submissionURL, formId, format, pageId, }) => {\n    const [formData, setFormData] = useState({});\n    const [validationErrors, setValidationErrors] = useState({});\n    const [networkError, setNetworkError] = useState('');\n    const [submissionSuccess, setSubmissionSuccess] = useState(false);\n    const [twitterHandle, setTwitterHandle] = useState('');\n    const setFieldInFormData = (id, data) => {\n        const currentErrors = validationErrors;\n        currentErrors[id] = '';\n        setValidationErrors(currentErrors);\n        setFormData({\n            ...formData,\n            [id]: data,\n        });\n    };\n    const validateForm = () => {\n        const errors = {};\n        let isValid = true;\n        formFields.forEach((field) => {\n            if (field.required && !formData[field.id]) {\n                errors[field.id] = 'This field is required';\n                isValid = false;\n            }\n            if (field.type === 'email' && formData[field.id]) {\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (!emailRegex.test(formData[field.id])) {\n                    errors[field.id] = 'Please enter a valid email address';\n                    isValid = false;\n                }\n            }\n            if (['number', 'phone'].includes(field.type) &&\n                formData[field.id]) {\n                const numberRegex = /^[\\d ()+-]+$/;\n                if (!numberRegex.test(formData[field.id])) {\n                    errors[field.id] = 'Please enter a valid number';\n                    isValid = false;\n                }\n                const noWhiteSpace = formData[field.id];\n                if (noWhiteSpace.length < 10) {\n                    errors[field.id] = 'Please include your dialling/area code';\n                    isValid = false;\n                }\n                // We should have checks here for min length and max length - this work is ticketed here https://trello.com/c/7sYM6Zzd/822-add-validation-for-max-min-length-on-the-message-us-work\n            }\n            return isValid;\n        });\n        setValidationErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const submitForm = async (form) => {\n        setNetworkError('');\n        if (formData.twitterHandle) {\n            setNetworkError('Sorry we think you are a robot.');\n            return;\n        }\n        // need to add prefix `field_` to all keys in form, required by formstack\n        const formDataWithFieldPrefix = Object.keys(formData).reduce((acc, cur) => ({\n            ...acc,\n            [`field_${cur}`]: form[cur],\n        }), {});\n        return fetch(submissionURL, {\n            method: 'POST',\n            body: JSON.stringify({\n                formId,\n                ...formDataWithFieldPrefix,\n            }),\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        })\n            .then((resp) => {\n            if (resp.status === 201) {\n                setSubmissionSuccess(true);\n            }\n            else {\n                setNetworkError('Sorry, there was a problem submitting your form. Please try again later.');\n            }\n        })\n            .catch((respError) => {\n            window.guardian.modules.sentry.reportError(respError, 'message-us-submission');\n            setNetworkError('Sorry, there was a problem submitting your message. Please try again later.');\n        });\n    };\n    if (submissionSuccess) {\n        return (_jsxs(\"div\", { css: containerStyles(format), children: [_jsx(\"div\", { css: tickBoxStyles, children: _jsx(SvgTickRound, {}) }), _jsx(\"div\", { css: successStyles, children: \"Thank you for submitting your message.\" })] }));\n    }\n    return (_jsxs(\"div\", { css: containerStyles(format), children: [_jsxs(\"div\", { css: prefaceStyles, children: [_jsx(\"span\", { css: { fontWeight: 'bold' }, children: \"Please note: \" }), \"This is not a public comment \\u2013 only the Guardian can see your message. Our writers will monitor these messages and respond to some in this live blog, but unfortunately they will not be able to respond to every message.\"] }), _jsxs(\"form\", { css: formStyles, noValidate: true, onSubmit: (e) => {\n                    e.preventDefault();\n                    const isValid = validateForm();\n                    if (!isValid) {\n                        const firstInvalidFormElement = document.querySelectorAll(':invalid')[1];\n                        firstInvalidFormElement.focus();\n                        return;\n                    }\n                    void submitForm(formData);\n                }, children: [Object.values(validationErrors).filter((err) => err !== '')\n                        .length > 0 && (_jsx(ErrorSummary, { message: \"Some information is missing.\", context: \"Please complete all required fields.\", cssOverrides: css `\n\t\t\t\t\t\t\twidth: fit-content;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tmargin-bottom: ${space[4]}px;\n\t\t\t\t\t\t` })), formFields.map((formField) => (_jsx(\"div\", { css: formFieldWrapperStyles, children: _jsx(FormField, { formField: formField, formData: formData, setFieldInFormData: setFieldInFormData, validationErrors: validationErrors, pageId: pageId }) }, formField.id))), _jsx(\"div\", { css: textStyles, children: \"You must be 18 or over to fill in this form. We will only use this data for the purpose of improving our live blogs. For more information please read our terms of service and privacy policy. If you have something sensitive to share with us, contact the Guardian securely. By submitting your message, you are agreeing to share your details with us, which we may use in this blog.\" }), _jsx(\"div\", { css: css `\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tleft: -62.5rem;\n\t\t\t\t\t`, \"aria-hidden\": \"true\", children: _jsx(\"input\", { name: \"twitter-handle\", type: \"text\", id: \"twitter-handle\", tabIndex: -1, placeholder: \"@mytwitterhandle\", value: twitterHandle, onChange: (e) => setTwitterHandle(e.target.value) }) }), !!networkError && (_jsx(\"div\", { css: errorTextStyles, children: networkError })), _jsx(\"div\", { css: footerPaddingStyles, children: _jsx(Button, { type: \"submit\", cssOverrides: submitButtonStyles, children: \"Send to the Guardian\" }) })] })] }));\n};\nconst detailsStyles = css `\n\t&:not([open]) .is-open,\n\t&[open] .is-closed {\n\t\tdisplay: none;\n\t}\n\n\t&[open] summary {\n\t\ttext-decoration: underline;\n\t}\n\n\t/* removes toggle triangle from webkit browsers such as Safari */\n\tsummary::-webkit-details-marker {\n\t\tdisplay: none;\n\t}\n`;\nconst summaryStyles = css `\n\tcursor: pointer;\n\t&:focus {\n\t\t${focusHalo};\n\t}\n\t&:first-child {\n\t\tmargin-left: -4px;\n\t}\n\tpath {\n\t\t${until.desktop} {\n\t\t\tfill: white;\n\t\t}\n\t}\n\t.is-open,\n\t.is-closed {\n\t\tsvg {\n\t\t\theight: ${space[3]}px;\n\t\t}\n\t}\n\t${textSans.small({ fontWeight: 'bold' })};\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: ${space[2]}px;\n\t${until.desktop} {\n\t\tcolor: white;\n\t}\n`;\n/**\n * # Send a Message Component\n *\n * A callout for readers to get in touch with a liveblogger directly.\n *\n * ## Why does this need to be an Island?\n *\n * We are responding to user interactions on the page,\n * and submitting a form.\n *\n */\nexport const SendAMessage = ({ formFields, formId, format, pageId }) => {\n    return (_jsxs(\"details\", { css: detailsStyles, children: [_jsxs(\"summary\", { css: summaryStyles, children: [_jsx(SvgMessageRound, { size: \"medium\" }), \"Send us a message\", _jsx(\"span\", { className: \"is-open\", children: _jsx(SvgChevronUpSingle, { size: \"xsmall\" }) }), _jsx(\"span\", { className: \"is-closed\", children: _jsx(SvgChevronDownSingle, { size: \"xsmall\" }) })] }), _jsx(Form, { formFields: formFields, submissionURL: CALLOUT_URL, formId: formId, format: format, pageId: pageId })] }));\n};\n","export type Breakpoint =\n\t| 'mobile'\n\t| 'mobileMedium'\n\t| 'mobileLandscape'\n\t| 'phablet'\n\t| 'tablet'\n\t| 'desktop'\n\t| 'leftCol'\n\t| 'wide';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page) •\n * [Design System](https://theguardian.design/2a1e5182b/p/41be19-grids)\n */\nexport const breakpoints = {\n\tmobile: 320,\n\tmobileMedium: 375,\n\tmobileLandscape: 480,\n\tphablet: 660,\n\ttablet: 740,\n\tdesktop: 980,\n\tleftCol: 1140,\n\twide: 1300,\n} as const;\n","import { breakpoints } from '../breakpoints/breakpoints';\nimport type { Breakpoint } from '../breakpoints/breakpoints';\n\nexport type BreakpointMap = {\n\t[key in Breakpoint]: string;\n};\n\nconst minWidth = (from: number): string => `@media (min-width: ${`${from}px`})`;\n\nconst maxWidth = (until: number): string =>\n\t`@media (max-width: ${`${until - 1}px`})`;\n\nconst minWidthMaxWidth = (from: number, until: number): string =>\n\t`@media (min-width: ${`${from}px`}) and (max-width: ${`${until - 1}px`})`;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#from)\n *\n * @example\n *\tconst styles = css`\n *\t\t${from.mobileLandscape} {\n *\t\t\tpadding: 0 20px;\n *\t\t}\n * `;\n */\nexport const from: BreakpointMap = {\n\tmobile: minWidth(breakpoints.mobile),\n\tmobileMedium: minWidth(breakpoints.mobileMedium),\n\tmobileLandscape: minWidth(breakpoints.mobileLandscape),\n\tphablet: minWidth(breakpoints.phablet),\n\ttablet: minWidth(breakpoints.tablet),\n\tdesktop: minWidth(breakpoints.desktop),\n\tleftCol: minWidth(breakpoints.leftCol),\n\twide: minWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#until)\n *\n * @example\n *\tconst styles = css`\n *\t\t${until.wide} {\n *\t\t\tpadding: 0 40px;\n *\t\t}\n * `;\n */\nexport const until: BreakpointMap = {\n\tmobile: maxWidth(breakpoints.mobile),\n\tmobileMedium: maxWidth(breakpoints.mobileMedium),\n\tmobileLandscape: maxWidth(breakpoints.mobileLandscape),\n\tphablet: maxWidth(breakpoints.phablet),\n\ttablet: maxWidth(breakpoints.tablet),\n\tdesktop: maxWidth(breakpoints.desktop),\n\tleftCol: maxWidth(breakpoints.leftCol),\n\twide: maxWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#betweenand)\n *\n * @example\n *\tconst styles = css`\n *\t\t${between.phablet.and.desktop} {\n *\t\t\tpadding: 0 32px;\n *\t\t}\n * `;\n */\nexport const between = {\n\tmobile: {\n\t\tand: {\n\t\t\tmobileMedium: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t),\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileMedium: {\n\t\tand: {\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileLandscape: {\n\t\tand: {\n\t\t\tphablet: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.phablet,\n\t\t\t),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.desktop,\n\t\t\t),\n\t\t\tleftCol: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.leftCol,\n\t\t\t),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide),\n\t\t},\n\t},\n\tphablet: {\n\t\tand: {\n\t\t\ttablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide),\n\t\t},\n\t},\n\ttablet: {\n\t\tand: {\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide),\n\t\t},\n\t},\n\tdesktop: {\n\t\tand: {\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide),\n\t\t},\n\t},\n\tleftCol: {\n\t\tand: {\n\t\t\twide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide),\n\t\t},\n\t},\n};\n","export const stringifyFileBase64 = (file: File): Promise<string> =>\n\tnew Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener(\n\t\t\t'load',\n\t\t\t() => {\n\t\t\t\t// remove data:*/*;base64, from the start of the base64 string\n\t\t\t\tconst fileAsBase64 = reader.result?.toString().split(';base64,')[1];\n\n\t\t\t\tif (fileAsBase64) {\n\t\t\t\t\tresolve(fileAsBase64);\n\t\t\t\t} else {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error('Sorry there was a problem with the file you uploaded.'),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t\treader.addEventListener('error', () => {\n\t\t\treject(\n\t\t\t\tnew Error(\n\t\t\t\t\t'Sorry there was a problem with the file you uploaded above.',\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\t\treader.readAsDataURL(file);\n\t});\n\nexport const getReadableFileSize = (bytes: number) => {\n\tif (bytes < 1024) {\n\t\treturn `${bytes} bytes`;\n\t} else if (bytes >= 1024 && bytes < 1048576) {\n\t\treturn `${(bytes / 1024).toFixed(1)} KB`;\n\t}\n\treturn `${(bytes / 1048576).toFixed(1)} MB`;\n};\n","import type { Theme as EmotionTheme } from '@emotion/react';\nimport { palette } from '@guardian/source-foundations';\n\nexport const fileInputThemeDefault = {\n\tfileInput: {\n\t\ttext: palette.brand[400],\n\t\tsupporting: palette.neutral[46],\n\t\tprimary: palette.neutral[7],\n\t\terror: palette.error[400],\n\t\tbackgroundHover: '#E5E5E5', // One-off colour variant to match tertiary button\n\t\ttextHover: palette.neutral[7],\n\t},\n};\n\nexport const fileInputDarkTheme = {\n\tfileInput: {\n\t\ttext: palette.neutral[86],\n\t\tsupporting: palette.neutral[60],\n\t\tprimary: palette.neutral[86],\n\t\terror: palette.error[500],\n\t\tbackgroundHover: palette.neutral[86],\n\t\ttextHover: palette.neutral[7],\n\t},\n};\n\nexport interface Theme extends EmotionTheme {\n\tfileInput?: typeof fileInputThemeDefault.fileInput;\n}\n","import { css } from '@emotion/react';\nimport type { SerializedStyles } from '@emotion/react';\nimport {\n\tfocusHalo,\n\tfontWeights,\n\theight,\n\tremHeight,\n\tremSpace,\n\tspace,\n\ttextSans,\n} from '@guardian/source-foundations';\nimport { fileInputThemeDefault } from './theme';\nimport type { Size as SizeType } from './types';\n\nexport const fileName = (\n\tfileInput = fileInputThemeDefault.fileInput,\n): SerializedStyles => css`\n\tcolor: ${fileInput.supporting};\n`;\n\nconst defaultUpload = css`\n\tpadding: ${remSpace[3]};\n\tborder-radius: ${height.ctaMedium}px;\n\tfont-weight: ${fontWeights.bold};\n`;\nconst smallUpload = css`\n\tpadding: ${remSpace[3]};\n\tborder-radius: ${height.ctaSmall}px;\n\tfont-weight: ${fontWeights.bold};\n`;\n\nconst xsmallUpload = css`\n\tpadding: 0 ${space[3]}px;\n\tpadding: ${remSpace[3]};\n\tborder-radius: ${height.ctaXsmall}px;\n\tfont-weight: ${fontWeights.bold};\n`;\n\nexport const uploadSizes: {\n\t[key in SizeType]: SerializedStyles;\n} = {\n\tdefault: defaultUpload,\n\tsmall: smallUpload,\n\txsmall: xsmallUpload,\n};\n\nexport const fontSizes: {\n\t[key in SizeType]: SerializedStyles;\n} = {\n\tdefault: css`\n\t\t${textSans.medium()};\n\t`,\n\tsmall: css`\n\t\t${textSans.small()};\n\t`,\n\txsmall: css`\n\t\t${textSans.xsmall()};\n\t`,\n};\n\nexport const customUpload = (\n\tfileInput = fileInputThemeDefault.fileInput,\n\thasError = false,\n): SerializedStyles => css`\n\tcolor: ${fileInput.text};\n\tdisplay: inline-flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tbackground: transparent;\n\tcursor: pointer;\n\ttext-decoration: none;\n\twhite-space: nowrap;\n\tmargin: ${remSpace[2]} ${remSpace[2]} ${remSpace[2]} 0;\n\theight: ${remHeight.ctaXsmall}rem;\n\tmin-height: ${remHeight.ctaXsmall}rem;\n\tborder-radius: ${remHeight.ctaMedium}rem;\n\tcolor: ${fileInput.primary};\n\tborder: ${hasError\n\t\t? `4px solid ${fileInput.error}`\n\t\t: `1px solid ${fileInput.primary}`};\n\n\t&:focus-within,\n\t&:focus {\n\t\t${focusHalo};\n\t}\n\t&:hover {\n\t\tcolor: ${fileInput.textHover};\n\t\tbackground-color: ${fileInput.backgroundHover};\n\t}\n`;\n","import { css } from '@emotion/react';\nimport { visuallyHidden } from '@guardian/source-foundations';\nimport { InlineError, Label } from '@guardian/source-react-components';\nimport { useState } from 'react';\nimport type { FC } from 'react';\nimport { getReadableFileSize, stringifyFileBase64 } from './fileHelpers';\nimport {\n\tcustomUpload,\n\tfileName as fileNameStyle,\n\tfontSizes,\n\tuploadSizes,\n} from './styles';\nimport type { Theme } from './theme';\nimport type { FileInputProps } from './types';\n\nexport type { FileInputProps } from './types';\n\nexport const FileInput: FC<FileInputProps> = ({\n\tid,\n\tlabel,\n\toptional,\n\thideLabel,\n\tsupporting,\n\terror,\n\tonError,\n\tonUpload,\n\tcssOverrides,\n\tvalidFileTypes = ['image/png', 'image/jpeg', 'image/jpg'],\n\tmaxFileSize,\n\tsize = 'default',\n\t...props\n}) => {\n\tconst [fileName, setFileName] = useState<null | string>();\n\tconst [uploadError, setUploadError] = useState<undefined | string>();\n\n\tconst errorText = error ?? uploadError;\n\n\tconst onSelectFile = async (\n\t\tevent: React.ChangeEvent<HTMLInputElement>,\n\t): Promise<void> => {\n\t\tsetUploadError(undefined);\n\t\tconst file = event.target.files?.[0];\n\t\tif (!file) return;\n\n\t\tif (!validFileTypes.includes(file.type)) {\n\t\t\tconst typeErrorMessage = `Sorry there was a problem with the file you uploaded. We accept ${validFileTypes.join(\n\t\t\t\t', ',\n\t\t\t)}`;\n\t\t\tsetUploadError(typeErrorMessage);\n\t\t\treturn;\n\t\t}\n\n\t\tif (maxFileSize && file.size > maxFileSize) {\n\t\t\tconst sizeErrorMessage = `Sorry there was a problem with the file you uploaded. The max file size is ${getReadableFileSize(\n\t\t\t\tmaxFileSize,\n\t\t\t)}`;\n\t\t\tsetUploadError(sizeErrorMessage);\n\t\t\treturn;\n\t\t}\n\n\t\tsetFileName(file.name);\n\t\ttry {\n\t\t\tconst stringifiedFile = await stringifyFileBase64(file);\n\t\t\tonUpload?.(stringifiedFile);\n\t\t} catch (e) {\n\t\t\tconst error =\n\t\t\t\te instanceof Error\n\t\t\t\t\t? e\n\t\t\t\t\t: new Error('There was a problem uploading the file');\n\t\t\tonError?.(error);\n\t\t}\n\t};\n\n\tconst onRemoveFile = (): void => {\n\t\tsetFileName(undefined);\n\t\tonUpload?.(undefined);\n\t};\n\n\treturn (\n\t\t<div css={[cssOverrides, fontSizes[size]]}>\n\t\t\t<Label\n\t\t\t\tid={id}\n\t\t\t\tkey={id}\n\t\t\t\ttext={label}\n\t\t\t\tsupporting={supporting}\n\t\t\t\toptional={optional}\n\t\t\t\thideLabel={hideLabel}\n\t\t\t\tcssOverrides={fontSizes[size]}\n\t\t\t>\n\t\t\t\t{!!errorText && <InlineError>{errorText}</InlineError>}\n\t\t\t\t<div\n\t\t\t\t\tcss={[\n\t\t\t\t\t\t(theme: Theme) => customUpload(theme.fileInput, !!errorText),\n\t\t\t\t\t\tuploadSizes[size],\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{fileName ? 'Change file' : 'Choose file'}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept={validFileTypes.join(',')}\n\t\t\t\t\t\tcss={css`\n\t\t\t\t\t\t\t${visuallyHidden}\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tonChange={(e) => void onSelectFile(e)}\n\t\t\t\t\t\trequired={!optional}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Label>\n\t\t\t{fileName && (\n\t\t\t\t<>\n\t\t\t\t\t{optional && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tcss={[\n\t\t\t\t\t\t\t\t(theme: Theme) => customUpload(theme.fileInput),\n\t\t\t\t\t\t\t\tfontSizes[size],\n\t\t\t\t\t\t\t\tuploadSizes[size],\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonClick={onRemoveFile}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove file\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t<span css={(theme: Theme) => fileNameStyle(theme.fileInput)}>\n\t\t\t\t\t\t{fileName}\n\t\t\t\t\t</span>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","import type { SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { size, space, textSans } from '@guardian/source-foundations';\n\nexport const wrapperStyles = (color: string): SerializedStyles => css`\n\tborder: 4px solid ${color};\n\tpadding: ${space[1]}px;\n\n\tdisplay: flex;\n`;\n\nexport const iconStyles = (color: string): SerializedStyles => css`\n\tdisplay: flex;\n\tflex: 0 1 auto;\n\tmargin-top: 1px;\n\tsvg {\n\t\tfill: ${color};\n\t\theight: ${size.xsmall}px;\n\t\twidth: ${size.xsmall}px;\n\t}\n`;\n\nexport const messageStyles = (\n\tcolor: string,\n\tisBold = true,\n): SerializedStyles => css`\n\t${textSans.medium({\n\t\tfontWeight: isBold ? 'bold' : 'regular',\n\t\tlineHeight: 'loose',\n\t})}\n\tcolor: ${color};\n`;\n\nexport const messageWrapperStyles = css`\n\tmargin-left: ${space[1]}px;\n`;\n\nexport const contextStyles = css`\n\t${textSans.medium()}\n`;\n","import type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport type { OptionHTMLAttributes } from 'react';\nimport type { Props } from '../@types/Props';\n\nexport interface OptionProps\n\textends OptionHTMLAttributes<HTMLOptionElement>,\n\t\tProps {\n\tchildren: string;\n}\n\nexport const Option = ({\n\tcssOverrides,\n\tchildren,\n\t...props\n}: OptionProps): EmotionJSX.Element => {\n\treturn (\n\t\t<option css={cssOverrides} {...props}>\n\t\t\t{children}\n\t\t</option>\n\t);\n};\n","// DO NOT EDIT\n// this file is auto-generated by packages/@guardian/source-react-components/scripts/create-icons/index.ts\nimport { css } from '@emotion/react';\nimport type { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { iconSize, visuallyHidden } from '@guardian/source-foundations';\nimport type { IconProps } from '../../src/@types/Icons';\n\nconst Svg = ({ size }: IconProps): EmotionJSX.Element => (\n\t<svg\n\t\twidth={size ? iconSize[size] : undefined}\n\t\theight={undefined}\n\t\tviewBox=\"-3 -3 30 30\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable={false}\n\t\taria-hidden={true}\n\t>\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M23 16.768 12.502 6.27h-1.004L1 16.768l.98.954L12 9.284l10.02 8.438.98-.954Z\"\n\t\t/>\n\t</svg>\n);\n\nexport const SvgChevronUpSingle = ({\n\tsize,\n\tisAnnouncedByScreenReader = false,\n}: IconProps): EmotionJSX.Element => (\n\t<>\n\t\t<Svg size={size} />\n\t\t{isAnnouncedByScreenReader ? (\n\t\t\t<span\n\t\t\t\tcss={css`\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\tCollapse to show less\n\t\t\t</span>\n\t\t) : (\n\t\t\t''\n\t\t)}\n\t</>\n);\n"],"names":["FormField","formField","formData","setFieldInFormData","pageId","validationErrors","type","label","hideLabel","description","required","id","name","fieldValue","fieldError","firstUpdate","useRef","useEffect","current","hidden","_jsx","TextInput","supporting","optional","value","error","onChange","e","target","TextArea","FileInput","onUpload","file","Select","children","concat","options","map","formLabel","Option","CheckboxGroup","undefined","option","selectedCheckboxesArray","isCheckboxChecked","find","ele","Checkbox","checked","filter","RadioGroup","orientation","length","index","Radio","SvgMessageRound","isAnnouncedByScreenReader","jsxs","Fragment","css","visuallyHidden","containerStyles","format","until","decidePalette","background","messageForm","neutral","space","textStyles","textSans","successStyles","tickBoxStyles","success","errorTextStyles","palette","fontWeight","formStyles","formFieldWrapperStyles","submitButtonStyles","from","footerPaddingStyles","prefaceStyles","Form","formFields","submissionURL","formId","useState","setFormData","setValidationErrors","networkError","setNetworkError","submissionSuccess","setSubmissionSuccess","twitterHandle","setTwitterHandle","data","currentErrors","submitForm","form","formDataWithFieldPrefix","Object","keys","reduce","acc","cur","fetch","method","body","JSON","stringify","headers","then","resp","status","catch","respError","window","guardian","modules","sentry","reportError","_jsxs","SvgTickRound","noValidate","onSubmit","errors","isValid","preventDefault","forEach","field","test","includes","document","querySelectorAll","focus","values","err","ErrorSummary","message","context","cssOverrides","tabIndex","placeholder","Button","detailsStyles","summaryStyles","focusHalo","SendAMessage","size","className","SvgChevronUpSingle","SvgChevronDownSingle","breakpoints","mobile","mobileMedium","mobileLandscape","phablet","tablet","desktop","leftCol","wide","maxWidth","minWidthMaxWidth","minWidth","and","stringifyFileBase64","Promise","resolve","reject","reader","FileReader","addEventListener","fileAsBase64","result","toString","split","Error","readAsDataURL","fileInput","text","primary","backgroundHover","textHover","uploadSizes","default","defaultUpload","remSpace","height","fontWeights","small","smallUpload","xsmall","xsmallUpload","fontSizes","customUpload","remHeight","hasError","fileName$1","setFileName","fileName","setUploadError","errorText","onSelectFile","event","files","validFileTypes","typeErrorMessage","maxFileSize","sizeErrorMessage","bytes","getReadableFileSize","toFixed","stringifiedFile","onError","theme","onRemoveFile","iconStyles","messageStyles","lineHeight","color","messageWrapperStyles","contextStyles","jsx","props","Svg"],"sourceRoot":""}