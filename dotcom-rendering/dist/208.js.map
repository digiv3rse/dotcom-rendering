{"version":3,"file":"208.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/cookies/setCookie.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/cookies/removeCookie.js","webpack://@guardian/dotcom-rendering/./src/web/lib/readerRevenueDevUtils.ts"],"sourcesContent":["import { ERR_INVALID_COOKIE } from './ERR_INVALID_COOKIE.js';\nimport { getCookieValues } from './getCookieValues.js';\nimport { getDomainAttribute } from './getDomainAttribute.js';\nimport { isValidCookie } from './isValidCookie.js';\nimport { memoizedCookies } from './memoizedCookies.js';\n\n/**\n * Set a cookie. If it's been memoized it will replace it's memoized value\n * @param details Details about the cookie.\n * @param details.name - the cookie’s name.\n * @param details.value - the cookie’s value.\n * @param details.daysToLive - optional expiry date will be calculated based on the daysToLive\n * @param details.isCrossSubdomain - specify if it's a cross subdomain cookie, default false\n */\nconst setCookie = ({ name, value, daysToLive, isCrossSubdomain = false, }) => {\n    const expires = new Date();\n    if (!isValidCookie(name, value)) {\n        throw new Error(`${ERR_INVALID_COOKIE} ${name}=${value}`);\n    }\n    if (daysToLive) {\n        expires.setUTCDate(expires.getUTCDate() + daysToLive);\n    }\n    else {\n        expires.setUTCMonth(expires.getUTCMonth() + 5);\n        expires.setUTCDate(1);\n    }\n    document.cookie = `${name}=${value}; path=/; expires=${expires.toUTCString()};${getDomainAttribute({\n        isCrossSubdomain,\n    })}`;\n    // If the cookie is already memoized we want to replace its value\n    if (memoizedCookies.has(name)) {\n        const [value] = getCookieValues(name);\n        if (value) {\n            memoizedCookies.set(name, value);\n        }\n    }\n};\n\nexport { setCookie };\n//# sourceMappingURL=setCookie.js.map\n","import { getShortDomain } from './getShortDomain.js';\n\n/**\n * Removes a cookie.\n * @param details Details about the cookie.\n * @param details.name - the cookie’s name.\n * @param details.currentDomainOnly - set to true if it's only for current domain\n */\nconst removeCookie = ({ name, currentDomainOnly = false, }) => {\n    const expires = 'expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    const path = 'path=/;';\n    // Remove cookie, implicitly using the document's domain.\n    document.cookie = `${name}=;${path}${expires}`;\n    if (!currentDomainOnly) {\n        // also remove from the short domain\n        document.cookie = `${name}=;${path}${expires} domain=${getShortDomain()};`;\n    }\n};\n\nexport { removeCookie };\n//# sourceMappingURL=removeCookie.js.map\n","import { getCookie, removeCookie, setCookie, storage } from '@guardian/libs';\nimport { setAlreadyVisited } from './alreadyVisited';\nimport {\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n} from './contributions';\nimport { getLocaleCode } from './getCountryCode';\n\nconst readerRevenueCookies = [\n\tHIDE_SUPPORT_MESSAGING_COOKIE,\n\tRECURRING_CONTRIBUTOR_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n\tSUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n\tSUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n];\n\nconst clearEpicViewLog = (): void =>\n\tlocalStorage.removeItem('gu.contributions.views');\n\nconst clearBannerLastClosedAt = (): void => {\n\tlocalStorage.removeItem('gu.prefs.engagementBannerLastClosedAt');\n\tlocalStorage.removeItem('gu.prefs.subscriptionBannerLastClosedAt');\n\tlocalStorage.removeItem('gu.noRRBannerTimestamp');\n};\n\nconst fakeOneOffContributor = (): void =>\n\tsetCookie({\n\t\tname: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n\t\tvalue: Date.now().toString(),\n\t});\n\nconst MULTIVARIATE_ID_COOKIE = 'GU_mvt_id';\nconst MAX_CLIENT_MVT_ID = 1000000;\nconst incrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === MAX_CLIENT_MVT_ID) {\n\t\t\t// Wrap back to 1 if it would exceed the max\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: '1' });\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId + 1}` });\n\t\t}\n\t}\n};\nconst decrementMvtCookie = (): void => {\n\tconst mvtId = parseInt(\n\t\tgetCookie({ name: MULTIVARIATE_ID_COOKIE }) ?? '10',\n\t\t10,\n\t);\n\tif (mvtId) {\n\t\tif (mvtId === 0) {\n\t\t\t// Wrap back to max if it would be less than 0\n\t\t\tsetCookie({\n\t\t\t\tname: MULTIVARIATE_ID_COOKIE,\n\t\t\t\tvalue: MAX_CLIENT_MVT_ID.toString(),\n\t\t\t});\n\t\t} else {\n\t\t\tsetCookie({ name: MULTIVARIATE_ID_COOKIE, value: `${mvtId - 1}` });\n\t\t}\n\t}\n};\n\nconst clearCommonReaderRevenueStateAndReload = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tif (shouldHideReaderRevenue) {\n\t\talert(\n\t\t\t'This page has \"Prevent membership/contribution appeals\" ticked in Composer. Please try a different page',\n\t\t);\n\t\treturn;\n\t}\n\n\treaderRevenueCookies.forEach((cookie) => removeCookie({ name: cookie }));\n\tclearEpicViewLog();\n\n\tif (asExistingSupporter) {\n\t\tfakeOneOffContributor();\n\t}\n\n\twindow.location.reload();\n};\n\nconst showMeTheEpic = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showMeTheBanner = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tclearBannerLastClosedAt();\n\tsetAlreadyVisited(2);\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showNextVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tincrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst showPreviousVariant = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tdecrementMvtCookie();\n\tclearCommonReaderRevenueStateAndReload(\n\t\tasExistingSupporter,\n\t\tshouldHideReaderRevenue,\n\t);\n};\n\nconst changeGeolocation = (\n\tasExistingSupporter = false,\n\tshouldHideReaderRevenue: boolean,\n): void => {\n\tgetLocaleCode()\n\t\t.then((current) => {\n\t\t\tconst geo = window.prompt(\n\t\t\t\t`Enter two-letter geolocation code (e.g. GB, US, AU). Current is ${\n\t\t\t\t\tcurrent ?? 'null'\n\t\t\t\t}.`,\n\t\t\t);\n\t\t\tif (geo === 'UK') {\n\t\t\t\talert(\n\t\t\t\t\t`'UK' is not a valid geolocation - please use 'GB' instead!`,\n\t\t\t\t);\n\t\t\t} else if (geo) {\n\t\t\t\tstorage.local.set('gu.geo.override', geo);\n\t\t\t\tclearCommonReaderRevenueStateAndReload(\n\t\t\t\t\tasExistingSupporter,\n\t\t\t\t\tshouldHideReaderRevenue,\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.error(`changeGeolocation - error: ${String(e)}`);\n\t\t});\n};\n\ntype ReaderRevenueDevUtil = (\n\tasExistingSupporter: boolean,\n\tshouldHideReaderRevenue: boolean,\n) => void;\nexport interface ReaderRevenueDevUtils {\n\tchangeGeolocation: ReaderRevenueDevUtil;\n\tshowMeTheEpic: ReaderRevenueDevUtil;\n\tshowMeTheBanner: ReaderRevenueDevUtil;\n\tshowNextVariant: ReaderRevenueDevUtil;\n\tshowPreviousVariant: ReaderRevenueDevUtil;\n}\n\nconst getForcedVariant = (type: 'epic' | 'banner'): string | null => {\n\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety in global,\n\tif (URLSearchParams) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tconst value = params.get(`force-${type}`);\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport {\n\tchangeGeolocation,\n\tshowMeTheEpic,\n\tshowMeTheBanner,\n\tshowNextVariant,\n\tshowPreviousVariant,\n\tgetForcedVariant,\n};\n"],"names":["ERR_INVALID_COOKIE","getCookieValues","getDomainAttribute","isValidCookie","memoizedCookies","setCookie","name","value","daysToLive","isCrossSubdomain","expires","Date","Error","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","document","cookie","toUTCString","has","set","getShortDomain","removeCookie","currentDomainOnly","path","getCookie","storage","setAlreadyVisited","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE","getLocaleCode","readerRevenueCookies","clearEpicViewLog","localStorage","removeItem","clearBannerLastClosedAt","fakeOneOffContributor","now","toString","MULTIVARIATE_ID_COOKIE","MAX_CLIENT_MVT_ID","incrementMvtCookie","mvtId","parseInt","decrementMvtCookie","clearCommonReaderRevenueStateAndReload","asExistingSupporter","shouldHideReaderRevenue","alert","forEach","window","location","reload","showMeTheEpic","showMeTheBanner","showNextVariant","showPreviousVariant","changeGeolocation","then","current","geo","prompt","local","catch","e","console","error","String","getForcedVariant","type","URLSearchParams","params","search","get"],"sourceRoot":""}