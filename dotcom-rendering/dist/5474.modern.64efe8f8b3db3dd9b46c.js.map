{"version":3,"file":"5474.modern.64efe8f8b3db3dd9b46c.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/@guardian/libs/esm/format/ArticleDisplay.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/label/Label.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/text-input/theme.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/text-input/styles.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/text-input/TextInput.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/src/user-feedback/InlineSuccess.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-react-components/esm/vendor/icons/SvgTickRound.js"],"sourcesContent":["var ArticleDisplay;\n(function (ArticleDisplay) {\n    ArticleDisplay[ArticleDisplay[\"Standard\"] = 0] = \"Standard\";\n    ArticleDisplay[ArticleDisplay[\"Immersive\"] = 1] = \"Immersive\";\n    ArticleDisplay[ArticleDisplay[\"Showcase\"] = 2] = \"Showcase\";\n    ArticleDisplay[ArticleDisplay[\"NumberedList\"] = 3] = \"NumberedList\";\n})(ArticleDisplay || (ArticleDisplay = {}));\n\nexport { ArticleDisplay };\n//# sourceMappingURL=ArticleDisplay.js.map\n","import { jsxs, jsx } from '@emotion/react/jsx-runtime';\nimport { SupportingText } from './SupportingText.js';\nimport { Text } from './Text.js';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_label--default-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/40151e-label/b/86af7d) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/label/Label.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * A label describes a user input field.\n *\n * Label is used by other Source components, such as TextInput. Only use Label\n * if you are building your own form components.\n *\n * The following themes are supported: `light`, `brand`.\n * */\nconst Label = ({ text, supporting, optional = false, hideLabel = false, cssOverrides, children, ...props }) => {\n    return (jsxs(\"label\", { css: cssOverrides, ...props, children: [jsx(Text, { hideLabel: hideLabel, text: text, optional: optional }), supporting ? (jsx(SupportingText, { hideLabel: hideLabel, children: supporting })) : (''), children] }));\n};\n\nexport { Label };\n//# sourceMappingURL=Label.js.map\n","import { palette } from '@guardian/source-foundations';\nimport { userFeedbackThemeDefault } from '../user-feedback/theme.js';\n\nconst textInputThemeDefault = {\n    textInput: {\n        textUserInput: palette.neutral[7],\n        textLabel: palette.neutral[7],\n        textLabelOptional: palette.neutral[46],\n        textLabelSupporting: palette.neutral[46],\n        textError: palette.neutral[7],\n        textSuccess: palette.success[400],\n        backgroundInput: palette.neutral[100],\n        border: palette.neutral[46],\n        borderActive: palette.focus[400],\n        borderError: palette.error[400],\n        borderSuccess: palette.success[400],\n    },\n    ...userFeedbackThemeDefault,\n};\n\nexport { textInputThemeDefault };\n//# sourceMappingURL=theme.js.map\n","import { css } from '@emotion/react';\nimport { space, height, textSans, focusHalo } from '@guardian/source-foundations';\nimport { textInputThemeDefault } from './theme.js';\n\nconst errorInput = (textInput = textInputThemeDefault.textInput) => css `\n\tborder: 4px solid ${textInput.borderError};\n\tcolor: ${textInput.textError};\n\tmargin-top: 0;\n`;\nconst successInput = (textInput = textInputThemeDefault.textInput) => css `\n\tborder: 4px solid ${textInput.borderSuccess};\n\tcolor: ${textInput.textSuccess};\n\tmargin-top: 0;\n`;\nconst textInput = (textInput = textInputThemeDefault.textInput) => css `\n\t\tbox-sizing: border-box;\n\t\theight: ${height.inputMedium}px;\n\t\t${textSans.medium()};\n\t\tcolor: ${textInput.textUserInput};\n\t\tbackground-color: ${textInput.backgroundInput};\n\t\tborder: 2px solid ${textInput.border};\n\t\tpadding: 0 ${space[2]}px;\n\n\t\t&:focus {\n\t\t\tborder: 2px solid ${textInput.borderActive};\n\t\t\t${focusHalo};\n\t\t}\n\n\t\t&:invalid {\n\t\t\t/* Remove styling of invalid input elements that gets applied in Firefox */\n\t\t\tbox-shadow: none;\n\n\t\t\t/*\n\t\t\tWe automatically apply error styling to fields in an invalid state,\n\t\t\tbut stop short of applying it to empty required fields.\n\t\t\t*/\n\t\t\t&[value]:not([value='']) {\n\t\t\t\t${errorInput(textInput)};\n\t\t\t}\n\t\t}\n\t`;\nconst labelMargin = css `\n\tmargin-top: ${space[1]}px;\n`;\nconst supportingTextMargin = css `\n\tmargin-top: 6px;\n`;\nconst inlineMessageMargin = css `\n\tmargin-top: 2px;\n`;\nconst widthFluid = css `\n\twidth: 100%;\n`;\nconst width30 = css `\n\twidth: 40ex;\n\tmax-width: 100%; /* prevent overflow on narrow viewports */\n`;\nconst width10 = css `\n\twidth: 18ex;\n`;\nconst width4 = css `\n\twidth: 9ex;\n`;\n\nexport { errorInput, inlineMessageMargin, labelMargin, successInput, supportingTextMargin, textInput, width10, width30, width4, widthFluid };\n//# sourceMappingURL=styles.js.map\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { generateSourceId, descriptionId } from '@guardian/source-foundations';\nimport { Label } from '../label/Label.js';\nimport { InlineError } from '../user-feedback/InlineError.js';\nimport { InlineSuccess } from '../user-feedback/InlineSuccess.js';\nimport { inlineMessageMargin, widthFluid, textInput, supportingTextMargin, labelMargin, errorInput, successInput, width30, width10, width4 } from './styles.js';\n\nconst widths = {\n    30: width30,\n    10: width10,\n    4: width4,\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_textinput--default-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/097455-text-input-field/b/050445) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/text-input/TextInput.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Single line fields that allow users to enter freeform data.\n *\n * The following themes are supported: `light`\n */\nconst TextInput = ({ id, label: labelText, optional = false, hideLabel = false, supporting, width, error, success, cssOverrides, ...props }) => {\n    const textInputId = id ?? generateSourceId();\n    return (jsxs(Fragment, { children: [jsxs(Label, { text: labelText, optional: !!optional, hideLabel: hideLabel, supporting: supporting, htmlFor: textInputId, children: [error && (jsx(\"div\", { css: inlineMessageMargin, children: jsx(InlineError, { id: descriptionId(textInputId), children: error }) })), !error && success && (jsx(\"div\", { css: inlineMessageMargin, children: jsx(InlineSuccess, { id: descriptionId(textInputId), children: success }) }))] }), jsx(\"input\", { css: (theme) => [\n                    width ? widths[width] : widthFluid,\n                    textInput(theme.textInput),\n                    supporting ? supportingTextMargin : labelMargin,\n                    error ? errorInput(theme.textInput) : '',\n                    !error && success ? successInput(theme.textInput) : '',\n                    cssOverrides,\n                ], type: \"text\", id: textInputId, \"aria-required\": !optional, \"aria-invalid\": !!error, \"aria-describedby\": error || success ? descriptionId(textInputId) : '', required: !optional, ...props })] }));\n};\n\nexport { TextInput };\n//# sourceMappingURL=TextInput.js.map\n","import { jsxs, jsx } from '@emotion/react/jsx-runtime';\nimport { SvgTickRound } from '../../vendor/icons/SvgTickRound.js';\nimport { inlineSuccess } from './styles.js';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/story/source-react-components_inlinesuccess--inline-success-default-theme) •\n * [Design System](https://theguardian.design/2a1e5182b/p/108ed3-user-feedback/b/3803b4) •\n * [GitHub](https://github.com/guardian/csnx/tree/main/libs/@guardian/source-react-components/src/user-feedback/InlineSuccess.tsx) •\n * [NPM](https://www.npmjs.com/package/@guardian/source-react-components)\n *\n * Success messages acknowledge a user's action and do not require further action. They inform the user of processes happening in the background. For example, \"Your account details have been saved.\"\n *\n * The following themes are supported: `default`, `brand`\n */\nconst InlineSuccess = ({ children, cssOverrides, ...props }) => (jsxs(\"span\", { css: (theme) => [inlineSuccess(theme.userFeedback), cssOverrides], role: \"alert\", ...props, children: [jsx(SvgTickRound, {}), children] }));\n\nexport { InlineSuccess };\n//# sourceMappingURL=InlineSuccess.js.map\n","import { jsxs, Fragment, jsx } from '@emotion/react/jsx-runtime';\nimport { css } from '@emotion/react';\nimport { visuallyHidden, iconSize } from '@guardian/source-foundations';\n\nconst Svg = ({ size }) => (jsx(\"svg\", { width: size ? iconSize[size] : undefined, height: undefined, viewBox: \"-3 -3 30 30\", xmlns: \"http://www.w3.org/2000/svg\", focusable: false, \"aria-hidden\": true, children: jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10Zm-1.773-7.853-2.27-2.17-.8.8 2.709 3.791h.454l7.455-7.716-.82-.8-6.728 6.095Z\" }) }));\nconst SvgTickRound = ({ size, isAnnouncedByScreenReader = false, }) => (jsxs(Fragment, { children: [jsx(Svg, { size: size }), isAnnouncedByScreenReader ? (jsx(\"span\", { css: css `\n\t\t\t\t\t${visuallyHidden}\n\t\t\t\t`, children: \"Ticked\" })) : ('')] }));\n\nexport { SvgTickRound };\n//# sourceMappingURL=SvgTickRound.js.map\n"],"names":["ArticleDisplay","Label","text","supporting","optional","hideLabel","cssOverrides","children","props","jsxs","css","jsx","Text","SupportingText","textInputThemeDefault","textInput","textUserInput","palette","textLabel","textLabelOptional","textLabelSupporting","textError","textSuccess","backgroundInput","border","borderActive","borderError","borderSuccess","userFeedbackThemeDefault","errorInput","successInput","height","textSans","space","focusHalo","labelMargin","supportingTextMargin","inlineMessageMargin","widthFluid","widths","TextInput","id","label","labelText","width","error","success","textInputId","generateSourceId","Fragment","htmlFor","InlineError","descriptionId","InlineSuccess","theme","type","required","inlineSuccess","userFeedback","role","SvgTickRound","Svg","size","iconSize","undefined","viewBox","xmlns","focusable","fillRule","clipRule","d","isAnnouncedByScreenReader","visuallyHidden"],"sourceRoot":""}