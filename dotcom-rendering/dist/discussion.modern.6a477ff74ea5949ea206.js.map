{"version":3,"file":"discussion.modern.6a477ff74ea5949ea206.js","mappings":"0MA2BO,MAAMA,EAAa,KAORC,OAAOC,SAASC,KACpBC,SAAS,YA/BvB,WACC,IACC,MAAMC,EAAO,sBAGPC,EAAYC,SAASC,cAC1B,kBAAuB,OAALH,EAAK,MAExB,IAAKC,EAAW,OAGhB,MAAMG,GAAQC,EAAAA,EAAAA,GAASJ,GAGvBG,EAAME,UAAW,GAGZC,EAAAA,EAAAA,GAAYP,EAAMI,EAAOH,GAAWO,EAAAA,EAAAA,KAG1C,CAFE,MAAOC,GAET,CACD,CAUmCC,GAE3BC,QAAQC,U","sources":["webpack://@guardian/dotcom-rendering/./src/web/browser/discussion.ts"],"sourcesContent":["import { doHydration } from './islands/doHydration';\nimport { getEmotionCache } from './islands/emotion';\nimport { getProps } from './islands/getProps';\n\nfunction forceHydration() {\n\ttry {\n\t\tconst name = 'DiscussionContainer';\n\n\t\t// Select the Discussion island element\n\t\tconst guElement = document.querySelector<HTMLElement>(\n\t\t\t`gu-island[name=${name}]`,\n\t\t);\n\t\tif (!guElement) return;\n\n\t\t// Read the props from where they have been serialised in the dom using an Island\n\t\tconst props = getProps(guElement);\n\n\t\t// Now that we have the props as an object, tell Discussion we want it to expand itself\n\t\tprops.expanded = true;\n\n\t\t// Force hydration\n\t\tvoid doHydration(name, props, guElement, getEmotionCache());\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n}\n\nexport const discussion = (): Promise<void> => {\n\t/**\n\t * If we have either a #comment-123456 permalink or the #comments link in the url\n\t * then we want to hydrate and expand the discussion without waiting for the\n\t * reader to scroll down to it\n\t *\n\t */\n\tconst hashLink = window.location.hash;\n\tif (hashLink.includes('comment')) forceHydration();\n\n\treturn Promise.resolve();\n};\n"],"names":["discussion","window","location","hash","includes","name","guElement","document","querySelector","props","getProps","expanded","doHydration","getEmotionCache","err","forceHydration","Promise","resolve"],"sourceRoot":""}