{"version":3,"file":"4699.legacy.206b209d73567999e4b0.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/lib/articleCount.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/forceBrazeMessage.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/taylorReport.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/contributions.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/dailyArticleCount.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getIdapiUserData.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/messagePicker.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/setAutomat.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/hasCurrentBrazeUser.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/getBrazeUuid.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/checkBrazeDependencies.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/initialiseAppboy.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/hasRequiredConsents.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/braze/buildBrazeMessaging.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useBraze.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useIsInView.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useOnce.ts"],"sourcesContent":["import { storage } from '@guardian/libs';\nimport { getWeeklyArticleHistory, incrementWeeklyArticleCount, } from '@guardian/support-dotcom-components';\nimport { useEffect, useState } from 'react';\nimport { hasOptedOutOfArticleCount } from '../web/lib/contributions';\nimport { getDailyArticleCount, incrementDailyArticleCount, } from '../web/lib/dailyArticleCount';\n// We should monitor this function call to ensure it only happens within an\n// article pages when other pages are supported by DCR.\nexport const getArticleCounts = async (pageId, keywordIds) => {\n    if (await hasOptedOutOfArticleCount())\n        return undefined;\n    // hasOptedOut needs to be done before we check if articleCount is set in the window\n    // This is because a potential race condition where one invocation of getArticleCounts\n    // is waiting for hasOptedOut another invocation might receive it and increment the article count.\n    if (!window.guardian.weeklyArticleCount) {\n        incrementWeeklyArticleCount(storage.local, pageId, keywordIds.split(','));\n        window.guardian.weeklyArticleCount = getWeeklyArticleHistory(storage.local);\n    }\n    if (!window.guardian.dailyArticleCount) {\n        incrementDailyArticleCount();\n        window.guardian.dailyArticleCount = getDailyArticleCount();\n    }\n    return {\n        weeklyArticleHistory: window.guardian.weeklyArticleCount ?? [],\n        dailyArticleHistory: window.guardian.dailyArticleCount ?? [],\n    };\n};\nexport const useArticleCounts = (pageId, keywordIds) => {\n    const [articleCounts, setArticleCounts] = useState('Pending');\n    useEffect(() => {\n        getArticleCounts(pageId, keywordIds)\n            .then(setArticleCounts)\n            .catch(() => setArticleCounts(undefined));\n    }, [pageId, keywordIds]);\n    return articleCounts;\n};\n","const FORCE_BRAZE_ALLOWLIST = [\n    'preview.gutools.co.uk',\n    'preview.code.dev-gutools.co.uk',\n    process.env.HOSTNAME ?? 'localhost',\n    'm.thegulocal.com',\n];\nexport const getBrazeMetaFromUrlFragment = () => {\n    if (window.location.hash) {\n        // This is intended for use on development domains for preview purposes.\n        // It won't run in PROD.\n        const key = 'force-braze-message';\n        const hashString = window.location.hash;\n        if (hashString.includes(key)) {\n            if (!FORCE_BRAZE_ALLOWLIST.includes(window.location.hostname)) {\n                console.log(`${key} is not supported on this domain`);\n                return null;\n            }\n            const forcedMessage = hashString.slice(hashString.indexOf(`${key}=`) + key.length + 1, hashString.length);\n            try {\n                const dataFromBraze = JSON.parse(decodeURIComponent(forcedMessage));\n                return {\n                    dataFromBraze,\n                    logImpressionWithBraze: () => { },\n                    logButtonClickWithBraze: () => { },\n                };\n            }\n            catch (e) {\n                const error = e;\n                // Parsing failed. Log a message and fall through.\n                console.log(`There was an error with ${key}: `, error.message);\n            }\n        }\n    }\n    return null;\n};\n","const tagId = 'news/series/cotton-capital';\nexport const suppressForTaylorReport = (tags) => window.guardian.config.switches.brazeTaylorReport === true &&\n    !tags.find((tag) => tag.id === tagId);\n","import { onConsentChange } from '@guardian/consent-management-platform';\nimport { getCookie } from '@guardian/libs';\nimport { useState } from 'react';\nimport { getIdApiUserData } from './getIdapiUserData';\nimport { useOnce } from './useOnce';\n// User Atributes API cookies (dropped on sign-in)\nexport const HIDE_SUPPORT_MESSAGING_COOKIE = 'gu_hide_support_messaging';\nexport const RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor';\nexport const ONE_OFF_CONTRIBUTION_DATE_COOKIE = 'gu_one_off_contribution_date';\nexport const OPT_OUT_OF_ARTICLE_COUNT_COOKIE = 'gu_article_count_opt_out';\n// Support Frontend cookies (dropped when contribution is made)\nexport const SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE = 'gu.contributions.recurring.contrib-timestamp.Monthly';\nexport const SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE = 'gu.contributions.recurring.contrib-timestamp.Annual';\nexport const SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';\n//  Local storage keys\nconst DAILY_ARTICLE_COUNT_KEY = 'gu.history.dailyArticleCount';\nconst WEEKLY_ARTICLE_COUNT_KEY = 'gu.history.weeklyArticleCount';\nexport const NO_RR_BANNER_TIMESTAMP_KEY = 'gu.noRRBannerTimestamp'; // timestamp of when we were last told not to show a RR banner\n// See https://github.com/guardian/support-dotcom-components/blob/main/module-versions.md\nexport const MODULES_VERSION = 'v3';\n// Cookie set by the User Attributes API upon signing in.\n// Value computed server-side and looks at all of the user's active products,\n// including but not limited to recurring & one-off contributions,\n// paper & digital subscriptions, as well as user tiers (GU supporters/staff/partners/patrons).\n// https://github.com/guardian/members-data-api/blob/3a72dc00b9389968d91e5930686aaf34d8040c52/membership-attribute-service/app/models/Attributes.scala\nconst shouldShowSupportMessaging = () => {\n    const hideSupportMessaging = getCookie({ name: HIDE_SUPPORT_MESSAGING_COOKIE }) === 'true';\n    return !hideSupportMessaging;\n};\n// Determine if user is a recurring contributor by checking if they are signed in\n// AND have at least one of the relevant cookies.\n// We need to look at both User Attributes and Frontend Support cookies\n// as the former might not reflect the latest contributor status, since it's set upon signing in.\n// Frontend Support cookies are set when a contribution is made.\nexport const isRecurringContributor = (isSignedIn) => {\n    // Attributes cookie - we want this to have a specific value\n    const isRecurringContributorFromAttrs = getCookie({ name: RECURRING_CONTRIBUTOR_COOKIE }) === 'true';\n    // Support cookies - we only care whether these exist\n    const hasMonthlyContributionCookie = getCookie({\n        name: SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE,\n        shouldMemoize: true,\n    }) !== null;\n    const hasAnnualContributionCookie = getCookie({\n        name: SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE,\n        shouldMemoize: true,\n    }) !== null;\n    return (isSignedIn &&\n        (isRecurringContributorFromAttrs ||\n            hasMonthlyContributionCookie ||\n            hasAnnualContributionCookie));\n};\n// looks at attribute and support cookies\n// ONE_OFF_CONTRIBUTION_DATE_COOKIE (attributes cookie, when loggin in)\n// SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE (support cookie, when making one-off contribution)\n// Get the date of the latest one-off contribution by looking at the two relevant cookies\n// and returning a Unix epoch string of the latest date found.\nexport const getLastOneOffContributionTimestamp = () => {\n    // Attributes cookie - expects YYYY-MM-DD\n    const contributionDateFromAttributes = getCookie({\n        name: ONE_OFF_CONTRIBUTION_DATE_COOKIE,\n    });\n    // Support cookies - expects Unix epoch\n    const contributionDateFromSupport = getCookie({\n        name: SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE,\n    });\n    if (!contributionDateFromAttributes && !contributionDateFromSupport) {\n        return undefined;\n    }\n    // Parse dates into common format so they can be compared\n    const parsedDateFromAttributes = contributionDateFromAttributes\n        ? Date.parse(contributionDateFromAttributes)\n        : 0;\n    const parsedDateFromSupport = contributionDateFromSupport\n        ? parseInt(contributionDateFromSupport, 10)\n        : 0;\n    // Return most recent date\n    // Condition only passed if 'parsedDateFromAttributes' is NOT NaN\n    if (parsedDateFromAttributes > parsedDateFromSupport) {\n        return parsedDateFromAttributes;\n    }\n    return parsedDateFromSupport || undefined; // This guards against 'parsedDateFromSupport' being NaN\n};\nexport const getLastOneOffContributionDate = () => {\n    const timestamp = getLastOneOffContributionTimestamp();\n    if (timestamp === undefined) {\n        return undefined;\n    }\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n};\nconst dateDiffDays = (from, to) => {\n    const oneDayMs = 1000 * 60 * 60 * 24;\n    const diffMs = to - from;\n    return Math.floor(diffMs / oneDayMs);\n};\nconst AskPauseDays = 90;\nexport const isRecentOneOffContributor = () => {\n    const lastContributionDate = getLastOneOffContributionTimestamp();\n    if (lastContributionDate !== undefined) {\n        const now = Date.now();\n        return dateDiffDays(lastContributionDate, now) <= AskPauseDays;\n    }\n    return false;\n};\nexport const shouldHideSupportMessaging = (isSignedIn = false) => !shouldShowSupportMessaging() ||\n    isRecurringContributor(isSignedIn) ||\n    isRecentOneOffContributor();\nexport const REQUIRED_CONSENTS_FOR_ARTICLE_COUNT = [1, 3, 7];\nconst REQUIRED_CONSENTS_FOR_BROWSER_ID = [1, 3, 5, 7];\nexport const hasArticleCountOptOutCookie = () => getCookie({ name: OPT_OUT_OF_ARTICLE_COUNT_COOKIE }) !== null;\nconst removeArticleCountsFromLocalStorage = () => {\n    window.localStorage.removeItem(DAILY_ARTICLE_COUNT_KEY);\n    window.localStorage.removeItem(WEEKLY_ARTICLE_COUNT_KEY);\n};\nexport const hasCmpConsentForArticleCount = () => {\n    return new Promise((resolve) => {\n        if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n            resolve(true);\n        }\n        onConsentChange(({ ccpa, tcfv2, aus }) => {\n            if (ccpa || aus) {\n                resolve(true);\n            }\n            else if (tcfv2) {\n                const hasRequiredConsents = REQUIRED_CONSENTS_FOR_ARTICLE_COUNT.every((consent) => tcfv2.consents[consent]);\n                if (!hasRequiredConsents) {\n                    removeArticleCountsFromLocalStorage();\n                }\n                resolve(hasRequiredConsents);\n            }\n        });\n    });\n};\nexport const hasOptedOutOfArticleCount = async () => {\n    const hasCmpConsent = await hasCmpConsentForArticleCount();\n    return !hasCmpConsent || hasArticleCountOptOutCookie();\n};\n// A hook to find out if a user has opted out of article counting\nexport const useHasOptedOutOfArticleCount = () => {\n    const [hasOptedOut, setHasOptedOut] = useState('Pending');\n    useOnce(() => {\n        hasOptedOutOfArticleCount()\n            .then(setHasOptedOut)\n            .catch(() => setHasOptedOut(true));\n    }, []);\n    return hasOptedOut;\n};\nexport const hasCmpConsentForBrowserId = () => new Promise((resolve) => {\n    if (getCookie({ name: 'gu-cmp-disabled', shouldMemoize: true })) {\n        resolve(true);\n    }\n    onConsentChange(({ ccpa, tcfv2, aus }) => {\n        if (ccpa || aus) {\n            resolve(true);\n        }\n        else if (tcfv2) {\n            const hasRequiredConsents = REQUIRED_CONSENTS_FOR_BROWSER_ID.every((consent) => tcfv2.consents[consent]);\n            resolve(hasRequiredConsents);\n        }\n    });\n});\nconst twentyMins = 20 * 60000;\nexport const withinLocalNoBannerCachePeriod = () => {\n    const item = window.localStorage.getItem(NO_RR_BANNER_TIMESTAMP_KEY);\n    if (item && !Number.isNaN(parseInt(item, 10))) {\n        const withinCachePeriod = parseInt(item, 10) + twentyMins > Date.now();\n        if (!withinCachePeriod) {\n            // Expired\n            window.localStorage.removeItem(NO_RR_BANNER_TIMESTAMP_KEY);\n        }\n        return withinCachePeriod;\n    }\n    return false;\n};\nexport const setLocalNoBannerCachePeriod = () => window.localStorage.setItem(NO_RR_BANNER_TIMESTAMP_KEY, `${Date.now()}`);\nconst getEmail = (ajaxUrl) => {\n    return getIdApiUserData(ajaxUrl)\n        .then((data) => data.user?.primaryEmailAddress)\n        .catch((error) => {\n        window.guardian.modules.sentry.reportError(error, 'getEmail');\n        return undefined;\n    });\n};\nexport const lazyFetchEmailWithTimeout = (idapiUrl) => () => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(null), 1000);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        getEmail(idapiUrl).then((email) => {\n            if (email) {\n                resolve(email);\n            }\n            else {\n                resolve(null);\n            }\n        });\n    });\n};\nexport const getContributionsServiceUrl = (article) => process.env.SDC_URL ?? article.contributionsServiceUrl;\nexport const getPurchaseInfo = () => {\n    const purchaseInfoRaw = getCookie({\n        name: 'GU_CO_COMPLETE',\n        shouldMemoize: true,\n    });\n    if (!purchaseInfoRaw) {\n        return undefined;\n    }\n    let purchaseInfo;\n    try {\n        purchaseInfo = JSON.parse(decodeURIComponent(purchaseInfoRaw));\n    }\n    catch { } // eslint-disable-line no-empty -- silently handle error\n    return purchaseInfo;\n};\n","export const DailyArticleCountKey = 'gu.history.dailyArticleCount';\n// Returns undefined if no daily article count in local storage\nexport const getDailyArticleCount = () => {\n    const dailyCount = localStorage.getItem(DailyArticleCountKey);\n    if (!dailyCount) {\n        return undefined;\n    }\n    try {\n        const { value } = JSON.parse(dailyCount);\n        // check if value parsed correctly\n        if (!value.length) {\n            throw new Error('Invalid gu.history.dailyArticleCount value');\n        }\n        return value;\n    }\n    catch (e) {\n        // error parsing the string, so remove the key\n        localStorage.removeItem(DailyArticleCountKey);\n        return undefined;\n    }\n};\nexport const getToday = () => Math.floor(Date.now() / 86_400_000);\nexport const incrementDailyArticleCount = () => {\n    // get the daily article count from local storage\n    const dailyArticleCount = getDailyArticleCount() ?? [];\n    // calculate days since unix epoch for today date\n    const today = getToday();\n    // check if latest day is today and increment if so\n    if (dailyArticleCount[0]?.day === today) {\n        dailyArticleCount[0].count += 1;\n    }\n    else {\n        // else set new day\n        dailyArticleCount.unshift({ day: today, count: 1 });\n        // remove any days older than 60\n        const cutOff = today - 60;\n        const firstOldDayIndex = dailyArticleCount.findIndex((dailyCount) => dailyCount.day && dailyCount.day < cutOff);\n        if (firstOldDayIndex > 0) {\n            dailyArticleCount.splice(firstOldDayIndex);\n        }\n    }\n    // set the latest article count\n    localStorage.setItem(DailyArticleCountKey, JSON.stringify({\n        value: dailyArticleCount,\n    }));\n};\n","import { joinUrl } from '@guardian/libs';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `getIdApiUserData | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\nconst callApi = (url) => {\n    return fetch(url, {\n        credentials: 'include',\n    })\n        .then(checkForErrors)\n        .then((response) => response.json());\n};\nconst cache = {};\nexport const getIdApiUserData = (ajaxUrl) => {\n    if (!cache.idapiUserMeResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me');\n        cache.idapiUserMeResponse = callApi(url);\n    }\n    return cache.idapiUserMeResponse;\n};\nexport const getIdapiUserIdentifiers = (ajaxUrl) => {\n    if (!cache.idapiUserIdentifiersResponse) {\n        const url = joinUrl(ajaxUrl, 'user/me/identifiers');\n        cache.idapiUserIdentifiersResponse = callApi(url);\n    }\n    return cache.idapiUserIdentifiersResponse;\n};\n","import { initPerf } from '../browser/initPerf';\nimport { record } from '../browser/ophan/ophan';\nconst recordMessageTimeoutInOphan = (candidateId, slotName) => record({\n    component: `${slotName}-picker-timeout-dcr`,\n    value: candidateId,\n});\nconst timeoutify = (candidateConfig, slotName) => {\n    let timer;\n    const canShow = () => new Promise((resolve) => {\n        const perfName = `messagePicker-canShow-${candidateConfig.candidate.id}`;\n        const canShowTiming = initPerf(perfName);\n        canShowTiming.start();\n        if (candidateConfig.timeoutMillis !== null) {\n            timer = window.setTimeout(() => {\n                recordMessageTimeoutInOphan(candidateConfig.candidate.id, slotName);\n                resolve({ show: false });\n            }, candidateConfig.timeoutMillis);\n        }\n        candidateConfig.candidate\n            .canShow()\n            .then((result) => {\n            resolve(result);\n            const canShowTimeTaken = canShowTiming.end();\n            if (candidateConfig.reportTiming) {\n                record({\n                    component: perfName,\n                    value: canShowTimeTaken,\n                });\n            }\n        })\n            .catch((e) => console.error(`timeoutify candidate - error: ${String(e)}`));\n    });\n    const cancelTimeout = () => timer !== undefined && clearTimeout(timer);\n    return {\n        ...candidateConfig,\n        candidate: {\n            ...candidateConfig.candidate,\n            canShow,\n        },\n        cancelTimeout,\n    };\n};\nconst clearAllTimeouts = (messages) => messages.map((m) => m.cancelTimeout());\nconst defaultShow = () => null;\nexport const pickMessage = ({ candidates, name, }) => new Promise((resolve) => {\n    const candidateConfigsWithTimeout = candidates.map((c) => timeoutify(c, name));\n    const results = candidateConfigsWithTimeout.map((candidateConfig) => ({\n        candidateConfig,\n        canShow: candidateConfig.candidate.canShow(),\n    }));\n    const winnerResult = results.reduce(async (winningMessageSoFar, { candidateConfig, canShow }) => {\n        if (await winningMessageSoFar) {\n            return winningMessageSoFar;\n        }\n        const result = await canShow;\n        candidateConfig.cancelTimeout();\n        if (result.show) {\n            return {\n                candidate: candidateConfig.candidate,\n                meta: result.meta,\n            };\n        }\n        return winningMessageSoFar;\n    }, Promise.resolve(null));\n    winnerResult\n        .then((winner) => {\n        clearAllTimeouts(candidateConfigsWithTimeout);\n        if (winner === null) {\n            resolve(defaultShow);\n        }\n        else {\n            const { candidate, meta } = winner;\n            resolve(() => candidate.show(meta));\n        }\n    })\n        .catch((e) => console.error(`pickMessage winner - error: ${String(e)}`));\n});\n","import * as emotionReact from '@emotion/react';\nimport * as emotionReactJsxRuntime from '@emotion/react/jsx-runtime';\nimport React from 'react';\nlet hasAutomatBeenSet = false;\nexport const setAutomat = () => {\n    if (!hasAutomatBeenSet) {\n        window.guardian.automat = {\n            emotionReact,\n            emotionReactJsxRuntime,\n            react: React,\n        };\n        hasAutomatBeenSet = true;\n    }\n};\n","const KEY = 'gu.brazeUserSet';\nconst hasCurrentBrazeUser = () => {\n    return localStorage.getItem(KEY) === 'true';\n};\nconst setHasCurrentBrazeUser = () => {\n    localStorage.setItem(KEY, 'true');\n};\nconst clearHasCurrentBrazeUser = () => {\n    localStorage.removeItem(KEY);\n};\nexport { hasCurrentBrazeUser, setHasCurrentBrazeUser, clearHasCurrentBrazeUser, };\n","import { getIdapiUserIdentifiers } from './getIdapiUserData';\nexport const getBrazeUuid = async (ajaxUrl) => {\n    return getIdapiUserIdentifiers(ajaxUrl)\n        .then((data) => data.brazeUuid)\n        .catch((error) => {\n        window.guardian.modules.sentry.reportError(error, 'getBrazeUuid');\n    });\n};\n","import { getBrazeUuid } from '../getBrazeUuid';\nimport { hasRequiredConsents } from './hasRequiredConsents';\nconst buildFailureResponse = (name, value, data) => ({\n    isSuccessful: false,\n    failure: {\n        field: name,\n        data: value,\n    },\n    data,\n});\nconst buildDependencies = (isSignedIn, idApiUrl) => {\n    return [\n        {\n            name: 'apiKey',\n            value: Promise.resolve(window.guardian.config.page.brazeApiKey),\n        },\n        {\n            name: 'brazeSwitch',\n            value: Promise.resolve(window.guardian.config.switches.brazeSwitch),\n        },\n        {\n            name: 'brazeUuid',\n            value: isSignedIn ? getBrazeUuid(idApiUrl) : Promise.resolve(null),\n        },\n        {\n            name: 'consent',\n            value: hasRequiredConsents(),\n        },\n        {\n            name: 'isNotPaidContent',\n            value: Promise.resolve(!window.guardian.config.page.isPaidContent),\n        },\n    ];\n};\nconst checkBrazeDependencies = async (isSignedIn, idApiUrl) => {\n    const dependencies = buildDependencies(isSignedIn, idApiUrl);\n    const data = {};\n    // I think we could possibly clean this up a bit when we can use\n    // Promise.allSettled reliably (it's not available in our current Node\n    // version and polyfill.io doesn't have a polyfill yet).\n    for (const { name, value } of dependencies) {\n        try {\n            const result = await value;\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- TODO: Complex types, look into this further\n            if (result) {\n                data[name] = result;\n            }\n            else {\n                return buildFailureResponse(name, result, data);\n            }\n        }\n        catch (e) {\n            return buildFailureResponse(name, e instanceof Error ? e.message : e, data);\n        }\n    }\n    return {\n        isSuccessful: true,\n        data,\n    };\n};\nexport { checkBrazeDependencies };\n","import { log } from '@guardian/libs';\nconst SDK_OPTIONS = {\n    enableLogging: true,\n    noCookies: true,\n    baseUrl: 'https://sdk.fra-01.braze.eu/api/v3',\n    sessionTimeoutInSeconds: 1,\n    minimumIntervalBetweenTriggerActionsInSeconds: 0,\n    devicePropertyAllowlist: [],\n};\nconst initialiseAppboy = async (apiKey) => {\n    const importedAppboy = (await import(\n    /* webpackChunkName: \"braze-web-sdk-core\" */ '@braze/web-sdk-core'));\n    importedAppboy.setLogger((message) => log('tx', message));\n    importedAppboy.initialize(apiKey, SDK_OPTIONS);\n    return importedAppboy;\n};\nconst getInitialisedAppboy = (() => {\n    let cache;\n    return (apiKey) => {\n        if (cache === undefined) {\n            cache = initialiseAppboy(apiKey);\n        }\n        return cache;\n    };\n})();\nexport { getInitialisedAppboy };\n","import { getConsentFor, onConsentChange, } from '@guardian/consent-management-platform';\nconst hasRequiredConsents = () => new Promise((resolve, reject) => {\n    onConsentChange((state) => {\n        try {\n            resolve(getConsentFor('braze', state));\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n});\nexport { hasRequiredConsents };\n","import { BrazeCards, BrazeMessages, LocalMessageCache, NullBrazeCards, NullBrazeMessages, } from '@guardian/braze-components/logic';\nimport { getCookie, log, storage } from '@guardian/libs';\nimport { initPerf } from '../../browser/initPerf';\nimport { record } from '../../browser/ophan/ophan';\nimport { clearHasCurrentBrazeUser, hasCurrentBrazeUser, setHasCurrentBrazeUser, } from '../hasCurrentBrazeUser';\nimport { checkBrazeDependencies } from './checkBrazeDependencies';\nimport { getInitialisedAppboy } from './initialiseAppboy';\nconst maybeWipeUserData = async (apiKey, brazeUuid, consent, brazeSwitch) => {\n    const hasCurrentBrazeUserValue = hasCurrentBrazeUser();\n    const userHasLoggedOut = !brazeUuid && hasCurrentBrazeUserValue;\n    const userHasRemovedConsent = !consent && hasCurrentBrazeUserValue;\n    const brazeHasBeenDisabled = !brazeSwitch && hasCurrentBrazeUserValue;\n    if (userHasLoggedOut || userHasRemovedConsent || brazeHasBeenDisabled) {\n        try {\n            if (apiKey) {\n                const appboy = await getInitialisedAppboy(apiKey);\n                appboy.wipeData();\n            }\n            LocalMessageCache.clear();\n            clearHasCurrentBrazeUser();\n        }\n        catch (error) {\n            window.guardian.modules.sentry.reportError(\n            // @ts-expect-error\n            error, 'braze-maybeWipeUserData');\n        }\n    }\n};\nexport const buildBrazeMessaging = async (idApiUrl) => {\n    if (!storage.local.isAvailable()) {\n        // we require local storage for using any message channel so that we know\n        // when to clear up user data from the device on logout\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    const isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n    const dependenciesResult = await checkBrazeDependencies(isSignedIn, idApiUrl);\n    if (!dependenciesResult.isSuccessful) {\n        const { failure, data } = dependenciesResult;\n        log('tx', `Not attempting to show Braze messages. Dependency ${failure.field} failed with ${String(failure.data)}.`);\n        await maybeWipeUserData(data.apiKey, data.brazeUuid, data.consent, data.brazeSwitch);\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    try {\n        const sdkLoadTiming = initPerf('braze-sdk-load');\n        sdkLoadTiming.start();\n        const appboy = await getInitialisedAppboy(dependenciesResult.data.apiKey);\n        const sdkLoadTimeTaken = sdkLoadTiming.end();\n        record({\n            component: 'braze-sdk-load-timing',\n            value: sdkLoadTimeTaken,\n        });\n        const errorHandler = (error, desc) => {\n            window.guardian.modules.sentry.reportError(error, desc);\n        };\n        setHasCurrentBrazeUser();\n        appboy.changeUser(dependenciesResult.data.brazeUuid);\n        appboy.openSession();\n        const brazeCards = window.guardian.config.switches.brazeContentCards\n            ? new BrazeCards(appboy, errorHandler)\n            : new NullBrazeCards();\n        const brazeMessages = new BrazeMessages(appboy, LocalMessageCache, errorHandler);\n        return { brazeMessages, brazeCards };\n    }\n    catch {\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n};\n","import { NullBrazeCards, NullBrazeMessages, } from '@guardian/braze-components/logic';\nimport useSWRImmutable from 'swr/immutable';\nimport { buildBrazeMessaging } from './braze/buildBrazeMessaging';\n/**\n * Returns brazeMessaging as BrazeMessagesInterface and BrazeCardsInterface\n *\n * BrazeMessages is used to show single-impression messages (like ad impressions).\n * In contrast, BrazeCards can provide persistent user notifications.\n *\n * We're using useSWRImmutable to ensure this call is only made once\n * [doc]: https://swr.vercel.app/docs/revalidation#disable-automatic-revalidations\n */\nexport const useBraze = (idApiUrl) => {\n    const { data, error } = useSWRImmutable('braze-message', () => buildBrazeMessaging(idApiUrl));\n    if (error) {\n        return {\n            brazeMessages: new NullBrazeMessages(),\n            brazeCards: new NullBrazeCards(),\n        };\n    }\n    return {\n        brazeMessages: data?.brazeMessages,\n        brazeCards: data?.brazeCards,\n    };\n};\n","import libDebounce from 'lodash.debounce';\nimport { useEffect, useRef, useState } from 'react';\n/**\n * Custom hook around the `IntersectionObserver`.\n *\n * @param options\n * @param {boolean} [options.debouce] If `true`, debounce triggers by 200ms.\n * By default, trigger instantaneously. Enabling debouncing ensures the target\n * element intersects for at least 200ms before the callback is executed\n * @param {boolean} [options.repeat] If `true`, trigger the hook on\n * all intersections. By default, only trigger on the first intersection.\n * @param {boolean} [options.node] Set the initial node, if known.\n * @returns a tuple containing [isInView, setNode];\n */\nconst useIsInView = (options) => {\n    const [isInView, setIsInView] = useState(false);\n    const [node, setNode] = useState(options.node ?? null);\n    const observer = useRef(null);\n    const intersectionFn = ([entry]) => {\n        if (!entry)\n            return;\n        if (entry.isIntersecting) {\n            setIsInView(true);\n        }\n        else if (options.repeat) {\n            setIsInView(false);\n        }\n    };\n    const intersectionCallback = options.debounce\n        ? libDebounce(intersectionFn, 200)\n        : intersectionFn;\n    useEffect(() => {\n        // TODO: can we remove this? It’s now always cleaned up\n        if (observer.current) {\n            observer.current.disconnect();\n        }\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unnecessary-condition -- Safety for browser support\n        if (window.IntersectionObserver) {\n            observer.current = new window.IntersectionObserver(intersectionCallback, options);\n            if (node) {\n                observer.current.observe(node);\n            }\n        }\n        return () => observer.current?.disconnect();\n    }, [node, options, intersectionCallback]);\n    return [isInView, setNode];\n};\nexport { useIsInView };\n","import { useEffect, useState } from 'react';\n/**\n * Ensures that the given task is only run once and only after all items in waitFor are defined\n * @param {Function} task - The task to execute once\n * @param {Array} waitFor - An array of variables that must be defined before the task is executed\n * */\nexport const useOnce = (task, waitFor) => {\n    const [alreadyRun, setAlreadyRun] = useState(false);\n    const isReady = waitFor.every((dep) => dep !== undefined);\n    useEffect(() => {\n        if (!alreadyRun && isReady) {\n            task();\n            setAlreadyRun(true);\n        }\n    }, [alreadyRun, isReady, task]);\n};\n"],"names":["getArticleCounts","pageId","keywordIds","hasOptedOutOfArticleCount","undefined","window","guardian","weeklyArticleCount","incrementWeeklyArticleCount","storage","split","getWeeklyArticleHistory","dailyArticleCount","incrementDailyArticleCount","getDailyArticleCount","weeklyArticleHistory","dailyArticleHistory","useArticleCounts","useState","articleCounts","setArticleCounts","useEffect","then","catch","FORCE_BRAZE_ALLOWLIST","getBrazeMetaFromUrlFragment","location","hash","key","hashString","includes","hostname","console","log","forcedMessage","slice","indexOf","length","dataFromBraze","JSON","parse","decodeURIComponent","logImpressionWithBraze","logButtonClickWithBraze","e","error","message","suppressForTaylorReport","tags","config","switches","brazeTaylorReport","find","tag","id","HIDE_SUPPORT_MESSAGING_COOKIE","RECURRING_CONTRIBUTOR_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE","SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE","SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE","NO_RR_BANNER_TIMESTAMP_KEY","MODULES_VERSION","shouldShowSupportMessaging","getCookie","name","isRecurringContributor","isSignedIn","isRecurringContributorFromAttrs","hasMonthlyContributionCookie","shouldMemoize","hasAnnualContributionCookie","getLastOneOffContributionTimestamp","contributionDateFromAttributes","contributionDateFromSupport","parsedDateFromAttributes","Date","parsedDateFromSupport","parseInt","getLastOneOffContributionDate","timestamp","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","isRecentOneOffContributor","diffMs","lastContributionDate","now","Math","floor","shouldHideSupportMessaging","REQUIRED_CONSENTS_FOR_ARTICLE_COUNT","REQUIRED_CONSENTS_FOR_BROWSER_ID","hasCmpConsentForArticleCount","Promise","resolve","onConsentChange","ccpa","tcfv2","aus","hasRequiredConsents","every","consent","consents","localStorage","removeItem","hasCmpConsent","useHasOptedOutOfArticleCount","hasOptedOut","setHasOptedOut","useOnce","hasCmpConsentForBrowserId","withinLocalNoBannerCachePeriod","item","getItem","Number","isNaN","withinCachePeriod","setLocalNoBannerCachePeriod","setItem","lazyFetchEmailWithTimeout","idapiUrl","ajaxUrl","setTimeout","getIdApiUserData","data","user","primaryEmailAddress","modules","sentry","reportError","email","getPurchaseInfo","purchaseInfoRaw","purchaseInfo","DailyArticleCountKey","dailyCount","value","Error","getToday","today","count","unshift","cutOff","firstOldDayIndex","findIndex","splice","stringify","checkForErrors","response","ok","statusText","status","callApi","url","fetch","credentials","json","cache","idapiUserMeResponse","joinUrl","getIdapiUserIdentifiers","idapiUserIdentifiersResponse","defaultShow","pickMessage","candidates","candidateConfigsWithTimeout","map","c","slotName","candidateConfig","candidate","canShow","perfName","canShowTiming","initPerf","start","timeoutMillis","timer","candidateId","record","component","recordMessageTimeoutInOphan","show","result","canShowTimeTaken","end","reportTiming","String","cancelTimeout","clearTimeout","winnerResult","reduce","winningMessageSoFar","meta","winner","m","hasAutomatBeenSet","setAutomat","automat","emotionReact","emotionReactJsxRuntime","react","React","KEY","getBrazeUuid","brazeUuid","buildFailureResponse","isSuccessful","failure","field","buildDependencies","idApiUrl","page","brazeApiKey","brazeSwitch","reject","state","getConsentFor","isPaidContent","checkBrazeDependencies","dependencies","SDK_OPTIONS","enableLogging","noCookies","baseUrl","sessionTimeoutInSeconds","minimumIntervalBetweenTriggerActionsInSeconds","devicePropertyAllowlist","initialiseAppboy","apiKey","importedAppboy","setLogger","initialize","getInitialisedAppboy","maybeWipeUserData","hasCurrentBrazeUserValue","userHasRemovedConsent","brazeHasBeenDisabled","wipeData","LocalMessageCache","buildBrazeMessaging","brazeMessages","NullBrazeMessages","brazeCards","NullBrazeCards","dependenciesResult","sdkLoadTiming","appboy","sdkLoadTimeTaken","errorHandler","desc","changeUser","openSession","brazeContentCards","BrazeCards","BrazeMessages","useBraze","useSWRImmutable","useIsInView","options","isInView","setIsInView","node","setNode","observer","useRef","intersectionFn","entry","isIntersecting","repeat","intersectionCallback","debounce","libDebounce","current","disconnect","IntersectionObserver","observe","task","waitFor","alreadyRun","setAlreadyRun","isReady","dep"],"sourceRoot":""}