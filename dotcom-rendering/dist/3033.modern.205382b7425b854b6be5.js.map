{"version":3,"file":"3033.modern.205382b7425b854b6be5.js","mappings":"wNAGA,MAAMA,EACI,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WATFA,EAWO,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAnBFA,EAqBK,CACH,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAjCFA,EAmCM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA7CFA,EA+CK,CACH,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAvDFA,EAyDO,CACL,UACA,UACA,WA5DFA,EA8DM,CACJ,UACA,UACA,UACA,UACA,UACA,WApEFA,EAsEK,CACH,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAhFFA,EAkFO,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WASFC,EAAU,CACZC,MAAO,CACH,IAAKF,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,GAClB,IAAKA,EAAa,IAClB,IAAKA,EAAa,KAEtBG,SAAU,CACN,IAAKH,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,IAExBI,QAAS,CACL,EAAGJ,EAAa,GAChB,EAAGA,EAAa,GAChB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,GAAIA,EAAa,GACjB,IAAKA,EAAa,IAEtBK,MAAO,CACH,IAAKL,EAAY,GACjB,IAAKA,EAAY,IAErBM,QAAS,CACL,IAAKN,EAAc,GACnB,IAAKA,EAAc,IAEvBO,KAAM,CACF,IAAKP,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,GACjB,IAAKA,EAAY,IAErBQ,QAAS,CACL,IAAKR,EAAe,GACpB,IAAKA,EAAe,GAIpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAA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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/colour/palette.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/typography/data.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/typography/font-styles.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/typography/api.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/typography/index.js","webpack://@guardian/dotcom-rendering/../node_modules/@guardian/source-foundations/esm/utils/px-to-rem.js"],"sourcesContent":["// Arrays of colours should have pillar colors first\n// e.g. for sport:\n// const [sport300, sport400, sport500, sport600, sport800] = colors.blue\nconst colors = {\n    reds: [\n        '#660505',\n        '#8B0000',\n        '#AB0613',\n        '#C70000',\n        '#FF5943',\n        '#FF9081',\n        '#FFBAC8',\n        '#FFF4F2', //news-800\n    ],\n    oranges: [\n        '#672005',\n        '#8D2700',\n        '#C74600',\n        '#E05E00',\n        '#FF7F0F',\n        '#FF9941',\n        '#F9B376',\n        '#FEF9F5', //opinion-800\n    ],\n    blues: [\n        '#003C60',\n        '#004E7C',\n        '#005689',\n        '#0077B6',\n        '#00B2FF',\n        '#90DCFF',\n        '#F1F8FC',\n        '#001536',\n        '#041F4A',\n        '#052962',\n        '#506991',\n        '#C1D8FC', //brand-800\n    ],\n    browns: [\n        '#2B2625',\n        '#3E3323',\n        '#574835',\n        '#6B5840',\n        '#866D50',\n        '#A1845C',\n        '#EACCA0',\n        '#E7D4B9',\n        '#EFE8DD',\n        '#FBF6EF', //culture-800\n    ],\n    pinks: [\n        '#510043',\n        '#650054',\n        '#7D0068',\n        '#BB3B80',\n        '#F37ABC',\n        '#FFABDB',\n        '#FEC8D3',\n        '#FEEEF7', //lifestyle-800\n    ],\n    yellows: [\n        '#F3C100',\n        '#FFD900',\n        '#FFE500', //brandAlt-400\n    ],\n    greens: [\n        '#185E36',\n        '#22874D',\n        '#58D08B',\n        '#0C7A73',\n        '#65A897',\n        '#69D1CA', //labs-400\n    ],\n    grays: [\n        '#000000',\n        '#121212',\n        '#1A1A1A',\n        '#333333',\n        '#707070',\n        '#999999',\n        '#DCDCDC',\n        '#EDEDED',\n        '#F6F6F6',\n        '#FFFFFF', //neutral-100\n    ],\n    special: [\n        '#222527',\n        '#303538',\n        '#3F464A',\n        '#595C5F',\n        '#9DA0A2',\n        '#ABC2C9',\n        '#E4E5E8',\n        '#EFF1F2',\n        '#2B2B2A',\n        '#B9300A',\n        '#FF663D',\n        '#EBE6E1',\n        '#F5F0EB', //specialReportAlt-800\n    ],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/492a30-light-palette)\n *\n * Colour palette organised by type e.g. 'error', or pillar e.g. 'opinion'\n */\nconst palette = {\n    brand: {\n        100: colors.blues[7],\n        300: colors.blues[8],\n        400: colors.blues[9],\n        500: colors.blues[3],\n        600: colors.blues[10],\n        800: colors.blues[11],\n    },\n    brandAlt: {\n        200: colors.yellows[0],\n        300: colors.yellows[1],\n        400: colors.yellows[2],\n    },\n    neutral: {\n        0: colors.grays[0],\n        7: colors.grays[1],\n        10: colors.grays[2],\n        20: colors.grays[3],\n        46: colors.grays[4],\n        60: colors.grays[5],\n        86: colors.grays[6],\n        93: colors.grays[7],\n        97: colors.grays[8],\n        100: colors.grays[9],\n    },\n    error: {\n        400: colors.reds[3],\n        500: colors.reds[5],\n    },\n    success: {\n        400: colors.greens[1],\n        500: colors.greens[2],\n    },\n    news: {\n        100: colors.reds[0],\n        200: colors.reds[1],\n        300: colors.reds[2],\n        400: colors.reds[3],\n        500: colors.reds[4],\n        550: colors.reds[5],\n        600: colors.reds[6],\n        800: colors.reds[7],\n    },\n    opinion: {\n        100: colors.oranges[0],\n        200: colors.oranges[1],\n        /**\n         * @deprecated, use opinion[400]\n         */\n        300: colors.oranges[2],\n        400: colors.oranges[2],\n        450: colors.oranges[3],\n        500: colors.oranges[4],\n        550: colors.oranges[5],\n        600: colors.oranges[6],\n        800: colors.oranges[7],\n    },\n    sport: {\n        100: colors.blues[0],\n        200: colors.blues[1],\n        300: colors.blues[2],\n        400: colors.blues[3],\n        500: colors.blues[4],\n        600: colors.blues[5],\n        800: colors.blues[6],\n    },\n    culture: {\n        50: colors.browns[0],\n        100: colors.browns[1],\n        200: colors.browns[2],\n        300: colors.browns[3],\n        /**\n         * @deprecated, use culture[400]\n         */\n        350: colors.browns[4],\n        400: colors.browns[4],\n        450: colors.browns[5],\n        500: colors.browns[6],\n        600: colors.browns[7],\n        700: colors.browns[8],\n        800: colors.browns[9],\n    },\n    lifestyle: {\n        100: colors.pinks[0],\n        200: colors.pinks[1],\n        300: colors.pinks[2],\n        400: colors.pinks[3],\n        450: colors.pinks[4],\n        500: colors.pinks[5],\n        600: colors.pinks[6],\n        800: colors.pinks[7],\n    },\n    labs: {\n        200: colors.greens[3],\n        300: colors.greens[4],\n        400: colors.greens[5],\n    },\n    specialReport: {\n        100: colors.special[0],\n        200: colors.special[1],\n        300: colors.special[2],\n        400: colors.special[3],\n        450: colors.special[4],\n        500: colors.special[5],\n        700: colors.special[6],\n        800: colors.special[7],\n    },\n    specialReportAlt: {\n        100: colors.special[8],\n        200: colors.special[9],\n        300: colors.special[10],\n        700: colors.special[11],\n        800: colors.special[12],\n    },\n    focus: {\n        400: colors.blues[3],\n    },\n};\n// Hover colours are snowflakes as they are manipulations of colours from the\n// main palette.\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/9280ee)\n *\n * Default theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst background = {\n    primary: palette.neutral[100],\n    secondary: palette.neutral[97],\n    inverse: palette.neutral[10],\n    ctaPrimary: palette.brand[400],\n    ctaPrimaryHover: '#234B8A',\n    ctaSecondary: palette.brand[800],\n    ctaSecondaryHover: '#ACC9F7',\n    ctaTertiaryHover: '#E5E5E5',\n    input: palette.neutral[100],\n    inputChecked: palette.brand[500],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/63cc10)\n *\n * Brand theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandBackground = {\n    primary: palette.brand[400],\n    inputChecked: palette.neutral[100],\n    ctaPrimary: palette.neutral[100],\n    ctaPrimaryHover: '#E0E0E0',\n    ctaSecondary: palette.brand[600],\n    ctaSecondaryHover: '#234B8A',\n    ctaTertiaryHover: palette.brand[300],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/743232)\n *\n * Alternative brand theme background colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandAltBackground = {\n    primary: palette.brandAlt[400],\n    ctaPrimary: palette.neutral[7],\n    ctaPrimaryHover: '#454545',\n    ctaSecondary: palette.brandAlt[200],\n    ctaSecondaryHover: '#F2AE00',\n    ctaTertiaryHover: '#FFD213',\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/69c92f)\n *\n * Default theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst border = {\n    primary: palette.neutral[60],\n    secondary: palette.neutral[86],\n    success: palette.success[400],\n    error: palette.error[400],\n    ctaTertiary: palette.brand[400],\n    input: palette.neutral[60],\n    inputChecked: palette.brand[500],\n    inputHover: palette.brand[500],\n    inputActive: palette.brand[500],\n    focusHalo: palette.focus[400],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/04883b)\n *\n * Brand theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandBorder = {\n    primary: palette.brand[600],\n    secondary: palette.brand[600],\n    success: palette.success[500],\n    error: palette.error[500],\n    ctaTertiary: palette.neutral[100],\n    input: palette.brand[800],\n    inputChecked: palette.neutral[100],\n    inputHover: palette.neutral[100],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/b/21c6cc)\n *\n * Alternative brand theme border colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandAltBorder = {\n    ctaTertiary: palette.neutral[7],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/593cc9)\n *\n * Default theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst line = {\n    primary: palette.neutral[86],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/66455d)\n *\n * Brand theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandLine = {\n    primary: palette.brand[600],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/89955e)\n *\n * Alternative brand theme line colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandAltLine = {\n    primary: palette.neutral[7],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/85d3b0)\n *\n * Default theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst text = {\n    primary: palette.neutral[7],\n    supporting: palette.neutral[46],\n    success: palette.success[400],\n    error: palette.error[400],\n    ctaPrimary: palette.neutral[100],\n    ctaSecondary: palette.brand[400],\n    ctaTertiary: palette.brand[400],\n    anchorPrimary: palette.brand[500],\n    anchorSecondary: palette.neutral[7],\n    userInput: palette.neutral[7],\n    inputLabel: palette.neutral[7],\n    inputError: palette.neutral[7],\n    inputLabelSupporting: palette.neutral[46],\n    inputChecked: palette.brand[400],\n    inputHover: palette.brand[400],\n    groupLabel: palette.neutral[7],\n    groupLabelSupporting: palette.neutral[46],\n    newsInverse: palette.news[550],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/244480)\n *\n * Brand theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandText = {\n    primary: palette.neutral[100],\n    supporting: palette.brand[800],\n    success: palette.success[500],\n    error: palette.error[500],\n    ctaPrimary: palette.brand[400],\n    ctaSecondary: palette.neutral[100],\n    ctaTertiary: palette.neutral[100],\n    anchorPrimary: palette.neutral[100],\n    anchorPrimaryHover: palette.brandAlt[400],\n    userInput: palette.neutral[100],\n    inputLabel: palette.neutral[100],\n    inputLabelSupporting: palette.brand[800],\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_palette--palette) •\n * [Design System](https://theguardian.design/2a1e5182b/p/1377a6-tokens/t/11d5fd)\n *\n * Alternative brand theme text colours\n *\n * @deprecated Use the `palette` export instead\n */\nconst brandAltText = {\n    primary: palette.neutral[7],\n    supporting: palette.neutral[60],\n    ctaPrimary: palette.neutral[100],\n    ctaSecondary: palette.neutral[7],\n    ctaTertiary: palette.neutral[7],\n    anchorPrimary: palette.neutral[7],\n};\n\nexport { background, border, brandAltBackground, brandAltBorder, brandAltLine, brandAltText, brandBackground, brandBorder, brandLine, brandText, line, palette, text };\n//# sourceMappingURL=palette.js.map\n","import { pxToRem } from '../utils/px-to-rem.js';\n\n/**\n * Pixel size values for each font that we use in the design system.\n *\n * We assert that the values match the guardian type scale in our\n * {@link [unit test suite](./typography.test.ts)}.\n */\nconst pxTextSizes = {\n    textSans: {\n        xxsmall: 12,\n        xsmall: 14,\n        small: 15,\n        medium: 17,\n        large: 20,\n        xlarge: 24,\n        xxlarge: 28,\n        xxxlarge: 34,\n    },\n    body: {\n        xsmall: 14,\n        small: 15,\n        medium: 17,\n    },\n    headline: {\n        xxxsmall: 17,\n        xxsmall: 20,\n        xsmall: 24,\n        small: 28,\n        medium: 34,\n        large: 42,\n        xlarge: 50,\n    },\n    titlepiece: {\n        small: 42,\n        medium: 50,\n        large: 70,\n    },\n};\n/**\n * Relative font sizes, calculated from the pixel sizes above;\n * using the pxToRem method.\n *\n * We assert that the computed rem values match the expected values\n * in our {@link [unit test suite](./typography.test.ts)}.\n *\n * See {@link [pxToRem](../utils/px-to-rem.ts)} for more details.\n */\nconst remTextSizes = {\n    textSans: {\n        xxsmall: pxToRem(pxTextSizes.textSans.xxsmall),\n        xsmall: pxToRem(pxTextSizes.textSans.xsmall),\n        small: pxToRem(pxTextSizes.textSans.small),\n        medium: pxToRem(pxTextSizes.textSans.medium),\n        large: pxToRem(pxTextSizes.textSans.large),\n        xlarge: pxToRem(pxTextSizes.textSans.xlarge),\n        xxlarge: pxToRem(pxTextSizes.textSans.xxlarge),\n        xxxlarge: pxToRem(pxTextSizes.textSans.xxxlarge),\n    },\n    body: {\n        xsmall: pxToRem(pxTextSizes.body.xsmall),\n        small: pxToRem(pxTextSizes.body.small),\n        medium: pxToRem(pxTextSizes.body.medium),\n    },\n    headline: {\n        xxxsmall: pxToRem(pxTextSizes.headline.xxxsmall),\n        xxsmall: pxToRem(pxTextSizes.headline.xxsmall),\n        xsmall: pxToRem(pxTextSizes.headline.xsmall),\n        small: pxToRem(pxTextSizes.headline.small),\n        medium: pxToRem(pxTextSizes.headline.medium),\n        large: pxToRem(pxTextSizes.headline.large),\n        xlarge: pxToRem(pxTextSizes.headline.xlarge),\n    },\n    titlepiece: {\n        small: pxToRem(pxTextSizes.titlepiece.small),\n        medium: pxToRem(pxTextSizes.titlepiece.medium),\n        large: pxToRem(pxTextSizes.titlepiece.large),\n    },\n};\nconst fonts = {\n    titlepiece: 'GT Guardian Titlepiece, Georgia, serif',\n    headline: 'GH Guardian Headline, Guardian Egyptian Web, Georgia, serif',\n    body: 'GuardianTextEgyptian, Guardian Text Egyptian Web, Georgia, serif',\n    textSans: 'GuardianTextSans, Guardian Text Sans Web, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif',\n};\nconst lineHeights = {\n    tight: 1.15,\n    regular: 1.35,\n    loose: 1.5,\n};\nconst fontWeights = {\n    light: 300,\n    regular: 400,\n    medium: 500,\n    bold: 700,\n};\nconst availableFontWeights = {\n    titlepiece: { bold: true },\n    headline: { light: true, medium: true, bold: true },\n    body: { regular: true, bold: true },\n    textSans: { regular: true, bold: true },\n};\nconst italicsFontWeights = {\n    titlepiece: { bold: false },\n    headline: { light: true, medium: true, bold: false },\n    body: { regular: true, bold: true },\n    textSans: { regular: true, bold: false },\n};\nconst underlineThickness = {\n    textSans: {\n        xxsmall: 2,\n        xsmall: 2,\n        small: 2,\n        medium: 2,\n        large: 3,\n        xlarge: 3,\n        xxlarge: 3,\n        xxxlarge: 4,\n    },\n    body: {\n        xsmall: 2,\n        small: 2,\n        medium: 2,\n    },\n    headline: {\n        xxxsmall: 2,\n        xxsmall: 3,\n        xsmall: 3,\n        small: 3,\n        medium: 4,\n        large: 5,\n        xlarge: 6,\n    },\n    titlepiece: {\n        small: 5,\n        medium: 6,\n        large: 6,\n    },\n};\n// Pixel font size exports\nconst textSansSizes = pxTextSizes.textSans;\nconst bodySizes = pxTextSizes.body;\nconst headlineSizes = pxTextSizes.headline;\nconst titlepieceSizes = pxTextSizes.titlepiece;\n// Computed rem font size exports\nconst remBodySizes = remTextSizes.body;\nconst remTitlepieceSizes = remTextSizes.titlepiece;\nconst remHeadlineSizes = remTextSizes.headline;\nconst remTextSansSizes = remTextSizes.textSans;\n\nexport { availableFontWeights, bodySizes, fontWeights, fonts, headlineSizes, italicsFontWeights, lineHeights, pxTextSizes, remBodySizes, remHeadlineSizes, remTextSansSizes, remTextSizes, remTitlepieceSizes, textSansSizes, titlepieceSizes, underlineThickness };\n//# sourceMappingURL=data.js.map\n","import { pxTextSizes, remTextSizes, italicsFontWeights, availableFontWeights, fontWeights, lineHeights, fonts, underlineThickness } from './data.js';\n\nconst determineFontStyleProperty = (fontStyle, hasItalic) => {\n    switch (fontStyle) {\n        case 'italic':\n            return hasItalic ? 'italic' : undefined;\n        case 'normal':\n            return 'normal';\n        case null:\n        default:\n            return undefined;\n    }\n};\n/**\n * Generates a method that returns a TypographyStyles object for a given font scale.\n *\n * **Example**, generate a method that returns styles for the `headline` category\n * at the `small` level and a default font weight of `medium`:\n *\n * ```\n * const headlineSmall =\n * fontStyleFunction('headline', 'small', { fontWeight: 'medium' });\n * ```\n *\n * **Example usage**, we call the method to get our typography styles and override\n * the default font weight set above with `bold`:\n *\n * ```\n * const headlineSmallStyles =\n * headlineSmall({ fontWeight: 'bold' });\n * ```\n */\nconst fontStyleFunction = (category, level, defaults) => (options) => {\n    const finalFontConfiguration = {\n        ...defaults,\n        ...options,\n    };\n    // Fetch the font size in pixels and rems for the given category and level\n    const pxTextSize = Number(pxTextSizes[category][level]);\n    const remTextSize = Number(remTextSizes[category][level]);\n    // Determine if italic font-style is available for this font weight\n    const hasItalic = italicsFontWeights[category]?.[finalFontConfiguration.fontWeight] ??\n        false;\n    // Determine if setting the font weight is allowed for the given category\n    const isFontWeightAvailable = availableFontWeights[category]?.[finalFontConfiguration.fontWeight] ??\n        false;\n    const fontWeight = isFontWeightAvailable\n        ? fontWeights[finalFontConfiguration.fontWeight]\n        : undefined;\n    // line-height is defined as a unitless value, so we multiply\n    // by the element's font-size in px to get the px value\n    const lineHeight = finalFontConfiguration.unit === 'px'\n        ? `${lineHeights[finalFontConfiguration.lineHeight] * pxTextSize}px`\n        : lineHeights[finalFontConfiguration.lineHeight];\n    return {\n        lineHeight,\n        fontWeight,\n        fontSize: finalFontConfiguration.unit === 'px' ? pxTextSize : `${remTextSize}rem`,\n        fontFamily: fonts[category],\n        textDecorationThickness: Number(underlineThickness[category][level]),\n        fontStyle: determineFontStyleProperty(finalFontConfiguration.fontStyle, hasItalic),\n    };\n};\n/**\n * Generates a method that evaluates a given font scale function with the\n * provided options and returns the typography styles as a CSS string.\n *\n * For an example usage see our {@link [typography string function exports](./index.ts)}.\n *\n * The CSS string exposes a scoped variable: `--source-text-decoration-thickness`,\n * so consumers can use the recommended value for the font/weight combination.\n *\n * For the text underline thickness mappings see {@link underlineThickness}.\n */\nconst fontStyleToStringFunction = (typographyFunction) => (options) => {\n    const { fontFamily, fontSize, fontStyle, fontWeight, lineHeight, textDecorationThickness, } = typographyFunction(options);\n    return `\n\t\t\tfont-family: ${fontFamily};\n\t\t\tfont-size: ${typeof fontSize === 'number' ? `${fontSize}px` : fontSize};\n\t\t\tline-height: ${lineHeight};\n\t\t\t${fontWeight ? `font-weight: ${fontWeight}` : ''};\n\t\t\t${fontStyle ? `font-style: ${fontStyle}` : ''};\n\n\t\t\t/*\n\t\t\t * Child elements (e.g. <Link/>) can use this variable\n\t\t\t * to set the thickness of their underline.\n\t\t\t *\n\t\t\t * The thickness for each font type and weight is defined\n\t\t\t * in the underlineThickness object.\n\t\t\t */\n\t\t\t--source-text-decoration-thickness: ${textDecorationThickness === undefined\n        ? 'auto'\n        : `${textDecorationThickness}px`};\n\t\t`;\n};\n\nexport { fontStyleFunction, fontStyleToStringFunction };\n//# sourceMappingURL=font-styles.js.map\n","import { fontStyleFunction } from './font-styles.js';\n\nconst titlepieceDefaults = {\n    lineHeight: 'tight',\n    fontWeight: 'bold',\n    fontStyle: null,\n    unit: 'rem',\n};\nconst titlepiece = {\n    small: fontStyleFunction('titlepiece', 'small', titlepieceDefaults),\n    medium: fontStyleFunction('titlepiece', 'medium', titlepieceDefaults),\n    large: fontStyleFunction('titlepiece', 'large', titlepieceDefaults),\n};\nconst headlineDefaults = {\n    lineHeight: 'tight',\n    fontWeight: 'medium',\n    fontStyle: null,\n    unit: 'rem',\n};\nconst headline = {\n    xxxsmall: fontStyleFunction('headline', 'xxxsmall', headlineDefaults),\n    xxsmall: fontStyleFunction('headline', 'xxsmall', headlineDefaults),\n    xsmall: fontStyleFunction('headline', 'xsmall', headlineDefaults),\n    small: fontStyleFunction('headline', 'small', headlineDefaults),\n    medium: fontStyleFunction('headline', 'medium', headlineDefaults),\n    large: fontStyleFunction('headline', 'large', headlineDefaults),\n    xlarge: fontStyleFunction('headline', 'xlarge', headlineDefaults),\n};\nconst bodyDefaults = {\n    lineHeight: 'loose',\n    fontWeight: 'regular',\n    fontStyle: null,\n    unit: 'rem',\n};\nconst body = {\n    xsmall: fontStyleFunction('body', 'xsmall', bodyDefaults),\n    small: fontStyleFunction('body', 'small', bodyDefaults),\n    medium: fontStyleFunction('body', 'medium', bodyDefaults),\n};\nconst textSansDefaults = {\n    lineHeight: 'regular',\n    fontWeight: 'regular',\n    fontStyle: null,\n    unit: 'rem',\n};\nconst textSans = {\n    xxsmall: fontStyleFunction('textSans', 'xxsmall', textSansDefaults),\n    xsmall: fontStyleFunction('textSans', 'xsmall', textSansDefaults),\n    small: fontStyleFunction('textSans', 'small', textSansDefaults),\n    medium: fontStyleFunction('textSans', 'medium', textSansDefaults),\n    large: fontStyleFunction('textSans', 'large', textSansDefaults),\n    xlarge: fontStyleFunction('textSans', 'xlarge', textSansDefaults),\n    xxlarge: fontStyleFunction('textSans', 'xxlarge', textSansDefaults),\n    xxxlarge: fontStyleFunction('textSans', 'xxxlarge', textSansDefaults),\n};\n\nexport { body, headline, textSans, titlepiece };\n//# sourceMappingURL=api.js.map\n","import { titlepiece as titlepiece$1, headline as headline$1, body as body$1, textSans as textSans$1 } from './api.js';\nimport { fontStyleToStringFunction } from './font-styles.js';\nexport { bodySizes, fontWeights, fonts, headlineSizes, lineHeights, remBodySizes, remHeadlineSizes, remTextSansSizes, remTitlepieceSizes, textSansSizes, titlepieceSizes } from './data.js';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--titlepiece) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/358767)\n *\n * ```\n * font-family: 'GT Guardian Titlepiece';\n * ```\n */\nconst titlepiece = {\n    small: fontStyleToStringFunction(titlepiece$1.small),\n    medium: fontStyleToStringFunction(titlepiece$1.medium),\n    large: fontStyleToStringFunction(titlepiece$1.large),\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--headline) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/7310bd)\n *\n * ```\n * font-family: 'GH Guardian Headline';\n * ```\n */\nconst headline = {\n    xxxsmall: fontStyleToStringFunction(headline$1.xxxsmall),\n    xxsmall: fontStyleToStringFunction(headline$1.xxsmall),\n    xsmall: fontStyleToStringFunction(headline$1.xsmall),\n    small: fontStyleToStringFunction(headline$1.small),\n    medium: fontStyleToStringFunction(headline$1.medium),\n    large: fontStyleToStringFunction(headline$1.large),\n    xlarge: fontStyleToStringFunction(headline$1.xlarge),\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--body) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/88cd8e)\n *\n * ```\n * font-family: 'GuardianTextEgyptian';\n * ```\n */\nconst body = {\n    xsmall: fontStyleToStringFunction(body$1.xsmall),\n    small: fontStyleToStringFunction(body$1.small),\n    medium: fontStyleToStringFunction(body$1.medium),\n};\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_typography--text-sans) •\n * [Design System](https://theguardian.design/2a1e5182b/p/602314-typography/t/076605)\n *\n * ```\n * font-family: 'GuardianTextSans';\n * ```\n */\nconst textSans = {\n    xxsmall: fontStyleToStringFunction(textSans$1.xxsmall),\n    xsmall: fontStyleToStringFunction(textSans$1.xsmall),\n    small: fontStyleToStringFunction(textSans$1.small),\n    medium: fontStyleToStringFunction(textSans$1.medium),\n    large: fontStyleToStringFunction(textSans$1.large),\n    xlarge: fontStyleToStringFunction(textSans$1.xlarge),\n    xxlarge: fontStyleToStringFunction(textSans$1.xxlarge),\n    xxxlarge: fontStyleToStringFunction(textSans$1.xxxlarge),\n};\n\nexport { body, headline, textSans, titlepiece };\n//# sourceMappingURL=index.js.map\n","const rootPixelFontSize = 16;\nconst pxToRem = (px) => px / rootPixelFontSize;\n\nexport { pxToRem, rootPixelFontSize };\n//# sourceMappingURL=px-to-rem.js.map\n"],"names":["colors","palette","brand","brandAlt","neutral","error","success","news","opinion","sport","culture","lifestyle","labs","specialReport","specialReportAlt","focus","background","primary","secondary","inverse","ctaPrimary","ctaPrimaryHover","ctaSecondary","ctaSecondaryHover","ctaTertiaryHover","input","inputChecked","brandAltBackground","border","ctaTertiary","inputHover","inputActive","focusHalo","line","text","supporting","anchorPrimary","anchorSecondary","userInput","inputLabel","inputError","inputLabelSupporting","groupLabel","groupLabelSupporting","newsInverse","brandText","anchorPrimaryHover","brandAltText","pxTextSizes","textSans","xxsmall","xsmall","small","medium","large","xlarge","xxlarge","xxxlarge","body","headline","xxxsmall","titlepiece","remTextSizes","pxToRem","fonts","lineHeights","tight","regular","loose","fontWeights","light","bold","availableFontWeights","italicsFontWeights","underlineThickness","determineFontStyleProperty","fontStyle","hasItalic","undefined","fontStyleFunction","category","level","defaults","options","finalFontConfiguration","pxTextSize","Number","remTextSize","fontWeight","lineHeight","unit","fontSize","fontFamily","textDecorationThickness","fontStyleToStringFunction","typographyFunction","titlepieceDefaults","headlineDefaults","bodyDefaults","textSansDefaults","titlepiece$1","headline$1","body$1","textSans$1","px"],"sourceRoot":""}