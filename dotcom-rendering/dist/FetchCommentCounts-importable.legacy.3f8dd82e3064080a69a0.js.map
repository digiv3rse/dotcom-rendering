{"version":3,"file":"FetchCommentCounts-importable.legacy.3f8dd82e3064080a69a0.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/../node_modules/@kossnocorp/desvg/index.js","webpack://@guardian/dotcom-rendering/../node_modules/@kossnocorp/desvg/react.js","webpack://@guardian/dotcom-rendering/./src/web/components/CardCommentCount.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/FetchCommentCounts.importable.tsx","webpack://@guardian/dotcom-rendering/./src/lib/formatters.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/formatCount.ts","webpack://@guardian/dotcom-rendering/./src/web/lib/useApi.tsx","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticleDesign.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticleDisplay.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticlePillar.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/libs/src/format/ArticleSpecial.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/breakpoints/breakpoints.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/index.ts","webpack://@guardian/dotcom-rendering/../../../libs/@guardian/source-foundations/src/mq/mq.ts","webpack://@guardian/dotcom-rendering/./src/static/icons/comment.svg"],"sourcesContent":["module.exports = desvg\n\nfunction desvg (h, svg, props) {\n  props = props || {}\n\n  var content = svg.content\n  var attributes = svg.attributes\n\n  return function (props) {\n    return h(\n      'svg',\n      Object.assign(\n        { dangerouslySetInnerHTML: { __html: content } },\n        attributes,\n        props\n      ),\n      props && props.children\n    )\n  }\n}\n","var desvg = require('.')\nvar React = require('react')\n\nmodule.exports = desvg.bind(null, React.createElement.bind(React))\n","import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { between, textSans } from '@guardian/source-foundations';\nimport CommentIcon from '../../static/icons/comment.svg';\nimport { decidePalette } from '../lib/decidePalette';\nconst containerStyles = (palette, isDynamo) => css `\n\tdisplay: flex;\n\tflex-direction: row;\n\t${textSans.xxsmall({ lineHeight: 'tight' })};\n\tmargin-top: -4px;\n\tpadding-left: 5px;\n\tpadding-right: 5px;\n\tcolor: ${isDynamo ? palette.text.dynamoHeadline : palette.text.cardFooter};\n`;\nconst svgStyles = (palette, isDynamo) => css `\n\tsvg {\n\t\tmargin-bottom: -5px;\n\t\theight: 14px;\n\t\twidth: 14px;\n\t\tmargin-right: 2px;\n\t\tfill: ${isDynamo\n    ? palette.text.dynamoHeadline\n    : palette.text.cardFooter};\n\t}\n`;\nconst longStyles = css `\n\tdisplay: block;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: none;\n\t}\n`;\nconst shortStyles = css `\n\tdisplay: none;\n\n\t${between.leftCol.and.wide} {\n\t\tdisplay: block;\n\t}\n`;\nexport const CardCommentCount = ({ containerPalette, format, short, long, isDynamo, }) => {\n    const palette = decidePalette(format, containerPalette);\n    return (_jsxs(\"div\", { css: containerStyles(palette, isDynamo), children: [_jsx(\"div\", { css: svgStyles(palette, isDynamo), children: _jsx(CommentIcon, {}) }), _jsx(\"div\", { css: longStyles, \"aria-hidden\": \"true\", children: long }), _jsx(\"div\", { css: shortStyles, \"aria-hidden\": \"true\", children: short })] }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { CacheProvider } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { getEmotionCache } from '../browser/islands/emotion';\nimport { formatCount } from '../lib/formatCount';\nimport { useApi } from '../lib/useApi';\nimport { CardCommentCount } from './CardCommentCount';\n/**\n * @description\n * Reads the dom looking for markers that contain the information needed to render the\n * count\n */\nfunction extractMarkers() {\n    const markers = [];\n    document\n        .querySelectorAll('[data-discussion-id]')\n        .forEach((element) => {\n        if (element instanceof HTMLElement) {\n            try {\n                const { discussionId, format, isDynamo, containerPalette } = element.dataset;\n                if (discussionId && format) {\n                    markers.push({\n                        discussionId,\n                        format: JSON.parse(format),\n                        isDynamo: isDynamo ? true : undefined,\n                        containerPalette,\n                    });\n                }\n            }\n            catch (e) {\n                // Do nothing\n            }\n        }\n    });\n    return markers;\n}\n/**\n * @description\n * Creates the url used to fetch the count data\n */\nfunction buildUrl(markers) {\n    const discussionIds = markers.flatMap((marker) => marker.discussionId); // E.g.: ['/p/3pm9v', '/p/4k83z', '/p/6bnba']\n    return `https://api.nextgen.guardianapps.co.uk/discussion/comment-counts.json?shortUrls=${discussionIds.join(',')}`;\n}\n/**\n * @description\n * Converts the count number into a formatted string and parses the stringified\n * format\n *\n * E.g.:\n *   - The 'long' version of 12345 is 12,345\n *   - The 'short' version of 12345 is 12k\n */\nfunction enhanceCounts(counts, markers) {\n    return counts.map(({ count, id }) => {\n        const { long, short } = formatCount(count);\n        const thisMarker = markers.find((marker) => marker.discussionId === id);\n        // We don't get format in the api response so look it up in the array\n        // of DOM markers\n        const format = thisMarker?.format;\n        const isDynamo = thisMarker?.isDynamo;\n        const containerPalette = thisMarker?.containerPalette;\n        return {\n            id,\n            long,\n            short,\n            format,\n            isDynamo,\n            containerPalette,\n        };\n    });\n}\n/**\n * @description\n * Takes the long and short version of each count and renders onto the page with react\n */\nfunction renderCounts(counts) {\n    counts.forEach((count) => {\n        const container = document.querySelector(`[data-discussion-id=\"${count.id}\"]`);\n        if (container) {\n            const root = createRoot(container);\n            root.render(_jsx(CacheProvider, { value: getEmotionCache(), children: _jsx(CardCommentCount, { format: count.format, short: count.short, long: count.long, isDynamo: count.isDynamo, containerPalette: count.containerPalette }) }));\n            container.setAttribute('aria-label', `${count.short} Comments`);\n        }\n    });\n}\n/**\n * @description\n * Makes an api call to fetch the comment counts for all Cards on the page\n *\n * For each Card with comments found (by looking for a marker element) it:\n *\n * - Fetches the comment count data in a single call to Frontend's discussion API\n * - Enhances the data, transforming the count from a number to formatted strings\n * - Uses react 'render' to add the comment counts to their placeholders\n *\n * We do it this was so that we can make a single call, but still render multiple comment counts\n * Using an individual island for each comment count could be more costly, especially on fronts\n *\n * @param {boolean} repeat If true, the fetch call will be repeated on an interval\n */\nexport const FetchCommentCounts = ({ repeat }) => {\n    const [url, setUrl] = useState();\n    useEffect(() => {\n        const markers = extractMarkers();\n        setUrl(buildUrl(markers));\n    }, []);\n    useApi(url, {\n        refreshInterval: repeat ? 15_000 : 0,\n        refreshWhenHidden: false,\n        onSuccess: (data) => {\n            // It's possible the DOM has been mutated and there are new Cards showing\n            // so we check again\n            const markers = extractMarkers();\n            if (data?.counts) {\n                try {\n                    renderCounts(enhanceCounts(data.counts, markers));\n                }\n                catch (e) {\n                    // Do nothing\n                }\n            }\n            // Make sure the list of discussionIds we fetch counts for is up to date\n            setUrl(buildUrl(markers));\n        },\n    });\n    return null;\n};\n","const integerCommas = (val) => {\n    const digits = val.toFixed(0).split('');\n    const len = digits.length;\n    for (let i = digits.length - 1; i >= 1; i -= 1) {\n        if ((len - i) % 3 === 0) {\n            digits.splice(i, 0, ',');\n        }\n    }\n    return digits.join('');\n};\nexport { integerCommas };\n","import { integerCommas } from '../../lib/formatters';\nexport const formatCount = (count) => {\n    if (count === undefined)\n        return { short: '…', long: '…' };\n    if (count === 0)\n        return { short: '0', long: '0' };\n    const countAsInteger = parseInt(count.toFixed(0), 10);\n    const displayCountLong = integerCommas(countAsInteger);\n    const displayCountShort = countAsInteger > 10000\n        ? `${Math.round(countAsInteger / 1000)}k`\n        : countAsInteger.toString();\n    return {\n        short: displayCountShort,\n        long: displayCountLong,\n    };\n};\n","import useSWR from 'swr';\nfunction checkForErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText ||\n            `useApi | An api call returned HTTP status ${response.status}`);\n    }\n    return response;\n}\nconst fetcher = (init) => (url) => fetch(url, init)\n    .then(checkForErrors)\n    .then((res) => res.json());\n/**\n * @description\n * A custom hook to make a GET request using the given url using the SWR lib (https://swr.vercel.app/)\n * returns { loading, error, data }\n * @param {String} url - The url to fetch\n * @param {SWRConfiguration} options - The SWR config object - https://swr.vercel.app/docs/options\n * @param {RequestInit} init - The fetch init object - https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options\n * */\nexport const useApi = (url, options, init) => {\n    const { data, error } = useSWR(url, fetcher(init), options);\n    return {\n        data,\n        error,\n        loading: !!url && !error && !data,\n    };\n};\n","export enum ArticleDesign {\n\tStandard,\n\tGallery,\n\tAudio,\n\tVideo,\n\tReview,\n\tAnalysis,\n\tExplainer,\n\tComment,\n\tLetter,\n\tFeature,\n\tLiveBlog,\n\tDeadBlog,\n\tRecipe,\n\tMatchReport,\n\tInterview,\n\tEditorial,\n\tQuiz,\n\tInteractive,\n\tPhotoEssay,\n\tPrintShop,\n\tObituary,\n\tCorrection,\n\tFullPageInteractive,\n\tNewsletterSignup,\n\tTimeline,\n\tProfile,\n}\n","export enum ArticleDisplay {\n\tStandard,\n\tImmersive,\n\tShowcase,\n\tNumberedList,\n}\n","export enum ArticlePillar {\n\tNews = 0,\n\tOpinion = 1,\n\tSport = 2,\n\tCulture = 3,\n\tLifestyle = 4,\n}\n","export enum ArticleSpecial {\n\tSpecialReport = 5,\n\tLabs = 6,\n\tSpecialReportAlt = 7,\n}\n","export type Breakpoint =\n\t| 'mobile'\n\t| 'mobileMedium'\n\t| 'mobileLandscape'\n\t| 'phablet'\n\t| 'tablet'\n\t| 'desktop'\n\t| 'leftCol'\n\t| 'wide';\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page) •\n * [Design System](https://theguardian.design/2a1e5182b/p/41be19-grids)\n */\nexport const breakpoints = {\n\tmobile: 320,\n\tmobileMedium: 375,\n\tmobileLandscape: 480,\n\tphablet: 660,\n\ttablet: 740,\n\tdesktop: 980,\n\tleftCol: 1140,\n\twide: 1300,\n} as const;\n","import { palette } from './colour/palette';\n\n// accessibility\nexport { descriptionId } from './accessibility/description-id';\nexport { focusHalo, focusHaloSpaced } from './accessibility/focus-halo';\nexport { generateSourceId } from './accessibility/generate-source-id';\nexport { visuallyHidden } from './accessibility/visually-hidden';\n\n// animation\nexport { transitions } from './animation/transitions';\n\n// breakpoints\nexport type { Breakpoint } from './breakpoints/breakpoints';\nexport { breakpoints } from './breakpoints/breakpoints';\n\n// mq\nexport { between, from, until } from './mq/mq';\n\n// palette\nexport { palette };\n\n/**\n * @deprecated exports - to be removed in a future major version.\n * Colours should now be imported from the `palette` object.\n */\nexport {\n\tbackground,\n\tbrandBackground,\n\tbrandAltBackground,\n\tborder,\n\tbrandBorder,\n\tbrandAltBorder,\n\tline,\n\tbrandLine,\n\tbrandAltLine,\n\ttext,\n\tbrandText,\n\tbrandAltText,\n} from './colour/palette';\n\n/**\n * @deprecated exports - to be removed in a future major version.\n * Colours should now be imported from the `palette` object.\n */\nexport const {\n\tbrand,\n\tbrandAlt,\n\tneutral,\n\terror,\n\tsuccess,\n\tnews,\n\topinion,\n\tsport,\n\tculture,\n\tlifestyle,\n\tlabs,\n\tspecialReport,\n\tfocus,\n} = palette;\n\n// size\nexport {\n\theight,\n\ticonSize,\n\tremHeight,\n\tremWidth,\n\tsize,\n\twidth,\n} from './size/size';\n\n// space\nexport { space, remSpace } from './space/space';\n\n// typography\nexport {\n\ttitlepiece,\n\theadline,\n\tbody,\n\ttextSans,\n\ttitlepieceSizes,\n\theadlineSizes,\n\tbodySizes,\n\ttextSansSizes,\n\tremTitlepieceSizes,\n\tremHeadlineSizes,\n\tremBodySizes,\n\tremTextSansSizes,\n\tfonts,\n\tfontWeights,\n\tlineHeights,\n} from './typography';\n\nexport {\n\tbody as bodyObjectStyles,\n\theadline as headlineObjectStyles,\n\ttextSans as textSansObjectStyles,\n\ttitlepiece as titlepieceObjectStyles,\n} from './typography/obj';\nexport type {\n\tScaleUnit,\n\tCategory,\n\tLineHeight,\n\tFontWeight,\n\tFontStyle,\n\tFontWeightDefinition,\n\tOption,\n\tTypographyStyles,\n\tTypographySizes,\n\tTitlepieceSizes,\n\tHeadlineSizes,\n\tBodySizes,\n\tTextSansSizes,\n\tFs,\n\tFontScaleFunction,\n\tFontScaleFunctionStr,\n\tFontScaleArgs,\n} from './typography/types';\n\n// utils\nexport { appearance } from './utils/supports-queries';\nexport { FocusStyleManager } from './accessibility/focus-style-manager';\nexport { pxToRem, rootPixelFontSize } from './utils/px-to-rem';\nexport { resets } from './utils/resets';\nexport { svgBackgroundImage } from './utils/svg-background-image';\n","import { breakpoints } from '../breakpoints/breakpoints';\nimport type { Breakpoint } from '../breakpoints/breakpoints';\n\nexport type BreakpointMap = {\n\t[key in Breakpoint]: string;\n};\n\nconst minWidth = (from: number): string => `@media (min-width: ${`${from}px`})`;\n\nconst maxWidth = (until: number): string =>\n\t`@media (max-width: ${`${until - 1}px`})`;\n\nconst minWidthMaxWidth = (from: number, until: number): string =>\n\t`@media (min-width: ${`${from}px`}) and (max-width: ${`${until - 1}px`})`;\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#from)\n *\n * @example\n *\tconst styles = css`\n *\t\t${from.mobileLandscape} {\n *\t\t\tpadding: 0 20px;\n *\t\t}\n * `;\n */\nexport const from: BreakpointMap = {\n\tmobile: minWidth(breakpoints.mobile),\n\tmobileMedium: minWidth(breakpoints.mobileMedium),\n\tmobileLandscape: minWidth(breakpoints.mobileLandscape),\n\tphablet: minWidth(breakpoints.phablet),\n\ttablet: minWidth(breakpoints.tablet),\n\tdesktop: minWidth(breakpoints.desktop),\n\tleftCol: minWidth(breakpoints.leftCol),\n\twide: minWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#until)\n *\n * @example\n *\tconst styles = css`\n *\t\t${until.wide} {\n *\t\t\tpadding: 0 40px;\n *\t\t}\n * `;\n */\nexport const until: BreakpointMap = {\n\tmobile: maxWidth(breakpoints.mobile),\n\tmobileMedium: maxWidth(breakpoints.mobileMedium),\n\tmobileLandscape: maxWidth(breakpoints.mobileLandscape),\n\tphablet: maxWidth(breakpoints.phablet),\n\ttablet: maxWidth(breakpoints.tablet),\n\tdesktop: maxWidth(breakpoints.desktop),\n\tleftCol: maxWidth(breakpoints.leftCol),\n\twide: maxWidth(breakpoints.wide),\n};\n\n/**\n * [Storybook](https://guardian.github.io/csnx/?path=/docs/source-foundations_media-queries--page#betweenand)\n *\n * @example\n *\tconst styles = css`\n *\t\t${between.phablet.and.desktop} {\n *\t\t\tpadding: 0 32px;\n *\t\t}\n * `;\n */\nexport const between = {\n\tmobile: {\n\t\tand: {\n\t\t\tmobileMedium: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t),\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobile,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobile, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobile, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobile, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileMedium: {\n\t\tand: {\n\t\t\tmobileLandscape: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileMedium,\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t),\n\t\t\tphablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.phablet),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileMedium, breakpoints.wide),\n\t\t},\n\t},\n\tmobileLandscape: {\n\t\tand: {\n\t\t\tphablet: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.phablet,\n\t\t\t),\n\t\t\ttablet: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.desktop,\n\t\t\t),\n\t\t\tleftCol: minWidthMaxWidth(\n\t\t\t\tbreakpoints.mobileLandscape,\n\t\t\t\tbreakpoints.leftCol,\n\t\t\t),\n\t\t\twide: minWidthMaxWidth(breakpoints.mobileLandscape, breakpoints.wide),\n\t\t},\n\t},\n\tphablet: {\n\t\tand: {\n\t\t\ttablet: minWidthMaxWidth(breakpoints.phablet, breakpoints.tablet),\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.phablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.phablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.phablet, breakpoints.wide),\n\t\t},\n\t},\n\ttablet: {\n\t\tand: {\n\t\t\tdesktop: minWidthMaxWidth(breakpoints.tablet, breakpoints.desktop),\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.tablet, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.tablet, breakpoints.wide),\n\t\t},\n\t},\n\tdesktop: {\n\t\tand: {\n\t\t\tleftCol: minWidthMaxWidth(breakpoints.desktop, breakpoints.leftCol),\n\t\t\twide: minWidthMaxWidth(breakpoints.desktop, breakpoints.wide),\n\t\t},\n\t},\n\tleftCol: {\n\t\tand: {\n\t\t\twide: minWidthMaxWidth(breakpoints.leftCol, breakpoints.wide),\n\t\t},\n\t},\n};\n","\nmodule.exports = {\"attributes\":{\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\"},\"content\":\"<path d=\\\"M13 0l1 1v7l-1 1H7l-2 3H4V9H2L1 8V1l1-1h11z\\\"></path>\"}\nvar desvg = require('@kossnocorp/desvg/react')\nmodule.exports = desvg(module.exports)\n"],"names":["module","exports","h","svg","props","content","attributes","Object","assign","dangerouslySetInnerHTML","__html","children","desvg","React","bind","createElement","containerStyles","palette","isDynamo","css","textSans","lineHeight","text","dynamoHeadline","cardFooter","svgStyles","longStyles","between","shortStyles","CardCommentCount","containerPalette","format","short","long","decidePalette","_jsxs","_jsx","CommentIcon","extractMarkers","markers","document","querySelectorAll","forEach","element","HTMLElement","dataset","discussionId","push","JSON","parse","undefined","e","buildUrl","discussionIds","flatMap","marker","join","FetchCommentCounts","repeat","useState","url","setUrl","useEffect","useApi","refreshInterval","refreshWhenHidden","onSuccess","data","counts","map","count","id","formatCount","thisMarker","find","enhanceCounts","container","querySelector","createRoot","render","CacheProvider","value","getEmotionCache","setAttribute","countAsInteger","parseInt","toFixed","displayCountLong","val","digits","split","len","length","i","splice","integerCommas","Math","round","toString","checkForErrors","response","ok","Error","statusText","status","options","init","useSWR","fetch","then","res","json","fetcher","error","loading","ArticleDesign","ArticleDisplay","ArticlePillar","ArticleSpecial","breakpoints","mobile","mobileMedium","mobileLandscape","phablet","tablet","desktop","leftCol","wide","maxWidth","until","minWidthMaxWidth","from","minWidth","and"],"sourceRoot":""}