{"version":3,"file":"SlotBodyEnd-importable.legacy.6af7d1907e1ee8bd3fd5.js","mappings":"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","sources":["webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd/BrazeEpic.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd/ReaderRevenueEpic.tsx","webpack://@guardian/dotcom-rendering/./src/web/components/SlotBodyEnd.importable.tsx"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getBrazeMetaFromUrlFragment } from '../../lib/braze/forceBrazeMessage';\nimport { useIsInView } from '../../lib/useIsInView';\nimport { useOnce } from '../../lib/useOnce';\nimport { suppressForTaylorReport } from '../../lib/braze/taylorReport';\nconst wrapperMargins = css `\n\tmargin: 18px 0;\n`;\nconst COMPONENT_TYPE = 'RETENTION_EPIC';\nexport const canShowBrazeEpic = async (brazeMessages, brazeArticleContext, contentType, tags) => {\n    if (contentType.toLowerCase() === 'interactive') {\n        return { show: false };\n    }\n    const forcedBrazeMeta = getBrazeMetaFromUrlFragment();\n    if (forcedBrazeMeta) {\n        return {\n            show: true,\n            meta: forcedBrazeMeta,\n        };\n    }\n    if (suppressForTaylorReport(tags)) {\n        return { show: false };\n    }\n    try {\n        const message = await brazeMessages.getMessageForEndOfArticle(brazeArticleContext);\n        if (message.extras) {\n            return {\n                show: true,\n                meta: {\n                    dataFromBraze: message.extras,\n                    logImpressionWithBraze: () => {\n                        message.logImpression();\n                    },\n                    logButtonClickWithBraze: (internalButtonId) => {\n                        message.logButtonClick(internalButtonId);\n                    },\n                },\n            };\n        }\n        return { show: false };\n    }\n    catch (e) {\n        return { show: false };\n    }\n};\nconst BrazeEpicWithSatisfiedDependencies = ({ BrazeComponent, meta, countryCode, idApiUrl, }) => {\n    const [hasBeenSeen, setNode] = useIsInView({\n        rootMargin: '-18px',\n        threshold: 0,\n        debounce: true,\n    });\n    const epicRef = useRef(null);\n    useOnce(() => {\n        submitComponentEvent({\n            component: {\n                componentType: COMPONENT_TYPE,\n                id: meta.dataFromBraze.ophanComponentId,\n            },\n            action: 'INSERT',\n        });\n    }, [meta.dataFromBraze, epicRef.current]);\n    useEffect(() => {\n        if (hasBeenSeen) {\n            meta.logImpressionWithBraze();\n            // Log VIEW event with Ophan\n            submitComponentEvent({\n                component: {\n                    componentType: COMPONENT_TYPE,\n                    id: meta.dataFromBraze.ophanComponentId,\n                },\n                action: 'VIEW',\n            });\n        }\n    }, [hasBeenSeen, meta]);\n    const componentName = meta.dataFromBraze.componentName;\n    if (!componentName)\n        return null;\n    return (_jsx(\"div\", { ref: setNode, css: wrapperMargins, children: _jsx(\"div\", { ref: epicRef, children: _jsx(BrazeComponent, { componentName: componentName, brazeMessageProps: meta.dataFromBraze, subscribeToNewsletter: async (newsletterId) => {\n                    await fetch(`${idApiUrl}/users/me/newsletters`, {\n                        method: 'PATCH',\n                        body: JSON.stringify({\n                            id: newsletterId,\n                            subscribed: true,\n                        }),\n                        credentials: 'include',\n                    });\n                }, countryCode: countryCode, logButtonClickWithBraze: meta.logButtonClickWithBraze, submitComponentEvent: submitComponentEvent }) }) }));\n};\nexport const MaybeBrazeEpic = ({ meta, countryCode, idApiUrl }) => {\n    const [BrazeComponent, setBrazeComponent] = useState();\n    useEffect(() => {\n        import(\n        /* webpackChunkName: \"guardian-braze-components-end-of-article\" */ '@guardian/braze-components/end-of-article')\n            .then((module) => {\n            setBrazeComponent(() => module.BrazeEndOfArticleComponent);\n        })\n            .catch((error) => window.guardian.modules.sentry.reportError(error, 'braze-epic'));\n    }, []);\n    return (_jsx(_Fragment, { children: BrazeComponent ? (_jsx(BrazeEpicWithSatisfiedDependencies, { BrazeComponent: BrazeComponent, meta: meta, countryCode: countryCode, idApiUrl: idApiUrl })) : (_jsx(\"div\", {})) }));\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport { cmp } from '@guardian/consent-management-platform';\nimport { getCookie, storage } from '@guardian/libs';\nimport { getEpic, getEpicViewLog } from '@guardian/support-dotcom-components';\nimport { useEffect, useState } from 'react';\nimport { initPerf } from '../../browser/initPerf';\nimport { submitComponentEvent } from '../../browser/ophan/ophan';\nimport { getLastOneOffContributionTimestamp, hasCmpConsentForArticleCount, hasCmpConsentForBrowserId, hasOptedOutOfArticleCount, isRecurringContributor, lazyFetchEmailWithTimeout, MODULES_VERSION, shouldHideSupportMessaging, } from '../../lib/contributions';\nimport { setAutomat } from '../../lib/setAutomat';\nconst wrapperMargins = css `\n\tmargin: 18px 0;\n\tclear: both;\n`;\nconst buildPayload = async (data) => ({\n    tracking: {\n        ophanPageId: window.guardian.config.ophan.pageViewId,\n        platformId: 'GUARDIAN_WEB',\n        clientName: 'dcr',\n        referrerUrl: window.location.origin + window.location.pathname,\n    },\n    targeting: {\n        contentType: data.contentType,\n        sectionId: data.sectionId,\n        shouldHideReaderRevenue: data.shouldHideReaderRevenue,\n        isMinuteArticle: data.isMinuteArticle,\n        isPaidContent: data.isPaidContent,\n        tags: data.tags,\n        showSupportMessaging: !shouldHideSupportMessaging(data.isSignedIn ?? false),\n        isRecurringContributor: isRecurringContributor(data.isSignedIn ?? false),\n        lastOneOffContributionDate: getLastOneOffContributionTimestamp(),\n        epicViewLog: getEpicViewLog(storage.local),\n        weeklyArticleHistory: await data.asyncArticleCount,\n        hasOptedOutOfArticleCount: await hasOptedOutOfArticleCount(),\n        mvtId: Number(getCookie({ name: 'GU_mvt_id', shouldMemoize: true })),\n        countryCode: data.countryCode,\n        modulesVersion: MODULES_VERSION,\n        url: window.location.origin + window.location.pathname,\n        browserId: (await hasCmpConsentForBrowserId())\n            ? data.browserId\n            : undefined,\n        isSignedIn: data.isSignedIn,\n    },\n});\nexport const canShowReaderRevenueEpic = async (data) => {\n    const { isSignedIn, shouldHideReaderRevenue, isPaidContent, contributionsServiceUrl, idApiUrl, stage, } = data;\n    if (shouldHideReaderRevenue || isPaidContent) {\n        // We never serve Reader Revenue epics in this case\n        return Promise.resolve({ show: false });\n    }\n    const dataPerf = initPerf('contributions-epic-data');\n    dataPerf.start();\n    const contributionsPayload = await buildPayload(data);\n    const response = await getEpic(contributionsServiceUrl, contributionsPayload);\n    const module = response.data?.module;\n    if (!module) {\n        return { show: false };\n    }\n    const fetchEmail = isSignedIn\n        ? lazyFetchEmailWithTimeout(idApiUrl)\n        : undefined;\n    const hasConsentForArticleCount = await hasCmpConsentForArticleCount();\n    return {\n        show: true,\n        meta: {\n            module,\n            fetchEmail,\n            hasConsentForArticleCount,\n            stage,\n        },\n    };\n};\nexport const ReaderRevenueEpic = ({ module, fetchEmail, hasConsentForArticleCount, stage, }) => {\n    const [Epic, setEpic] = useState();\n    const openCmp = () => {\n        cmp.showPrivacyManager();\n    };\n    useEffect(() => {\n        setAutomat();\n        const modulePerf = initPerf('contributions-epic-module');\n        modulePerf.start();\n        window\n            .guardianPolyfilledImport(module.url)\n            .then((epicModule) => {\n            modulePerf.end();\n            setEpic(() => epicModule.ContributionsEpic); // useState requires functions to be wrapped\n        })\n            .catch((error) => {\n            const msg = error instanceof Error\n                ? `Error importing RR epic: ${error.message}`\n                : 'Unknown error';\n            console.log(msg);\n            window.guardian.modules.sentry.reportError(new Error(msg), 'rr-epic');\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    if (Epic !== undefined) {\n        return (_jsx(\"div\", { css: wrapperMargins, children: _jsx(Epic, { ...module.props, fetchEmail: fetchEmail, submitComponentEvent: submitComponentEvent, openCmp: openCmp, hasConsentForArticleCount: hasConsentForArticleCount, stage: stage }) }));\n    }\n    return null;\n};\n","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { getCookie } from '@guardian/libs';\nimport { useEffect, useState } from 'react';\nimport { getArticleCounts } from '../../lib/articleCount';\nimport { getLocaleCode } from '../lib/getCountryCode';\nimport { pickMessage } from '../lib/messagePicker';\nimport { useBraze } from '../lib/useBraze';\nimport { useOnce } from '../lib/useOnce';\nimport { canShowBrazeEpic, MaybeBrazeEpic } from './SlotBodyEnd/BrazeEpic';\nimport { canShowReaderRevenueEpic, ReaderRevenueEpic, } from './SlotBodyEnd/ReaderRevenueEpic';\nconst buildReaderRevenueEpicConfig = (canShowData) => {\n    return {\n        candidate: {\n            id: 'reader-revenue-banner',\n            canShow: () => canShowReaderRevenueEpic(canShowData),\n            show: (meta) => () => {\n                return _jsx(ReaderRevenueEpic, { ...meta });\n            },\n        },\n        timeoutMillis: null,\n    };\n};\nconst buildBrazeEpicConfig = (brazeMessages, countryCode, idApiUrl, contentType, brazeArticleContext, tags) => {\n    return {\n        candidate: {\n            id: 'braze-epic',\n            canShow: () => canShowBrazeEpic(brazeMessages, brazeArticleContext, contentType, tags),\n            show: (meta) => () => (_jsx(MaybeBrazeEpic, { meta: meta, countryCode: countryCode, idApiUrl: idApiUrl })),\n        },\n        timeoutMillis: 2000,\n    };\n};\nexport const SlotBodyEnd = ({ contentType, sectionName, sectionId, shouldHideReaderRevenue, isMinuteArticle, isPaidContent, tags, contributionsServiceUrl, idApiUrl, stage, pageId, keywordIds, }) => {\n    const { brazeMessages } = useBraze(idApiUrl);\n    const [countryCode, setCountryCode] = useState();\n    const isSignedIn = !!getCookie({ name: 'GU_U', shouldMemoize: true });\n    const browserId = getCookie({ name: 'bwid', shouldMemoize: true });\n    const [SelectedEpic, setSelectedEpic] = useState(null);\n    const [asyncArticleCount, setAsyncArticleCount] = useState();\n    useEffect(() => {\n        const callFetch = () => {\n            getLocaleCode()\n                .then((cc) => {\n                setCountryCode(cc ?? '');\n            })\n                .catch((e) => console.error(`countryCodePromise - error: ${String(e)}`));\n        };\n        callFetch();\n    }, []);\n    useEffect(() => {\n        setAsyncArticleCount(getArticleCounts(pageId, keywordIds).then((counts) => counts?.weeklyArticleHistory));\n    }, [pageId, keywordIds]);\n    useOnce(() => {\n        const readerRevenueEpic = buildReaderRevenueEpicConfig({\n            isSignedIn,\n            countryCode,\n            contentType,\n            sectionId,\n            shouldHideReaderRevenue,\n            isMinuteArticle,\n            isPaidContent,\n            tags,\n            contributionsServiceUrl,\n            idApiUrl,\n            stage,\n            asyncArticleCount: asyncArticleCount,\n            browserId: browserId ?? undefined,\n        });\n        const brazeArticleContext = {\n            section: sectionName,\n        };\n        const brazeEpic = buildBrazeEpicConfig(brazeMessages, countryCode, idApiUrl, contentType, brazeArticleContext, tags);\n        const epicConfig = {\n            candidates: [brazeEpic, readerRevenueEpic],\n            name: 'slotBodyEnd',\n        };\n        pickMessage(epicConfig)\n            .then((PickedEpic) => setSelectedEpic(PickedEpic))\n            .catch((e) => console.error(`SlotBodyEnd pickMessage - error: ${String(e)}`));\n    }, [isSignedIn, countryCode, brazeMessages, asyncArticleCount]);\n    if (SelectedEpic !== null) {\n        return (_jsx(\"div\", { id: \"slot-body-end\", children: _jsx(SelectedEpic, {}) }));\n    }\n    return null;\n};\n"],"names":["wrapperMargins","COMPONENT_TYPE","canShowBrazeEpic","brazeMessages","brazeArticleContext","contentType","tags","toLowerCase","show","forcedBrazeMeta","getBrazeMetaFromUrlFragment","meta","suppressForTaylorReport","getMessageForEndOfArticle","message","extras","dataFromBraze","logImpressionWithBraze","logImpression","logButtonClickWithBraze","internalButtonId","logButtonClick","BrazeEpicWithSatisfiedDependencies","BrazeComponent","countryCode","idApiUrl","useIsInView","rootMargin","threshold","debounce","hasBeenSeen","setNode","epicRef","useRef","useOnce","submitComponentEvent","component","componentType","id","ophanComponentId","action","current","useEffect","componentName","_jsx","ref","css","children","brazeMessageProps","subscribeToNewsletter","newsletterId","fetch","method","body","JSON","stringify","subscribed","credentials","MaybeBrazeEpic","useState","setBrazeComponent","then","module","BrazeEndOfArticleComponent","catch","error","window","guardian","modules","sentry","reportError","_Fragment","buildPayload","data","ophanPageId","config","ophan","pageViewId","platformId","clientName","referrerUrl","location","origin","pathname","sectionId","shouldHideReaderRevenue","isMinuteArticle","isPaidContent","shouldHideSupportMessaging","isSignedIn","isRecurringContributor","getLastOneOffContributionTimestamp","getEpicViewLog","storage","asyncArticleCount","hasOptedOutOfArticleCount","Number","getCookie","name","shouldMemoize","MODULES_VERSION","hasCmpConsentForBrowserId","browserId","undefined","showSupportMessaging","lastOneOffContributionDate","epicViewLog","weeklyArticleHistory","mvtId","modulesVersion","url","tracking","targeting","canShowReaderRevenueEpic","contributionsServiceUrl","stage","Promise","resolve","initPerf","start","contributionsPayload","getEpic","response","fetchEmail","lazyFetchEmailWithTimeout","hasCmpConsentForArticleCount","hasConsentForArticleCount","ReaderRevenueEpic","Epic","setEpic","setAutomat","modulePerf","guardianPolyfilledImport","epicModule","end","ContributionsEpic","msg","Error","console","log","props","openCmp","cmp","SlotBodyEnd","sectionName","pageId","keywordIds","useBraze","setCountryCode","SelectedEpic","setSelectedEpic","setAsyncArticleCount","getLocaleCode","cc","e","String","getArticleCounts","counts","canShowData","readerRevenueEpic","candidate","canShow","timeoutMillis","brazeEpic","buildBrazeEpicConfig","section","epicConfig","candidates","pickMessage","PickedEpic"],"sourceRoot":""}