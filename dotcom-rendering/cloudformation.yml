# yaml-language-server: $schema=./cloudformation.yml
# ^ this setting effectively prevents the redhat.vscode-yaml extension from
# trying (and failing) to validate this against the Cloudformation YAML schema
# @see: https://github.com/redhat-developer/vscode-yaml/issues/245#issuecomment-885803310
AWSTemplateFormatVersion: '2010-09-09'
Description: Frontend rendering service
Parameters:
  Subnets:
    Description: The subnets where rendering instances will run
    Type: List<AWS::EC2::Subnet::Id>
  App:
    Description: Application name
    Type: String
    Default: rendering
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - PROD
      - CODE
    Default: CODE
  Stack:
    Description: Stack name
    Type: String
    Default: frontend
  NotificationAlarmAction:
    Type: CommaDelimitedList
    Description: (Optional) ARN of action to execute when notification alarms change state
    Default: ''
  Backend5XXAlarmThreshold:
    Type: String
    Description: (Optional) Max number of errors before the 5XX alarm is triggered
    Default: '100'
  Backend5XXAlarmPeriod:
    Type: String
    Description: (Optional) Duration in seconds before 5XX alarm is triggered
    Default: '60'
  Backend5XXConsecutivePeriod:
    Type: String
    Description: (Optional) Number of consecutive periods the threshold needs to be reached before 5XX alarm is triggered
    Default: '5'
  InstanceType:
    Type: String
    Description: EC2 Instance Type to use for dotcom-rendering
  InternalLoadBalancer:
    Description: Id of internal load balancer
    Type: String
  InstanceRole:
    Description: Name of instance role
    Type: String
  LaunchTemplate:
    Description: ID of the launch template
    Type: AWS::EC2::LaunchTemplate

Conditions:
  HasLatencyScalingAlarm: !Equals [!Ref Stage, 'PROD']
  HasBackend5XXAlarm: !Equals [!Ref Stage, 'PROD']

Mappings:
  Constants:
    Stack:
      Value: frontend
    App:
      Value: rendering
  StageMap:
    PROD:
      MinCapacity: 15
      MaxCapacity: 60
    CODE:
      MinCapacity: 1
      MaxCapacity: 4

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: InstanceRole

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs ''
      VPCZoneIdentifier:
        Ref: Subnets
      LaunchTemplate:
        Ref: LaunchTemplate
      MinSize: !FindInMap [StageMap, !Ref Stage, MinCapacity]
      MaxSize: !FindInMap [StageMap, !Ref Stage, MaxCapacity]
      HealthCheckType: ELB
      HealthCheckGracePeriod: 120
      LoadBalancerNames:
        - Ref: InternalLoadBalancer
      Tags:
        - Key: Stage
          Value:
            Ref: Stage
          PropagateAtLaunch: true
        - Key: Stack
          Value:
            Fn::FindInMap: [Constants, Stack, Value]
          PropagateAtLaunch: true
        - Key: App
          Value:
            Fn::FindInMap: [Constants, App, Value]
          PropagateAtLaunch: true

  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoscalingGroup
      Cooldown: '120'
      ScalingAdjustment: '-1'

  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: PercentChangeInCapacity
      AutoScalingGroupName: !Ref AutoscalingGroup
      Cooldown: '600'
      ScalingAdjustment: '100'

  LatencyScalingAlarm:
    Condition: HasLatencyScalingAlarm
    Properties:
      AlarmDescription: !Sub |
        Scale-Up if latency is greater than 0.2 seconds over 1 period(s) of 60 seconds
      Dimensions:
        - Name: LoadBalancerName
          Value: !Ref InternalLoadBalancer
      EvaluationPeriods: '1'
      MetricName: Latency
      Namespace: AWS/ELB
      Period: '60'
      Statistic: Average
      Threshold: '0.2'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      OKActions:
        - !Ref ScaleDownPolicy
      AlarmActions:
        - !Ref ScaleUpPolicy
    Type: AWS::CloudWatch::Alarm

  Backend5xxAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: HasBackend5XXAlarm
    Properties:
      AlarmDescription: !Sub |
        Alarm if 5XX backend errors are greater than ${Backend5XXAlarmThreshold} over last ${Backend5XXAlarmPeriod} seconds
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: LoadBalancerName
          Value: !Ref InternalLoadBalancer
      MetricName: HTTPCode_Backend_5XX
      Namespace: AWS/ELB
      EvaluationPeriods: !Ref Backend5XXConsecutivePeriod
      Period: !Ref Backend5XXAlarmPeriod
      Statistic: Sum
      Threshold: !Ref Backend5XXAlarmThreshold
      AlarmActions: !Ref NotificationAlarmAction
      OKActions: !Ref NotificationAlarmAction

