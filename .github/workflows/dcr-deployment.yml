name: DCR Deployment
on:
  push:
    paths-ignore:
      - 'apps-rendering/**'

env:
  cache_name: ${{github.run_id}}-${{github.run_number}}-setup-output
  cache_path: ./
  NODE_ENV: production
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
        with:
          cache: 'yarn'
      - name: Yarn install
        run: yarn --frozen-lockfile
      # Save the output for use in further jobs
      - name: Tar files
        run: touch setup-project.tar.gz && tar --exclude=setup-project.tar.gz -czf setup-project.tar.gz .
      - name: Upload setup project
        uses: actions/upload-artifact@v3
        with:
          name: setup-project-output
          path: setup-project.tar.gz
  lint:
    name: lint
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - name: Download setup project
        uses: actions/download-artifact@v3
        with:
          name: setup-project-output
      - name: Extract project
        run: tar -xzf setup-project.tar.gz
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Lint
        run: make lint
        working-directory: dotcom-rendering
      - name: Stylelint
        run: make stylelint
        working-directory: dotcom-rendering
      - name: Prettier check
        run: yarn prettier:check
        working-directory: dotcom-rendering
  build:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - name: Download setup project
        uses: actions/download-artifact@v3
        with:
          name: setup-project-output
      - name: Extract project
        run: tar -xzf setup-project.tar.gz
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Generate production build
        run: make build
        working-directory: dotcom-rendering
      - name: Validate Build
        run: make buildCheck
        working-directory: dotcom-rendering
      - name: Tar files
        run: touch built-project.tar.gz && tar --exclude=built-project.tar.gz -czf built-project.tar.gz .
      - name: Upload built project
        uses: actions/upload-artifact@v3
        with:
          name: built-project-output
          path: built-project.tar.gz
  deploy:
    needs: [build, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Coming soon..."
