name: DCR Deployment
on:
  push:
    paths-ignore:
      - 'apps-rendering/**'

env:
  # We set NODE_ENV=production globally, this ensures we have consistent yarn installs between jobs
  NODE_ENV: production
  setup_cache_name: ${{github.run_id}}-${{github.run_number}}-setup-output
  build_cache_name: ${{github.run_id}}-${{github.run_number}}-build-output
  cache_path: ./
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
        with:
          cache: 'yarn'
      - name: Yarn install
        run: yarn --frozen-lockfile
      # Cache the setup output for use in further jobs
      - uses: actions/cache@v3
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
  build:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: setup-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
      - if: steps.setup-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Generate production build
        run: make build
        working-directory: dotcom-rendering
      - name: Validate Build
        run: make buildCheck
        working-directory: dotcom-rendering
      # Cache the build output for further steps
      - uses: actions/cache@v3
        with:
          path: ${{env.cache_path}}
          key: ${{env.build_cache_name}}
  lint:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: setup-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
      - if: steps.setup-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Lint
        run: make lint
        working-directory: dotcom-rendering
      - name: Stylelint
        run: make stylelint
        working-directory: dotcom-rendering
      - name: Prettier check
        run: yarn prettier:check
        working-directory: dotcom-rendering
  typescript:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: setup-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
      - if: steps.setup-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Check typescript
        run: yarn tsc
        working-directory: dotcom-rendering
  development-checks:
    name: stories & schema check
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: setup-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
      - if: steps.setup-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Run check-schema script
        run: make check-schema
        working-directory: dotcom-rendering
      - name: Run check-stories script
        run: make check-stories
        working-directory: dotcom-rendering
  jest:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: setup-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.setup_cache_name}}
      - if: steps.setup-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Run Jest
        run: CI=true yarn test:ci
        working-directory: dotcom-rendering
  cypress:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5, 6]
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: build-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.build_cache_name}}
      - if: steps.build-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: make start-ci
          working-directory: dotcom-rendering
          wait-on: 'http://localhost:9000'
          wait-on-timeout: 30
          browser: chrome
          spec: cypress/e2e/parallel-${{ matrix.group }}/*.js
  percy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: build-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.build_cache_name}}
      - if: steps.build-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Install cypress
        uses: cypress-io/github-action@v4
        with:
          runTests: false
          start: make start-ci
          working-directory: dotcom-rendering
          wait-on: 'http://localhost:9000'
          wait-on-timeout: 30
      - name: Percy Test
        working-directory: dotcom-rendering
        run: yarn cypress:run:percy
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  lighthouse:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # Setup Environment
      - uses: actions/cache@v3
        id: build-cache
        with:
          path: ${{env.cache_path}}
          key: ${{env.build_cache_name}}
      - if: steps.build-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Missing cache - Please re-run the full dcr-deployment action!')
      - name: Install Node
        uses: guardian/actions-setup-node@v2.4.1
      # Job Steps
      - name: Install and run Lighthouse CI
        working-directory: dotcom-rendering
        env:
          LHCI_GITHUB_TOKEN: ${{ secrets.LHCI_GITHUB_TOKEN }}
        run: |
          npm install -g puppeteer-core@2.1.0 @lhci/cli@0.8.2
          lhci autorun

      - name: Setup deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: v1.21.0

      - name: Surface Lighthouse Results
        run: deno run --no-check --allow-net=api.github.com --allow-env="GITHUB_TOKEN","GITHUB_EVENT_PATH" --allow-read scripts/deno/surface-lighthouse-results.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs:
      [
        build,
        lint,
        typescript,
        development-checks,
        jest,
        cypress,
        percy,
        lighthouse,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Coming soon..."
  clear-cache:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.deleteActionsCacheByKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: "${{env.setup_cache_name}}"
            })
            await github.rest.actions.deleteActionsCacheByKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: "${{env.build_cache_name}}"
            })
