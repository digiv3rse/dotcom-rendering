(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["commercial"],{

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2-cta.html":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2-cta.html ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<a class=\"creative__cta creative__cta--position-<%=position%> <%=media%>\" href=\"<%=link%>\" target=\"_blank\"><img src=\"<%=image%>\" alt></a>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2.html":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2.html ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"<%= data.id %>\" class=\"creative--expandable-video creative--expandable-video-v2 <%=data.videoOptions%>\">\n\n    <div class=\"ad-slot__label adFullWidth__label facia-container--layout-front\">\n        <div class=\"facia-container__inner\">Advertisement</div>\n    </div>\n\n    <div class=\"ad-exp--expand l-side-margins mobile-only\" style=\"background: <%=data.backgroundColor%> url('<%=data.backgroundImageM%>') <%=data.backgroundRepeatM%> <%=data.backgroundPositionM%>\">\n        <div class=\"slide-container\">\n            <div class=\"ad-exp-collapse__slide slide-1\" style=\"background: <%=data.slide1BGColor%> url('<%=data.slide1BGImageM%>') <%=data.slide1BGImageRepeatM%> <%=data.slide1BGImagePositionM%>;\">\n                <div class=\"ad-exp__open\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide1Layer1BGImageM%>') <%=data.slide1Layer1BGImageRepeatM%> <%=data.slide1Layer1BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide1Layer2BGImageM%>') <%=data.slide1Layer2BGImageRepeatM%> <%=data.slide1Layer2BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide1Layer3BGImageM%>') <%=data.slide1Layer3BGImageRepeatM%> <%=data.slide1Layer3BGImagePositionM%>;\"></div>\n                </div>\n            </div>\n            <div class=\"ad-exp-collapse__slide slide-2\" style=\"background: <%=data.slide2BGColor%> url('<%=data.slide2BGImageM%>') <%=data.slide2BGImagePositionM%> <%=data.slide2BGImageRepeatM%>;\">\n                <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide2Layer1BGImageM%>') <%=data.slide2Layer1BGImageRepeatM%> <%=data.slide2Layer1BGImagePositionM%>;\"></div>\n                <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide2Layer2BGImageM%>') <%=data.slide2Layer2BGImageRepeatM%> <%=data.slide2Layer2BGImagePositionM%>;\"></div>\n                <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide2Layer3BGImageM%>') <%=data.slide2Layer3BGImageRepeatM%> <%=data.slide2Layer3BGImagePositionM%>;\"></div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"ad-exp--expand l-side-margins hide-until-tablet\" style=\"background: <%=data.backgroundColor%> url('<%=data.backgroundImage%>') <%=data.backgroundRepeat%> <%=data.backgroundPosition%>\">\n        <div class=\"slide-container\" style=\"\">\n            <div class=\"ad-exp-collapse__slide slide-1\" style=\"background: <%=data.slide1BGColor%> url('<%=data.slide1BGImage%>') <%=data.slide1BGImageRepeat%> <%=data.slide1BGImagePosition%>;\">\n                <div class=\"ad-exp__open\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide1Layer1BGImage%>') <%=data.slide1Layer1BGImageRepeat%> <%=data.slide1Layer1BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide1Layer2BGImage%>') <%=data.slide1Layer2BGImageRepeat%> <%=data.slide1Layer2BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background : url('<%=data.slide1Layer3BGImage%>') <%=data.slide1Layer3BGImageRepeat%> <%=data.slide1Layer3BGImagePosition%>;\"></div>\n                </div>\n            </div>\n            <div class=\"ad-exp-collapse__slide slide-2\" style=\"background: <%=data.slide2BGColor%> url('<%=data.slide2BGImage%>') <%=data.slide2BGImagePosition%> <%=data.slide2BGImageRepeat%>;\">\n                <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide2Layer1BGImage%>') <%=data.slide2Layer1BGImageRepeat%> <%=data.slide2Layer1BGImagePosition%>;\"></div>\n                <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide2Layer2BGImage%>') <%=data.slide2Layer2BGImageRepeat%> <%=data.slide2Layer2BGImagePosition%>;\"></div>\n                <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide2Layer3BGImage%>') <%=data.slide2Layer3BGImageRepeat%> <%=data.slide2Layer3BGImagePosition%>;\"></div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"slide-video\">\n        <div class=\"slide-container\">\n            <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_blank\" class=\"video-container__cta\"></a>\n            <div class=\"video-container__inner\">\n                <%=data.videoEmbed%>\n            </div>\n            <%=data.mobileCTA%>\n            <%=data.desktopCTA%>\n        </div>\n    </div>\n\n    <%=data.showPlus%>\n    <%=data.showArrow%>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-v1.html":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-v1.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"<%= data.id %>\" class=\"creative--expandable creative--fabric-expanding-v1\">\n    <div class=\"ad-slot__label adFullWidth__label facia-container--layout-front\">\n        <div class=\"facia-container__inner\">Advertisement</div>\n    </div>\n    <div class=\"ad-exp--expand l-side-margins mobile-only\" style=\"background-color: <%=data.backgroundColor%>\">\n        <div class=\"facia-container__inner facia-container__inner--full-span\" style=\"background: url('<%=data.backgroundImageM%>') <%=data.backgroundRepeatM%> <%=data.backgroundPositionM%>;\">\n            <%=data.showPlus%>\n            <%=data.showArrow%>\n            <div class=\"ad-exp-collapse__slide slide-1\" style=\"background: <%=data.slide1BGColor%> url('<%=data.slide1BGImageM%>') <%=data.slide1BGImageRepeatM%> <%=data.slide1BGImagePositionM%>;\">\n                <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_new\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide1Layer1BGImageM%>') <%=data.slide1Layer1BGImageRepeatM%> <%=data.slide1Layer1BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide1Layer2BGImageM%>') <%=data.slide1Layer2BGImageRepeatM%> <%=data.slide1Layer2BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide1Layer3BGImageM%>') <%=data.slide1Layer3BGImageRepeatM%> <%=data.slide1Layer3BGImagePositionM%>;\"></div>\n                </a>\n            </div>\n            <div class=\"ad-exp-collapse__slide slide-2\" style=\"background: <%=data.slide2BGColor%> url('<%=data.slide2BGImageM%>') <%=data.slide2BGImagePositionM%> <%=data.slide2BGImageRepeatM%>;\">\n                <%=data.videoMobile%>\n                <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_new\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide2Layer1BGImageM%>') <%=data.slide2Layer1BGImageRepeatM%> <%=data.slide2Layer1BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide2Layer2BGImageM%>') <%=data.slide2Layer2BGImageRepeatM%> <%=data.slide2Layer2BGImagePositionM%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide2Layer3BGImageM%>') <%=data.slide2Layer3BGImageRepeatM%> <%=data.slide2Layer3BGImagePositionM%>;\"></div>\n                </a>\n            </div>\n        </div>\n    </div>\n    <div class=\"ad-exp--expand l-side-margins hide-until-tablet\" style=\"background-color: <%=data.backgroundColor%>\">\n        <%=data.scrollbg%>\n        <div class=\"facia-container__inner facia-container__inner--full-span\" style=\"background: url('<%=data.backgroundImage%>') <%=data.backgroundRepeat%> <%=data.backgroundPosition%>;\">\n            <%=data.showPlus%>\n            <%=data.showArrow%>\n            <div class=\"ad-exp-collapse__slide slide-1\" style=\"background: <%=data.slide1BGColor%> url('<%=data.slide1BGImage%>') <%=data.slide1BGImageRepeat%> <%=data.slide1BGImagePosition%>;\">\n                <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_new\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide1Layer1BGImage%>') <%=data.slide1Layer1BGImageRepeat%> <%=data.slide1Layer1BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide1Layer2BGImage%>') <%=data.slide1Layer2BGImageRepeat%> <%=data.slide1Layer2BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background : url('<%=data.slide1Layer3BGImage%>') <%=data.slide1Layer3BGImageRepeat%> <%=data.slide1Layer3BGImagePosition%>;\"></div>\n                </a>\n            </div>\n            <div class=\"ad-exp-collapse__slide slide-2\" style=\"background: <%=data.slide2BGColor%> url('<%=data.slide2BGImage%>') <%=data.slide2BGImagePosition%> <%=data.slide2BGImageRepeat%>;\">\n                <%=data.videoDesktop%>\n                <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_new\">\n                    <div class=\"ad-exp__layer ad-exp__layer1\" style=\"background: url('<%=data.slide2Layer1BGImage%>') <%=data.slide2Layer1BGImageRepeat%> <%=data.slide2Layer1BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer2\" style=\"background: url('<%=data.slide2Layer2BGImage%>') <%=data.slide2Layer2BGImageRepeat%> <%=data.slide2Layer2BGImagePosition%>;\"></div>\n                    <div class=\"ad-exp__layer ad-exp__layer3\" style=\"background: url('<%=data.slide2Layer3BGImage%>') <%=data.slide2Layer3BGImageRepeat%> <%=data.slide2Layer3BGImagePosition%>;\"></div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-video.html":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-video.html ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<iframe\n    width=\"<%=width%>\"\n    height=\"<%=height%>\"\n    src=\"<%=src%>\"\n    frameborder=\"0\"\n    class=\"<%=className%>\"\n    style=\"<%=inlineStyle%>\">\n</iframe>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-v1.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-v1.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<%if (data.hasContainer) {%><div class=\"creative--fabric-v1-bg-container\"><%}%>\n<%if (data.showLabel) {%>\n<div class=\"ad-slot__label creative--fabric-v1__label fc-container--layout-front\">\n    <div class=\"fc-container__inner\">Advertisement</div>\n</div>\n<%}%>\n<div id=\"<%= data.id %>\" class=\"creative--fabric-v1 l-side-margins hide-until-tablet\" style=\"\n    background-color: <%=data.backgroundColor%>;\n    background-image: url(<%=data.backgroundImage%>);\n    background-position: <%=data.backgroundPosition%>;\n    background-repeat: <%=data.backgroundRepeat%>;\n\">\n    <%if (data.scrollbg) {%><%=data.scrollbg%><%}%>\n    <a href=\"<%=data.clickMacro%><%=data.link%>\" target=\"_blank\">\n        <div class=\"gs-container\">\n            <%=data.video%>\n            <div class=\"fabric-v1_layer fabric-v1_layer1\" style=\"\n            background-image: url(<%=data.layerOneBGImage%>);\n            background-position: <%=data.layerOneBGPosition%>;\n        \"></div>\n            <div class=\"fabric-v1_layer fabric-v1_layer2\" style=\"\n            background-image: url(<%=data.layerTwoBGImage%>);\n            background-position: <%=data.layerTwoBGPosition%>;\n        \"></div>\n            <div class=\"fabric-v1_layer fabric-v1_layer3\" style=\"\n            background-image: url(<%=data.layerThreeBGImage%>);\n            background-position: <%=data.layerThreeBGPosition%>;\n        \"></div>\n        </div>\n    </a>\n</div>\n<div class=\"creative--fabric-v1 l-side-margins mobile-only\" style=\"\n    background-color: <%=data.backgroundColor%>;\n    background-image: url(<%=data.backgroundImageM%>);\n    background-position: <%=data.backgroundPositionM%>;\n    background-repeat: <%=data.backgroundRepeatM%>;\n\">\n    <%if (data.scrollbg) {%><%=data.scrollbg%><%}%>\n    <a href=\"<%=data.link%>\" target=\"_blank\">\n        <div class=\"gs-container\">\n            <div class=\"fabric-v1_layer fabric-v1_layer1\" style=\"\n            background-image: url(<%=data.layerOneBGImageM%>);\n            background-position: <%=data.layerOneBGPositionM%>;\n        \"></div>\n            <div class=\"fabric-v1_layer fabric-v1_layer1\" style=\"\n            background-image: url(<%=data.layerTwoBGImageM%>);\n            background-position: <%=data.layerTwoBGPositionM%>;\n        \"></div>\n            <div class=\"fabric-v1_layer fabric-v1_layer1\" style=\"\n            background-image: url(<%=data.layerThreeBGImageM%>);\n            background-position: <%=data.layerThreeBGPositionM%>;\n        \"></div>\n        </div>\n    </a>\n</div>\n<%if (data.hasContainer) {%></div><%}%>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-video.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/fabric-video.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"<%= data.id %>\" class=\"creative creative--fabric-video\">\n    <a class=\"creative__link\" href=\"<%=data.clickMacro%><%=data.Link%>\" target=\"_blank\">\n        <div class=\"creative__alt creative__alt--tablet hide-until-tablet\"  style=\"background-color:<%=data.Backgroundcolour%>;background-image:url(<%=data.Backgroundimage%>);background-position:<%=data.Backgroundposition%>;background-repeat:<%=data.Backgroundrepeat%>;\">\n            <%=data.posterTablet%>\n            <%=data.video%>\n            <div class=\"creative__layer creative__layer1\" style=\"background-image:url(<%=data.Layer1backgroundimage%>);background-position: <%=data.Layer1backgroundimageposition%>;\"></div>\n            <div class=\"creative__layer creative__layer2\">\n                <div style=\"background-image:url(<%=data.Layer2animatedimage1%>)\" class=\"creative__slide creative__slide1\"></div>\n                <div style=\"background-image:url(<%=data.Layer2animatedimage2%>)\" class=\"creative__slide creative__slide2\"></div>\n                <div style=\"background-image:url(<%=data.Layer2animatedimage3%>)\" class=\"creative__slide creative__slide3\"></div>\n                <div style=\"background-image:url(<%=data.Layer2animatedimage4%>)\" class=\"creative__slide creative__slide4\">\n                    <%if (data.Layer2clickbutton){%>\n                        <img src=\"<%=data.Layer2clickbutton%>\" class=\"click_button\"></div>\n                    <%}%>\n                </div>\n            </div>\n            <div class=\"creative__layer creative__layer3\" style=\"background-image:url(<%=data.Layer3backgroundimage%>);background-position: <%=data.Layer3backgroundimageposition%>;\"></div>\n        </div>\n\n        <div class=\"creative__alt creative__alt--mobile mobile-only\" style=\"background-color:<%=data.Backgroundcolour%>;background-image: url(<%=data.BackgroundImagemobile%>);background-position:<%=data.BackgroundImagemobileposition%>;background-repeat:<%=data.Backgroundimagemobilerepeat%>;\">\n            <%=data.posterMobile%>\n            <div class=\"creative__layer creative__layer1\" style=\"background-image:url(<%=data.Layer1backgroundimagemobile%>);background-position:<%=data.Layer1backgroundimagepositionmobile%>;\"></div>\n            <div class=\"creative__layer creative__layer2\" style=\"background-image:url(<%=data.Layer2backgroundimagemobile%>);background-position:<%=data.Layer2backgroundimagepositionmobile%>;\"></div>\n            <div class=\"creative__layer creative__layer3\" style=\"background-image:url(<%=data.Layer3backgroundimagemobile%>);background-position:<%=data.Layer3backgroundimagepositionmobile%>;\"></div>\n        </div>\n    </a>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/frame.html":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/frame.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<aside id=\"<%= data.id %>\" class=\"frame\" data-link-name=\"creative | frame\">\n    <div class=\"frame__background\">\n        <img class=\"frame__background-image\" src=\"<%=data.backgroundImage%>\">\n    </div>\n    <div class=\"frame__foreground\">\n        <a href=\"<%=data.clickMacro%><%=data.destinationUrl%>\" class=\"frame__link-background\" data-link-name=\"image\" target=\"<%=data.target%>\"></a>\n        <a class=\"frame__logo frame__logo--<%=data.brandLogoPosition%>\" href=\"<%=data.brandUrl%>\" data-link-name=\"logo\" target=\"<%=data.target%>\">\n            <img class=\"frame__logo__image\" src=\"<%=data.brandLogo%>\">\n        </a>\n        <a style=\"color: <%=data.contentColour%>\" class=\"frame__content frame__content--<%=data.contentVerticalPosition%> frame__content--<%=data.contentHorizontalPosition%>\" href=\"<%=data.clickMacro%><%=data.destinationUrl%>\" target=\"<%=data.target%>\">\n            <h2 style=\"font-size: <%=data.headerFontSize%>px\" class=\"frame__content-title\"><%=data.header%></h2>\n            <p style=\"font-size: <%=data.textFontSize%>px\" class=\"frame__content-text\"><%=data.text%></p>\n        </a>\n        <a href=\"<%=data.clickMacro%><%=data.callToActionUrl%>\" class=\"frame__cta frame__link button button--tertiary button--medium\" data-link-name=\"call to action\" target=\"<%=data.target%>\">\n            <%=data.callToAction%><%=data.externalLinkIcon%>\n        </a>\n    </div>\n</aside>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/gustyle-label.html":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/gustyle-label.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"gu-comlabel has-popup\">\n\t<button class=\"u-button-reset gu-comlabel__btn popup__toggle\" data-toggle=\"gu-compopup--<%=data.dataAttr%>\"><%=data.buttonTitle%> <%=data.icon%></button>\n\t<div class=\"popup popup--default is-off gu-compopup gu-compopup--<%=data.dataAttr%> gu-stylebox\">\n\t\t<h3 class=\"gu-compopup__title\"><%=data.infoTitle%></h3>\n\t\t<p class=\"gu-compopup__text\"><%=data.infoText%></p>\n\t\t<a class=\"gu-compopup__link\" href=\"<%=data.infoLinkUrl%>\" target=\"_blank\"><%=data.infoLinkText%></a>\n\t</div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/iframe-video.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/iframe-video.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<iframe width=\"409px\" height=\"230px\" src=\"<%=videoURL%>?rel=0&amp;controls=0&amp;showinfo=0&amp;title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" class=\"fluid250_video fluid250_video--desktop fluid250_video--vert-pos-<%=videoPositionV%> fluid250_video--horiz-pos-<%=videoPositionH%>\" style=\"<%=position%>\"></iframe>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/scrollbg.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/commercial/views/creatives/scrollbg.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"ad-scrolling-bg\" style=\"background-image: url('<%=backgroundImageP%>'); background-position: 50% 0; background-repeat: <%=backgroundImagePRepeat%>\"></div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/common/views/commercial/external-content.html":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/common/views/commercial/external-content.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"fc-container fc-container--<%=widgetType%> hide-on-childrens-books-site js-<%=widgetType%>\">\n    <div class=\"fc-container__inner js-<%=widgetType%>-container\"></div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/common/views/email/iframe.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./static/src/javascripts/projects/common/views/email/iframe.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<iframe\n    src=\"/email/form/article/<%=identityListName%>\"\n    height=\"218px\"\n    data-form-display-name-normal-text=\"<%=displayName.normalText%>\"\n    data-form-display-name-accented-text=\"<%=displayName.accentedText%>\"\n    data-form-title=\"<%=headline%>\"\n    data-form-description=\"<%=description%>\"\n    data-form-campaign-code=\"<%=campaignCode%>\"\n    data-form-success-desc=\"<%=successDescription%>\"\n    data-form-success-event-name=\"<%=successEventName%>\"\n    data-form-close-button=\"true\"\n    scrolling=\"no\"\n    seamless\n    frameborder=\"0\"\n    class=\"iframed--overflow-hidden email-sub__iframe js-email-sub__iframe js-email-sub__iframe--article\"\n></iframe>\n"

/***/ }),

/***/ "./static/src/inline-svgs/commercial/logo-membership.svg":
/*!***************************************************************!*\
  !*** ./static/src/inline-svgs/commercial/logo-membership.svg ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-logo-membership inline-commercial\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"171.9\" height=\"74\" viewBox=\"0 0 171.9 74\"><path fill=\"#FBBB00\" d=\"M171.9 74V0h-3.7L0 30.5 6.7 74\"/><path fill=\"#483E37\" d=\"M26.5 74h145.4V26.8L33.8 8.9\" opacity=\".5\"/><g fill=\"#FFF\"><path d=\"M97.64 30.37c-.75 0-1.3.6-1.3 1.3 0 .7.6 1.3 1.3 1.3.7 0 1.3-.6 1.3-1.3 0-.7-.6-1.3-1.3-1.3M107.1 41.07h4.04v-.7l-.8-.35v-4.8c.3-.2.65-.3 1-.3.7 0 1 .3 1 1.05v4.05l-.8.35v.7h4.05v-.7l-.8-.35v-4.6c0-1.35-.6-2-1.86-2-1 0-2 .35-2.65.95v-.9h-.2l-3.1.5v.65l.84.4v5.05l-.8.35.05.65zM95.6 33.92v.7l.84.35v5.05l-.8.35v.7h4.05v-.7l-.76-.35v-6.6h-.2M92.14 39.67c-.2.15-.4.25-.75.25-1 0-1.46-.8-1.46-2.65 0-2.1.6-2.8 1.35-2.8.44 0 .64.15.84.35v4.85zm0-5.85c-.3-.2-.8-.35-1.2-.35-1.85 0-3.55 1.05-3.55 4.05 0 2.85 1.74 3.75 2.9 3.75.94 0 1.54-.4 1.84-.8h.1v.8h.2l2.95-.35v-.55l-.8-.45v-9.5h-.2l-3.1.5v.7l.8.35.04 1.85zM81.94 33.92v.7l.8.4v5.05l-.8.35v.7h4.25v-.7l-1-.35v-3.95c.44-.35 1-.45 1.64-.45.2 0 .5.05.6.05v-2.2c-.1-.05-.25-.05-.35-.05-.8 0-1.56.55-2 1.5v-1.55h-.2l-2.96.5zM76.64 34.52c.2-.1.55-.1.65-.1.94 0 1.24.5 1.24 1.4v.85l-1.4.25c-1.45.25-2.55.7-2.55 2.25 0 1.25.84 2.1 2.04 2.1.95 0 1.8-.4 2.15-1.05h.04c.1.8.8 1.05 1.6 1.05.6 0 1.15-.2 1.4-.45v-.45l-.8-.35v-4.3c0-1.65-1.2-2.3-3.2-2.3-1.3 0-2.15.3-2.85.65v1.9h1.14l.5-1.45zm1.85 5.1c-.16.2-.4.3-.7.3-.5 0-.96-.25-.96-1.1 0-.6.55-1.15 1.1-1.2l.5-.1v2.1zM101.7 34.52c.14-.1.54-.1.64-.1.95 0 1.25.5 1.25 1.4v.85l-1.4.25c-1.46.25-2.56.7-2.56 2.25 0 1.25.85 2.1 2.05 2.1.94 0 1.8-.4 2.14-1.05h.05c.1.8.8 1.05 1.6 1.05.6 0 1.14-.2 1.4-.45v-.45l-.8-.35v-4.3c0-1.65-1.2-2.3-3.2-2.3-1.3 0-2.16.3-2.86.65v1.9h1.15l.5-1.45zm1.9 5.1c-.16.2-.4.3-.7.3-.5 0-.96-.25-.96-1.1 0-.6.55-1.15 1.1-1.2l.5-.1v2.1zM66.94 38.92c0 1.3.65 2.35 2.15 2.35 1 0 1.84-.45 2.34-1v1h.2l3-.35v-.55l-.85-.45v-6.45h-.2l-3.1.5v.7l.8.4v4.45c-.26.2-.46.25-.9.25-.6 0-1-.2-1-1.05v-5.25h-.2l-3.1.5v.7l.84.4v3.85zM63.8 39.47h-2.66c-.3 0-.55-.2-.55-.5 0-.2.14-.4.34-.55.4.1.75.15 1.2.15 1.9 0 3.2-.85 3.2-2.5 0-.75-.3-1.15-.75-1.55l1.24.4v-1.5l-2 .35c-.45-.15-1.1-.4-1.7-.4-1.9 0-3.25 1-3.25 2.6 0 1 .5 1.7 1.24 2.1l.1.1c-.4.3-1.3.95-1.3 1.75 0 .6.4 1.15 1.2 1.35-.85.15-1.8.55-1.8 1.5 0 1 1.45 2 3.75 2 2.9 0 4.14-1.35 4.14-3.15 0-1.5-.8-2.15-2.45-2.15m-1.6-5.15c.54 0 .9.4.9 1.7 0 1.35-.4 1.65-.9 1.65-.56 0-.9-.3-.9-1.65 0-1.4.34-1.7.9-1.7m-.06 9.25c-1.35 0-1.85-.55-1.8-1.05 0-.35.2-.8.85-.85h2.1c.6 0 1 .4 1 .8 0 .8-.6 1.1-2.16 1.1M58.44 37.57c0-3.1-1.4-4.15-3.3-4.15-2.2 0-3.65 1.45-3.65 3.9 0 2.5 1.3 3.9 3.84 3.9 1.35 0 2.45-.7 2.8-1.2l.05-.6c-.5.15-1.06.25-2 .25-1.36 0-2.16-.7-2.16-2.15h4.4zm-3.3-3.3c.6 0 .95.45.95 2.3l-2.06.1c0-1.85.4-2.4 1.1-2.4\"/><path d=\"M43.44 41.07h4.05v-.7l-.76-.35v-4.8c.3-.2.65-.3 1-.3.7 0 1 .45 1 1.05v4.05l-.8.35v.7H52v-.7l-.8-.35v-4.6c0-1.35-.8-2-1.86-2-1 0-2 .35-2.65.95v-4.1h-.2l-3.1.5v.65l.84.4v8.2l-.8.35v.7zM39 39.07c0 1.35.64 2.25 2.1 2.25.74 0 1.6-.2 2.04-.55v-.9c-.2.05-.55.1-.8.1-.7 0-.9-.35-.9-1.1v-3.95h1.6v-1.25h-1.6v-1.75l-2.45.35v1.4l-1.16.2v1.05H39v4.15z\"/></g><path fill=\"#FFF\" d=\"M55.9 64c-.2 0-.4-.1-.6-.2l-.1-.1c-.4-.3-.8-.6-.6-1.4.3-.9 2.1-6.7 2.1-6.8-.2.4-3.3 3-5.8 4.5-.2.1-1 .6-1.3.5-1.7-.4-1.1-2.2-.7-2.6 0 0 .2-.1.3-.2.9-.4 3.3-1.6 5.9-4.1 1.7-1.6 4.4-5.1 4.6-5.5 0-.1.1-.2.1-.3.1-.3.4-.9 1.1-.9.1 0 .3 0 .4.1.8.4 1.1 1 .9 1.7-.2.5-.4.9-.7 1.3-.2.3-.4.6-.5.9-.5 1.1-1.1 2.3-1.6 3.7l-.9 2.4c0 .1-.1.3-.1.4l.1-.1c.4-.6 1.8-2.6 3.3-4.6 1.6-2 4.4-5.6 4.9-6 .7-.5 1.6.3 1.8.8.2.5.3 1 .1 1.4l-2.1 5.7-.5 1.6c-.1.2-.2.5-.3.7.1-.1.3-.2.4-.2 1.1-1.1 3.4-3.7 3.4-3.7 2-2.1 3.9-4.2 5.9-6.3.3-.4.7-.5 1-.5.2 0 .3.1.5.2.4.2 1 .6.8 1.5-.1.3-2.4 7.8-2.5 8.2-.3.8-.5 1.6-.7 2.4-.1.3-.1.9.1 1.3.7-.2 3.7-2.1 3.7-2.1s-.1-.4 0-1.4c.2-2.9 1.5-5.2 2.8-6.8 1.2-1.4 2.9-2.5 3.9-2.4.9.1 1.8.8 1.7 2-.1.9-.4 1.9-.9 2.9-1.3 2.7-2.6 4.6-4.3 6.1-.2.2-.3.3-.6.5 0 0 .1.3.5.3.8.1 1.5-.2 2-.5 1.9-.9 3.6-2.4 5.3-4.5.9-1.1 1.5-2 2-2.8.4-.7.8-1.6 1.1-2.3.1-.3.3-.7.4-1 .2-.3.4-1 1.1-.9.1 0 .3.1.4.1.4.2.7.5.8.9.1.4.1.8-.2 1.2-.6 1.2-2.7 6.1-2.7 6.1-.1.3-.1.5 0 .5s3.3-3.7 4.9-5.4c0 0 2.6-2.8 2.7-3 .3-.4 1-.9 1.6-.5.6.4.9 1.4.7 2-.6 1.7-1.2 3.4-1.8 5l-.6 1.6.5-.5c2.4-3.3 7.7-8.4 9-8.3.6 0 .9.5 1.3 1.1.2.3.3.6 0 1.1-.6.9-2.4 5.7-2.5 6-.2.5-1.1 3.2-1.1 3.3 0 .1-.1.3-.1.4 0 0 4.4-3.4 5.9-5.2 2.6-3.1 6.6-13 6.8-13.4.4-.7 1.1-1.1 1.8-1.1.8.1 1 .6 1 1.1.1 1.7-5.6 11.6-5.5 11.7.2-.2 4.4-3.8 6.7-3.1 1 .3 1 1 1.2 1.9.4 1.7-1.8 11.8-9.5 12.1-1 0-2.4-.7-2.9-2.1 0 0-.2.2-.4 0-.4-.2-.7-.5-.8-.8-.1-.2 0-.5.1-.9.1-.6 2.1-2.8-.4-.5-2.1 2-4.2 3.4-4.5 3.6-.3.2-.7.4-1.1.4-.4 0-.9-.3-1.2-.6-.4-.5-.2-1.2.2-2 .3-.6.7-2.4.8-2.7l.6-1.8c.5-1.4.9-2.8 1.4-4.2.1-.2.2-.5.1-.6 0 0-2.2 2.4-2.9 3.3l-5.2 6.3c-.3.3-.6.5-.9.4-.3 0-.6-.2-.8-.3-.6-.3-.8-.8-.6-1.4.3-.8.5-1.6.7-2.4.1-.5.2-1 .4-1.5.2-.7.4-1.3.7-2l.3-.9c0-.1.1-.2.1-.4-.1.1-6.4 7.5-7.3 8.3-.2.2-.6.4-.9.4-.2 0-.9-.4-1.4-.9-.2-.3-.4-.5.1-1.4.1-.2.3-.6.3-.8 0-.1 0-.1-.1-.2-.1 0-2.3 2.5-5.2 3.7-.8.3-1.5.5-2.2.4-1.7-.2-2.6-1.3-2.6-1.3s-3.6 2.6-5.9 3c-.5.1-1.1-.2-1.4-.6-.3-.4 0-2.1.3-3.3.4-1.9 1.5-5.1 1.7-5.7.2-.7.5-1.3.7-2-.1 0-.2 0-.2.1-.3.3-3.6 3.9-3.6 3.9-1.3 1.4-2.5 2.8-3.8 4.2-.7.7-1.2 1.4-1.8 2-.2.3-.6.5-.9.4-.8-.2-1.3-1-1.3-1.5.1-1 .4-2.2.7-3.5.3-1 1.4-4.5 1.5-4.8v-.1c-.1 0-.1 0-.1.1-.6.9-5.8 8.3-7.1 10.1-.3.5-.6.8-.9 1.1-.4.9-.7 1-1 1m28.2-13.9c-1.4.5-3.2 3.1-3.8 6.2 1.1-1.2 3.7-5.1 3.8-6.2m30.8 10c6-.8 8.8-10.5 5.5-8.6-2.2 1.3-5.1 4.4-6.3 7.6-.3.6-.2 1.3.8 1\"/><path fill=\"#FFF\" d=\"M148.7 63.6c-1.1-.1-2-.7-2.5-1.5-.6-.9-.7-2.1-.4-3.1.3-.7 1-1.2 1.9-1.6l2.9-1.4.4-1.1c.3-.7.9-2.4 1.1-3 0 0-.9.6-2.6 1.1-1.7.6-4.4 1.2-5.5 1.3-1 .1-1.4.5-1.8.9-1 1.2-2.2 2.8-3.2 4.2-.3.4-.7.9-1.3.8-.2 0-.8-.3-1.1-.6-.2-.3-.3-.5 0-1.3.2-.3 1.2-2.3 1.4-2.7v-.1c-.8.8-6.2 5.9-9.3 5.6-2.8-.2-3.2-3.7-3.2-3.7s-.7.2-.8.2c-.3 0-.7-.4-.9-1-.2-.4-.5-1.2-.1-1.3 1.2-.3 1.8-.5 1.8-.5.5-3.1 2-5.1 2.5-5.7 1.4-1.7 3.1-2.2 3.5-2.3 2-.3 2.8 1 2.8 2.1 0 1.7-.7 3.1-1.3 4-1.9 2.8-4.9 3.7-4.9 3.7s0 1.6 1 1.7c2.3.2 8.2-5 10.5-7.8.5-.6 2.9-3.7 3.1-3.9.2-.2.4-.2.8-.1.4.2 1.6.9 1 1.8-.5.9-2.1 3.6-2.1 3.6.3-.3.7-.5 1.3-.5 4.4-.4 8.2-1.9 9.5-3.7.7-.9 1.7-1.8 2.7-1.1.9.7 1 1.6.7 2.2-.2.4-.8.9-1.5 1.4l-1.6 4.3s7.6-3.9 8.9-4.4c.4-.2 1.2 0 1.7.7.3.4.2.8-.2 1-2.2 1-11.6 5.9-11.6 5.9s-1.5 3.9-2.1 5c-.2.8-1.1.9-1.5.9zm.8-4.4c-.8.4-1.3.7-1.4 1.1 0 .2.1.5.3.6.4.2.9-1.1 1.1-1.7m-19.9-8.1c-.7 1.2-1.1 2.6-1.1 2.7 2.2-1.2 3.7-3 3.5-4.7-.4 0-1.7.8-2.4 2\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/commercial/paid-content.svg":
/*!************************************************************!*\
  !*** ./static/src/inline-svgs/commercial/paid-content.svg ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-paid-content inline-commercial\"><svg viewBox=\"0 0 351 227\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"0\" d=\"m0 31.6h123v-15.7-15.7h-123v31.4\"/><mask id=\"1\" fill=\"#fff\"><use xlink:href=\"#0\"/></mask></defs><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#005689\" d=\"m0 0h351v52h-351z\"/><g transform=\"translate(174 14)\"><path d=\"m4.2 26.8c.1-.8.6-1.8 1.9-1.9h4.5c1.3 0 1.9 1.1 1.9 1.9 0 1.7-1.1 2.3-4.4 2.3-2.9 0-4.1-1.2-4-2.3m6-14.2c0 3-.7 3.4-1.8 3.4-1.2 0-2.1-.4-2.1-3.4 0-3.1.9-3.9 2.1-3.9 1.2 0 1.8 1.1 1.8 3.9m-3.9 7.4c-.6 0-1.3-.4-1.3-1 0-.4.3-.9.7-1.2.8.3 1.6.3 2.6.3 4.1 0 6.9-1.9 6.9-5.5 0-1.6-.7-2.4-1.7-3.4l2.7.7v-3.2l-4.3.8c-1-.4-2.4-.8-3.7-.8-4.1 0-6.9 2.2-6.9 5.7 0 2.2 1.1 3.7 2.6 4.6l.1.1c-.9.6-2.8 2.1-2.8 3.8 0 1.3.8 2.5 2.5 2.9-1.8.4-3.8 1.3-3.8 3.4 0 2.2 3.1 4.2 8.1 4.2 6.2 0 8.7-3 8.7-6.8 0-3.2-1.5-4.7-5-4.7h-5.5m17 4.1c.2 0 .5 0 .7-.1 1.8-.2 3.5-1.1 4.4-2.2v2.2l6.3-.8v-1.1l-1.6-1.1v-14.2h-.5l-6.3 1.2v1.4l2.1.9v9.6c-.6.4-1.3.7-2.2.7-1.3 0-2.5-.4-2.5-2.3v-11.6h-.5l-6.3 1.3v1.4l2.1.8v8.6c0 2.8 1.2 5.1 4.4 5.1m72.8-2.9c-1 0-2.1-.6-2.1-2.4 0-1.3 1.3-2.5 2.5-2.6l1.2-.3v4.5c0 0-1 .8-1.6.8m-1.2-12c2 0 2.8 1.1 2.8 3.1v1.8l-3.2.6c-3.1.6-5.5 1.5-5.5 4.9 0 2.7 1.8 4.6 4.4 4.6 2 0 3.9-.9 4.6-2.3h.2c.3 1.7 1.7 2.3 3.4 2.3 1.3 0 2.5-.3 3-.8v-1.1l-1.5-.8v-9.5c0-3.7-2.7-4.9-7-4.9-2.8 0-4.5.7-6 1.4v4.1h2.5l1.1-3.2c.6-.2 1.2-.2 1.4-.2m-52.9 12c-1 0-2.1-.6-2.1-2.4 0-1.3 1.3-2.5 2.5-2.6l1.2-.3v4.5c0 0-1 .8-1.6.8m-1.2-12c2 0 2.8 1.1 2.8 3.1v1.8l-3.2.6c-3.1.6-5.5 1.5-5.5 4.9 0 2.7 1.8 4.6 4.4 4.6 2 0 3.9-.9 4.6-2.3h.2c.3 1.7 1.7 2.3 3.4 2.3 1.3 0 2.5-.3 3-.8v-1.1l-1.5-.8v-9.5c0-3.7-2.7-4.9-7-4.9-2.8 0-4.5.7-6 1.4v4.1h2.5l1.1-3.2c.6-.2 1.2-.2 1.4-.2m10 .4l1.6.8v11l-1.6.8v1.6h8.9v-1.6l-2.1-.8v-8.6c.9-.7 2.2-1 3.6-1 .5 0 .8.1 1.2.2v-4.7c-.2-.1-.4-.1-.6-.1-1.7 0-3.2 1.2-4.1 3.3v-3.4h-.5l-6.3 1.1v1.6m22-1.8c-.6-.5-1.7-.7-2.6-.7-3.9 0-7.6 2.3-7.6 8.8 0 6.3 3.7 8.3 6.2 8.3 2 0 3.4-.9 4-1.8h.2v1.7h.5l6.2-.7v-1.2l-1.6-.9v-20.8h-.5l-6.6 1.1v1.5l1.9.8v4.1m0 12.8c-.4.3-.9.6-1.7.6-2.1 0-3.1-1.7-3.1-5.7 0-4.6 1.3-6.1 2.9-6.1.9 0 1.5.3 1.8.7v10.5m7.4-12.6v1.5l1.6.8v11l-1.6.8v1.6h8.4v-1.6l-1.6-.8v-14.4h-.5l-6.3 1.1m4.4-7.7c-1.6 0-2.8 1.3-2.8 2.9 0 1.6 1.3 2.8 2.8 2.8 1.5 0 2.8-1.3 2.8-2.8-.1-1.6-1.3-2.9-2.8-2.9m20.3 23.5h8.4v-1.6l-1.6-.8v-10.5c.6-.5 1.5-.6 2.3-.6 1.5 0 1.9.5 1.9 2.2v8.9l-1.6.8v1.6h8.4v-1.6l-1.6-.8v-10c0-3-1.1-4.4-3.7-4.4-2.2 0-4.3.8-5.7 2.1v-2.2h-.5l-6.5 1.2v1.4l1.7.8v11l-1.6.8v1.6\" fill=\"#fff\" mask=\"url(#1)\" transform=\"translate(44)\"/><path d=\"m2.1 19c0 3 1.5 4.9 4.7 4.9 1.6 0 3.3-.4 4.3-1.2v-2c-.4.2-1 .3-1.5.3-1.5 0-2.2-.8-2.2-2.4v-8.7h3.7v-2.6h-3.7v-3.9l-5.3.8v3.2l-2.1.5v2.1h2.1v9.2m17.3 4.5v-1.6l-1.6-.8v-10.3c.6-.5 1.7-.9 2.5-.9 1.5 0 2.3.8 2.2 2.2v8.9l-1.6.8v1.6h8.4v-1.6l-1.6-.8v-10c0-3-1.7-4.4-4-4.4-2.2 0-4.5.7-5.9 2v-8.9h-.5l-6.3 1.1v1.6l2.1.8v17.9l-1.6.8v1.6h7.9m17.3-15c1.3 0 2 .9 2 5l-4.4.4c.1-4.2.9-5.4 2.4-5.4m6.9 7c0-6.8-2.7-8.9-6.8-8.9-4.7 0-7.9 3.3-7.9 8.6 0 5.5 2.9 8.5 8.3 8.5 2.9 0 5.1-1.4 5.9-2.5v-1.6c-1.1.4-2 .6-4 .6-2.9 0-4.9-1.7-4.9-4.8h9.5\" fill=\"#aadce6\"/></g><path fill=\"#fff\" d=\"m0 50h351v177h-351z\"/><g fill=\"#d8d8d8\"><path d=\"m54 58h187v72h-187z\"/><path d=\"m6 58h42v7h-42z\"/><path d=\"m248 58h42v72h-42z\"/><path d=\"m150 136h42v72h-42z\"/></g><path fill=\"#f6a623\" d=\"m248 136h91v72h-91z\"/><g fill=\"#d8d8d8\"><path d=\"m54 136h91v72h-91z\"/><path d=\"m297 58h42v72h-42z\"/><path d=\"m199 136h42v72h-42z\"/></g></g></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/arrow-down.svg":
/*!****************************************************!*\
  !*** ./static/src/inline-svgs/icon/arrow-down.svg ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-arrow-down inline-icon\"><svg width=\"24\" height=\"18\" viewBox=\"-0.525 -4 24 18\" overflow=\"visible\" enable-background=\"new -0.525 -4 24 18\"><path d=\"M23.2.7L12.7 9.1l-1.1.9-1.1-.898L0 .7.5 0l11.1 6.3L22.7 0l.5.7z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/arrow-right.svg":
/*!*****************************************************!*\
  !*** ./static/src/inline-svgs/icon/arrow-right.svg ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-arrow-right inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\"><path d=\"M22.8 14.6l-7.6-7.6-.7.7 5.5 6.6h-14v1.5h14l-5.5 6.6.7.7 7.6-7.6v-.9\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/arrow-white-right.svg":
/*!***********************************************************!*\
  !*** ./static/src/inline-svgs/icon/arrow-white-right.svg ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-arrow-white-right inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"><path fill=\"#fff\" d=\"M22.8 14.6L15.2 7l-.7.7 5.5 6.6H6v1.5h14l-5.5 6.6.7.7 7.6-7.6v-.9\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/arrow.svg":
/*!***********************************************!*\
  !*** ./static/src/inline-svgs/icon/arrow.svg ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-arrow inline-icon\"><svg width=\"24\" height=\"10\" viewBox=\"0 0 24 10\"><path d=\"M0 .7l10.5 8.4 1.1.9 1.1-.9 10.5-8.4-.5-.7-11.1 6.3-11-6.3-.6.7z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/bookmark.svg":
/*!**************************************************!*\
  !*** ./static/src/inline-svgs/icon/bookmark.svg ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-bookmark inline-icon\"><svg width=\"8.6\" height=\"16\" viewBox=\"0 0 8.6 16\">     <path d=\"M0 15.7V1l1-1h6.5l1 1v14.7l-.2.3-4-2.2-4 2.2\"/> </svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/chevron-right.svg":
/*!*******************************************************!*\
  !*** ./static/src/inline-svgs/icon/chevron-right.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-chevron-right inline-icon\"><svg width=\"6\" height=\"12\" viewBox=\"-8 7 6 12\"><path d=\"M-8 18.5l.5.5 5.5-5.8v-.5L-7.5 7l-.5.5 4.5 5.5-4.5 5.5z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/close-central.svg":
/*!*******************************************************!*\
  !*** ./static/src/inline-svgs/icon/close-central.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-close-central inline-icon\"><svg width=\"30\" height=\"30\"><path d=\"M21 9.8l-.8-.8-5.2 4.8-5.2-4.8-.8.8 4.8 5.2-4.8 5.2.8.8 5.2-4.8 5.2 4.8.8-.8-4.8-5.2 4.8-5.2\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/comment-16.svg":
/*!****************************************************!*\
  !*** ./static/src/inline-svgs/icon/comment-16.svg ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-comment-16 inline-icon\"><svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path d=\"M13 0l1 1v7l-1 1h-6l-2 3h-1v-3h-2l-1-1v-7l1-1h11z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/comment-anchor.svg":
/*!********************************************************!*\
  !*** ./static/src/inline-svgs/icon/comment-anchor.svg ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-comment-anchor inline-icon\"><svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" width=\"15px\" height=\"15px\" viewBox=\"0 0 15 15\" enable-background=\"new 0 0 15 15\">     <path fill=\"#898989\" d=\"M5.725,13.348c-0.979,1.021-2.6,1.055-3.623,0.076c-1.02-0.979-1.055-2.602-0.076-3.623l8.424-8.79 \tc0.732-0.766,1.95-0.792,2.717-0.057c0.768,0.734,0.791,1.949,0.059,2.715l-6.894,7.193C5.84,11.375,5.03,11.393,4.52,10.9 \tc-0.511-0.488-0.528-1.299-0.04-1.81l5.324-5.553l0.337,0.321L4.816,9.413c-0.311,0.325-0.3,0.84,0.025,1.152 \tc0.326,0.312,0.841,0.301,1.15-0.024l6.896-7.193c0.557-0.581,0.536-1.501-0.043-2.058c-0.581-0.557-1.504-0.537-2.058,0.043 \tl-8.427,8.79c-0.798,0.837-0.771,2.163,0.063,2.965c0.836,0.802,2.164,0.772,2.965-0.062l6.853-7.152l0.338,0.323L5.725,13.348z\"/> </svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/cross.svg":
/*!***********************************************!*\
  !*** ./static/src/inline-svgs/icon/cross.svg ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-cross inline-icon\"><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"><path d=\"M7.5 9l-6.5-7 1-1 7 6.5 7-6.5 1 1-6.5 7 6.5 7-1 1-7-6.5-7 6.5-1-1 6.5-7z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/cursor.svg":
/*!************************************************!*\
  !*** ./static/src/inline-svgs/icon/cursor.svg ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-cursor inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 95.828 95.828\" enable-background=\"new 0 0 95.828 95.828\"><path fill=\"#fff\" d=\"m71 27.4l-18 41-1.7-.1-4-13.7-15.8 15.8-6-6 15.8-15.8-13.7-4-.1-1.7 41-18 2.3 2.3m25 20.5c0-26.5-21.5-47.9-47.9-47.9s-47.9 21.5-47.9 47.9 21.5 47.9 47.9 47.9 47.9-21.5 47.9-47.9\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/dropdown-mask.svg":
/*!*******************************************************!*\
  !*** ./static/src/inline-svgs/icon/dropdown-mask.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-dropdown-mask inline-icon\"><svg width=\"32\" height=\"32\"><path d=\"M0 0v32h32v-32h-32zm16.2 22.9l-12.4-9.8.6-.7 11.8 6.6 11.8-6.6.6.7-12.4 9.8z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/envelope.svg":
/*!**************************************************!*\
  !*** ./static/src/inline-svgs/icon/envelope.svg ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-envelope inline-icon\"><svg width=\"44\" height=\"32\" viewBox=\"0 0 44 32\"><path d=\"M40 28H4V6l16 14h4L40 6v22zM36 4L22 16 8 4h28zm4-4H4L0 4v24l4 4h36l4-4V4l-4-4z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/expand-image.svg":
/*!******************************************************!*\
  !*** ./static/src/inline-svgs/icon/expand-image.svg ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-expand-image inline-icon\"><svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\"><path d=\"M3.4 20.2l5.6-5.7-1.5-1.5-5.7 5.6-.8-4.6h-1v7.5l.5.5h7.5v-1l-4.6-.8m15.3-18.3l-5.7 5.7 1.4 1.4 5.7-5.7.5 4.7h1.2v-7.4l-.5-.5h-7.3v1.2l4.7.6\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/external-link.svg":
/*!*******************************************************!*\
  !*** ./static/src/inline-svgs/icon/external-link.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-external-link inline-icon\"><svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\"><path d=\"M12 1.1L8.27 4.83l.902.9L13 2.07 13.2 5h.8V.4l-.4-.4H9v.8zM11.7 6.625V8.7H1.2V2.2h5l.8-.6V1H.6l-.6.6v7.8l.6.6h11.8l.6-.6V6h-.7z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/market-down.svg":
/*!*****************************************************!*\
  !*** ./static/src/inline-svgs/icon/market-down.svg ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-market-down inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"11\" viewBox=\"0 0 15 11\"><path fill=\"#B51800\" d=\"M15 1.03L13.97 0H1L0 1l7 10h.958L15 1.016z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/market-same.svg":
/*!*****************************************************!*\
  !*** ./static/src/inline-svgs/icon/market-same.svg ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-market-same inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"11\" viewBox=\"0 0 15 11\"><g fill=\"#333\"><path d=\"M15 1.03L13.97 0H1L0 1l7 4h.958L15 1.016zM0 9.97L1.03 11H14l1-1-7-4h-.958L0 9.984z\"/></g></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/market-up.svg":
/*!***************************************************!*\
  !*** ./static/src/inline-svgs/icon/market-up.svg ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-market-up inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"11\" viewBox=\"0 0 15 11\"><path fill=\"#298422\" d=\"M0 9.97L1.03 11H14l1-1L8 0h-.958L0 9.984z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/marque-36.svg":
/*!***************************************************!*\
  !*** ./static/src/inline-svgs/icon/marque-36.svg ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-marque-36 inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 36 36\"><path fill=\"#000\" d=\"M18 0a18 18 0 1 0 0 36 18 18 0 0 0 0-36\"/><path fill=\"#FFF\" d=\"M21.2 4.4c2.3.4 5.3 2 6.3 3.1v5.2H27L21.2 5v-.6zm-2.2.4c-4 0-6.3 5.6-6.3 13.2 0 7.7 2.2 13.3 6.3 13.3v.6c-6 .4-14.4-4.2-14-13.8A13.3 13.3 0 0 1 19 4v.7zm10.4 14.4l-1.9.9v8.6c-1 1-3.8 2.6-6.3 3.1V19.9l-2.2-.7v-.6h10.4v.6z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/marque-54.svg":
/*!***************************************************!*\
  !*** ./static/src/inline-svgs/icon/marque-54.svg ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-marque-54 inline-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"54\" viewBox=\"0 0 36 36><path fill=\"#000\" d=\"M18 0a18 18 0 1 0 0 36 18 18 0 0 0 0-36\"/><path fill=\"#FFF\" d=\"M21.2 4.4c2.3.4 5.3 2 6.3 3.1v5.2H27L21.2 5v-.6zm-2.2.4c-4 0-6.3 5.6-6.3 13.2 0 7.7 2.2 13.3 6.3 13.3v.6c-6 .4-14.4-4.2-14-13.8A13.3 13.3 0 0 1 19 4v.7zm10.4 14.4l-1.9.9v8.6c-1 1-3.8 2.6-6.3 3.1V19.9l-2.2-.7v-.6h10.4v.6z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/plus.svg":
/*!**********************************************!*\
  !*** ./static/src/inline-svgs/icon/plus.svg ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-plus inline-icon\"><svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\"><path d=\"M8.2 0h1.6l.4 7.8 7.8.4v1.6l-7.8.4-.4 7.8H8.2l-.4-7.8L0 9.8V8.2l7.8-.4.4-7.8z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/quote.svg":
/*!***********************************************!*\
  !*** ./static/src/inline-svgs/icon/quote.svg ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-quote inline-icon\"><svg width=\"30\" height=\"21\" viewBox=\"0 0 30 21\"><path d=\"M29.8.4a313 313 0 0 0-2 20.6h-12A61 61 0 0 1 23.5.4h6.4zM14.1.4c-.9 6.7-1.7 13.4-2 20.6H0C1.3 13.8 3.7 7 7.5.4h6.6z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/reply.svg":
/*!***********************************************!*\
  !*** ./static/src/inline-svgs/icon/reply.svg ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-reply inline-icon\"><svg width=\"18\" height=\"18\"><path d=\"M10.1 5l.9-1 4 4.5v1l-4 4.5-.9-1 2.5-3h-8.6l-1-1v-2.5h2v1.5h7.6l-2.5-3z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share-email.svg":
/*!*****************************************************!*\
  !*** ./static/src/inline-svgs/icon/share-email.svg ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share-email inline-icon\"><svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path d=\"M23.363 20.875H8.637v-8.938l6.545 5.687h1.637l6.544-5.687v8.938zm-1.635-9.75L16 16l-5.728-4.875h11.456zM23.363 9.5H8.637L7 11.125v9.75L8.637 22.5h14.727L25 20.875v-9.75L23.363 9.5z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share-facebook.svg":
/*!********************************************************!*\
  !*** ./static/src/inline-svgs/icon/share-facebook.svg ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share-facebook inline-icon\"><svg width=\"32\" height=\"32\" viewBox=\"-2 -2 32 32\"><path d=\"M17.9 14h-3v8h-2.9v-8h-2v-2.9h2v-2.4c0-1.9 1.1-3.7 4-3.7 1.2 0 2 .1 2 .1v3h-1.8c-1 0-1.2.5-1.2 1.3v1.8h3l-.1 2.8z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share-gplus.svg":
/*!*****************************************************!*\
  !*** ./static/src/inline-svgs/icon/share-gplus.svg ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share-gplus inline-icon\"><svg width=\"32\" height=\"32\" viewBox=\"4 -4 32 32\"><path d=\"M8.8 12c-.1 2.9 2 5.7 4.7 6.6 2.6.9 5.8.2 7.5-2 1.3-1.6 1.6-3.6 1.4-5.6h-6.7v2.4h4c-.3 1.2-1.1 2.2-2.3 2.7-2.3 1-5.1-.3-5.8-2.7-.9-2.3.5-5 2.9-5.7 1.4-.5 2.9.1 4.1.8l1.8-1.8c-1.4-1.2-3.2-1.9-5-1.7-3.6.1-6.8 3.4-6.6 7zm18-3v2h-2v2h2v2h2v-2h2v-2h-2V9h-2z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share-pinterest.svg":
/*!*********************************************************!*\
  !*** ./static/src/inline-svgs/icon/share-pinterest.svg ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share-pinterest inline-icon\"><svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\"><path d=\"M16.363 8C12.133 8 10 11.13 10 13.74c0 1.582.58 2.988 1.823 3.512.204.086.387.003.446-.23.04-.16.137-.568.18-.737.06-.23.037-.312-.127-.513-.36-.436-.588-1-.588-1.802 0-2.322 1.684-4.402 4.384-4.402 2.39 0 3.703 1.508 3.703 3.522 0 2.65-1.136 4.887-2.822 4.887-.93 0-1.628-.795-1.405-1.77.268-1.165.786-2.42.786-3.262 0-.752-.39-1.38-1.2-1.38-.952 0-1.716 1.017-1.716 2.38 0 .867.284 1.454.284 1.454l-1.146 5.006c-.34 1.487-.05 3.31-.026 3.493.014.108.15.134.21.05.09-.117 1.223-1.562 1.61-3.006.108-.41.625-2.526.625-2.526.31.61 1.215 1.145 2.176 1.145 2.862 0 4.804-2.693 4.804-6.298C22 10.54 19.763 8 16.363 8\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share-twitter.svg":
/*!*******************************************************!*\
  !*** ./static/src/inline-svgs/icon/share-twitter.svg ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share-twitter inline-icon\"><svg width=\"32\" height=\"32\" viewBox=\"-2 -2 32 32\"><path d=\"M21.3 10.5v.5c0 4.7-3.5 10.1-9.9 10.1-2 0-3.8-.6-5.3-1.6.3 0 .6.1.8.1 1.6 0 3.1-.6 4.3-1.5-1.5 0-2.8-1-3.3-2.4.2 0 .4.1.7.1l.9-.1c-1.6-.3-2.8-1.8-2.8-3.5.5.3 1 .4 1.6.4-.9-.6-1.6-1.7-1.6-2.9 0-.6.2-1.3.5-1.8 1.7 2.1 4.3 3.6 7.2 3.7-.1-.3-.1-.5-.1-.8 0-2 1.6-3.5 3.5-3.5 1 0 1.9.4 2.5 1.1.8-.1 1.5-.4 2.2-.8-.3.8-.8 1.5-1.5 1.9.7-.1 1.4-.3 2-.5-.4.4-1 1-1.7 1.5z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/share.svg":
/*!***********************************************!*\
  !*** ./static/src/inline-svgs/icon/share.svg ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-share inline-icon\"><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.073 8.4c-.475 0-.906.19-1.225.497l-5.308-2.676.015-.221-.015-.221 5.308-2.676c.319.308.75.497 1.225.497.982 0 1.778-.806 1.778-1.8s-.796-1.8-1.778-1.8-1.778.806-1.778 1.8l.016.233-5.299 2.675c-.32-.313-.755-.507-1.236-.507-.982 0-1.778.806-1.778 1.8s.796 1.8 1.778 1.8c.48 0 .915-.194 1.236-.507l5.299 2.675-.016.233c0 .994.796 1.8 1.778 1.8s1.778-.806 1.778-1.8-.796-1.8-1.778-1.8zm0-7.68c.588 0 1.067.484 1.067 1.08 0 .596-.479 1.08-1.067 1.08s-1.067-.484-1.067-1.08c0-.596.479-1.08 1.067-1.08zm0 10.56c-.588 0-1.067-.484-1.067-1.08 0-.596.479-1.08 1.067-1.08s1.067.484 1.067 1.08c0 .596-.479 1.08-1.067 1.08z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/star.svg":
/*!**********************************************!*\
  !*** ./static/src/inline-svgs/icon/star.svg ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-star inline-icon\"><svg width=\"14\" height=\"13\" viewBox=\"0 0 14 13\"><path d=\"M0 5.2l3.7 2.8-1.4 4.6.5.4 3.7-2.8 3.7 2.8.5-.4-1.4-4.6 3.7-2.8-.2-.6h-4.6l-1.4-4.6h-.6l-1.4 4.6h-4.6l-.2.6z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/icon/tick.svg":
/*!**********************************************!*\
  !*** ./static/src/inline-svgs/icon/tick.svg ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-tick inline-icon\"><svg width=\"10.79\" height=\"8.608\" viewBox=\"0 0 10.79 8.608\"><path d=\"M2.987 6.575L10.244 0l.546.532-7.803 8.076h-.26L0 4.788l.545-.546 2.442 2.333z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/inline-svgs/logo/glabs-logo-small.svg":
/*!**********************************************************!*\
  !*** ./static/src/inline-svgs/logo/glabs-logo-small.svg ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {"markup":"<span class=\"inline-glabs-logo-small inline-logo\"><svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"88.9\" height=\"47\"><path d=\"M20.2 15.6l1.5-.8V2.6h-1.2l-2.9 3.8h-.3l.2-4.2H30l.2 4.2h-.3l-2.8-3.8h-1.2v12.2l1.6.8v.4h-7.2v-.4zm11.2-.6V1.5L30.2 1V.8l4.4-.8h.4v6.4l.1-.1a6 6 0 0 1 3.7-1.4c1.9 0 2.7 1.1 2.7 3.1v7l1 .6v.4h-5.7v-.4l1-.6V8c0-1.1-.5-1.5-1.4-1.5-.6 0-1.1.2-1.5.5v8l1 .6v.4h-5.7v-.4l1.2-.6zm14.3-4.1c.1 2.2 1.1 4 3.5 4 1.1 0 2-.5 2.7-.9v.4c-.6.8-2.1 1.9-4.2 1.9-3.7 0-5.5-2-5.5-5.6 0-3.5 2.1-5.6 5.4-5.6 3.1 0 4.7 1.6 4.7 5.7v.1h-6.6zm0-.5l3.2-.2c0-2.8-.5-4.6-1.4-4.6-1 0-1.8 2.1-1.8 4.8zM0 21.4c0-5.9 3.9-8 8.2-8 1.8 0 3.6.3 4.5.7l.1 4.1h-.4l-2.5-4C9.5 14 9 14 8.3 14c-2.3 0-3.5 2.7-3.4 7 0 5.2 1 7.6 3.1 7.6l1.3-.2v-5.6L7.8 22v-.5h6.7v.5l-1.4.8v5.5c-1.1.4-3.1.9-5.1.9-4.9 0-8-2.3-8-7.8z\"/><path d=\"M13.9 18.6v-.3l4.5-.8h.5v8.9c0 1.1.5 1.4 1.4 1.4.6 0 1.1-.2 1.5-.7v-8l-1.2-.5v-.4l4.5-.8h.5v10.2l1.2.5v.3l-4.5.6h-.5v-1.3h-.1c-.8.8-2 1.4-3.4 1.4-2.2 0-3.2-1.3-3.2-3.2v-6.8l-1.2-.5zm28.5-1.1h.4v3.3h.1c.5-2.4 1.6-3.3 2.9-3.3l.6.1V21l-.9-.1c-1 0-1.8.2-2.5.5v6.5l1 .6v.4h-6v-.4l1.1-.6V19l-1.2-.4v-.3l4.5-.8zm11.3.2v-3.5l-1.2-.4v-.3l4.6-.8.4.1v15l1.3.5v.4l-4.5.6h-.4v-1.2h-.1a4 4 0 0 1-3 1.3c-2.5 0-4.3-1.9-4.3-5.7 0-4.1 2.1-6.1 5.3-6.1.9-.2 1.6 0 1.9.1zm0 9.6v-9c-.3-.2-.5-.4-1.3-.4-1.2 0-2 1.9-2 5.2 0 3 .5 4.6 2.2 4.6.5 0 .9-.1 1.1-.4zm10-9.8h.4v10.4l1 .6v.4h-5.9v-.4l1.1-.6v-8.8l-1.3-.5v-.3l4.7-.8zm.4-2.9c0 1.1-.9 1.9-2 1.9s-2-.8-2-1.9c0-1.1.9-1.9 2-1.9s2 .8 2 1.9zm13.2 13.3V19l-1.2-.4v-.4l4.5-.8h.5v1.3h.1c1-.9 2.4-1.4 3.9-1.4 2 0 2.8.9 2.8 3v7.6l1.1.6v.4h-6v-.4l1.1-.6v-7.4c0-1.1-.5-1.6-1.4-1.6a3 3 0 0 0-1.6.5v8.5l1 .6v.4h-5.9v-.4l1.1-.6zm-6.4-5.6v-1.5c0-2.2-.5-3-1.9-3h-.5L66 21.1h-.3V18c1.1-.3 2.4-.7 4.1-.7 3 0 4.8.8 4.8 3.4v7.2l1.1.3v.3c-.4.3-1.3.5-2.2.5-1.5 0-2.2-.5-2.5-1.3h-.1c-.6.9-1.5 1.3-2.9 1.3-1.8 0-3-1.1-3-3.1 0-1.9 1.2-2.9 3.5-3.3l2.4-.3zm0 5v-4.5l-.8.1c-1.2.1-1.6.9-1.6 2.5 0 1.8.6 2.3 1.4 2.3.6 0 .8-.1 1-.4zm-38.1-5v-1.5c0-2.2-.5-3-1.9-3h-.5L28 21.3h-.3v-3.1c1.1-.3 2.4-.7 4.1-.7 3 0 4.8.8 4.8 3.4v7.2l1.1.3v.3c-.4.3-1.3.5-2.2.5-1.5 0-2.2-.5-2.5-1.3h-.1c-.6.9-1.5 1.3-2.9 1.3-1.8 0-3-1.1-3-3.1 0-1.9 1.2-2.9 3.5-3.3l2.3-.5zm0 5v-4.5l-.8.1c-1.2.1-1.6.9-1.6 2.5 0 1.8.6 2.3 1.4 2.3.5 0 .8-.1 1-.4zm-12.7 19l1.4-.3V32.4l-1.4-.3v-.4h7.2v.4l-1.5.3v13.9h2.4l3.4-5.3h.4l-.3 5.7H20.1v-.4zM38.6 40v-1.5c0-2.3-.5-3-1.8-3h-.4l-2.8 3.8h-.4l.1-3.5c1.1-.3 2.4-.7 4.2-.7 3.1 0 4.8.8 4.8 3.4v7.4l1.1.3v.3c-.4.3-1.3.5-2.3.5-1.5 0-2.2-.5-2.6-1.3h-.1c-.6.9-1.6 1.4-3 1.4-1.8 0-3.1-1.1-3.1-3.1 0-1.9 1.2-2.9 3.6-3.4l2.7-.6zm0 5.1v-4.6l-.8.1c-1.2.1-1.6.9-1.6 2.6 0 1.8.6 2.3 1.4 2.3.6 0 .8-.1 1-.4zm16.6-4.4c0 4.4-2.5 6.3-6.2 6.3-1.9 0-3.8-.4-4.8-1V31.8l-1.3-.5V31l4.5-.7.5.1v6.1h.1c.6-.7 1.7-1.4 3.3-1.4 2.1 0 3.9 1.5 3.9 5.6zm-4 .4c0-3.4-.7-4.4-2-4.4l-1.2.2v9.3c.3.3.7.4 1.2.4 1.2 0 2-1.4 2-5.5zm13.3 2.1c0 2.3-1.6 3.7-4.7 3.7-1.4 0-2.8-.2-3.9-.6l-.1-3.3h.4l3 3.5.6.1c1.3 0 1.8-.7 1.8-1.7 0-.9-.5-1.3-1.8-1.9l-.7-.3c-2.1-1-3.3-2-3.3-3.9 0-2.3 1.6-3.7 4.4-3.7 1.1 0 2.4.1 3.3.4l.1 3.1h-.4l-2.3-3-.7-.1c-1.1 0-1.6.6-1.6 1.6s.5 1.3 1.9 2l.6.3c2.3.9 3.4 1.7 3.4 3.8z\"/></svg></span>"}

/***/ }),

/***/ "./static/src/javascripts/bootstraps/commercial.js":
/*!*********************************************************!*\
  !*** ./static/src/javascripts/bootstraps/commercial.js ***!
  \*********************************************************/
/*! exports provided: bootCommercial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bootCommercial", function() { return bootCommercial; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_robust__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/robust */ "./static/src/javascripts/lib/robust.js");
/* harmony import */ var lib_user_timing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/user-timing */ "./static/src/javascripts/lib/user-timing.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var commercial_modules_high_merch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/high-merch */ "./static/src/javascripts/projects/commercial/modules/high-merch.js");
/* harmony import */ var commercial_modules_article_aside_adverts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/article-aside-adverts */ "./static/src/javascripts/projects/commercial/modules/article-aside-adverts.js");
/* harmony import */ var commercial_modules_article_body_adverts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/article-body-adverts */ "./static/src/javascripts/projects/commercial/modules/article-body-adverts.js");
/* harmony import */ var commercial_modules_close_disabled_slots__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/close-disabled-slots */ "./static/src/javascripts/projects/commercial/modules/close-disabled-slots.js");
/* harmony import */ var commercial_modules_ad_free_slot_remove__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/ad-free-slot-remove */ "./static/src/javascripts/projects/commercial/modules/ad-free-slot-remove.js");
/* harmony import */ var commercial_modules_cmp_cmp__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/cmp/cmp */ "./static/src/javascripts/projects/commercial/modules/cmp/cmp.js");
/* harmony import */ var commercial_modules_cmp_lotame_cmp__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! commercial/modules/cmp/lotame-cmp */ "./static/src/javascripts/projects/commercial/modules/cmp/lotame-cmp.js");
/* harmony import */ var commercial_modules_lotame_data_extract__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! commercial/modules/lotame-data-extract */ "./static/src/javascripts/projects/commercial/modules/lotame-data-extract.js");
/* harmony import */ var commercial_modules_cmp_consent_tracker__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! commercial/modules/cmp/consent-tracker */ "./static/src/javascripts/projects/commercial/modules/cmp/consent-tracker.js");
/* harmony import */ var commercial_modules_ad_verification_prepare_ad_verification__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! commercial/modules/ad-verification/prepare-ad-verification */ "./static/src/javascripts/projects/commercial/modules/ad-verification/prepare-ad-verification.js");
/* harmony import */ var commercial_modules_dfp_prepare_googletag__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! commercial/modules/dfp/prepare-googletag */ "./static/src/javascripts/projects/commercial/modules/dfp/prepare-googletag.js");
/* harmony import */ var commercial_modules_dfp_prepare_sonobi_tag__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! commercial/modules/dfp/prepare-sonobi-tag */ "./static/src/javascripts/projects/commercial/modules/dfp/prepare-sonobi-tag.js");
/* harmony import */ var commercial_modules_liveblog_adverts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! commercial/modules/liveblog-adverts */ "./static/src/javascripts/projects/commercial/modules/liveblog-adverts.js");
/* harmony import */ var commercial_modules_sticky_top_banner__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! commercial/modules/sticky-top-banner */ "./static/src/javascripts/projects/commercial/modules/sticky-top-banner.js");
/* harmony import */ var commercial_modules_third_party_tags__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! commercial/modules/third-party-tags */ "./static/src/javascripts/projects/commercial/modules/third-party-tags.js");
/* harmony import */ var commercial_modules_paidfor_band__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! commercial/modules/paidfor-band */ "./static/src/javascripts/projects/commercial/modules/paidfor-band.js");
/* harmony import */ var commercial_modules_paid_containers__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! commercial/modules/paid-containers */ "./static/src/javascripts/projects/commercial/modules/paid-containers.js");
/* harmony import */ var commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! commercial/modules/dfp/performance-logging */ "./static/src/javascripts/projects/commercial/modules/dfp/performance-logging.js");
/* harmony import */ var common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! common/modules/analytics/google */ "./static/src/javascripts/projects/common/modules/analytics/google.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_check_dispatcher__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! commercial/modules/check-dispatcher */ "./static/src/javascripts/projects/commercial/modules/check-dispatcher.js");
/* harmony import */ var commercial_modules_comment_adverts__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! commercial/modules/comment-adverts */ "./static/src/javascripts/projects/commercial/modules/comment-adverts.js");


























var commercialModules = [['cm-adFreeSlotRemove', commercial_modules_ad_free_slot_remove__WEBPACK_IMPORTED_MODULE_8__["adFreeSlotRemove"]], ['cm-closeDisabledSlots', commercial_modules_close_disabled_slots__WEBPACK_IMPORTED_MODULE_7__["closeDisabledSlots"]], ['cm-prepare-cmp', commercial_modules_cmp_cmp__WEBPACK_IMPORTED_MODULE_9__["init"]], ['cm-track-cmp-consent', commercial_modules_cmp_consent_tracker__WEBPACK_IMPORTED_MODULE_12__["trackConsent"]], ['cm-thirdPartyTags', commercial_modules_third_party_tags__WEBPACK_IMPORTED_MODULE_18__["init"]], ['cm-prepare-sonobi-tag', commercial_modules_dfp_prepare_sonobi_tag__WEBPACK_IMPORTED_MODULE_15__["init"], true], ['cm-prepare-googletag', commercial_modules_dfp_prepare_googletag__WEBPACK_IMPORTED_MODULE_14__["init"], true], ['cm-checkDispatcher', commercial_modules_check_dispatcher__WEBPACK_IMPORTED_MODULE_24__["initCheckDispatcher"]], ['cm-lotame-cmp', commercial_modules_cmp_lotame_cmp__WEBPACK_IMPORTED_MODULE_10__["init"]], ['cm-lotame-data-extract', commercial_modules_lotame_data_extract__WEBPACK_IMPORTED_MODULE_11__["init"], true]];

if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_23__["commercialFeatures"].adFree) {
  commercialModules.push(['cm-prepare-adverification', commercial_modules_ad_verification_prepare_ad_verification__WEBPACK_IMPORTED_MODULE_13__["init"], true], ['cm-highMerch', commercial_modules_high_merch__WEBPACK_IMPORTED_MODULE_4__["init"]], ['cm-articleAsideAdverts', commercial_modules_article_aside_adverts__WEBPACK_IMPORTED_MODULE_5__["init"], true], ['cm-articleBodyAdverts', commercial_modules_article_body_adverts__WEBPACK_IMPORTED_MODULE_6__["init"], true], ['cm-liveblogAdverts', commercial_modules_liveblog_adverts__WEBPACK_IMPORTED_MODULE_16__["init"], true], ['cm-stickyTopBanner', commercial_modules_sticky_top_banner__WEBPACK_IMPORTED_MODULE_17__["init"]], ['cm-paidContainers', commercial_modules_paid_containers__WEBPACK_IMPORTED_MODULE_20__["paidContainers"]], ['cm-paidforBand', commercial_modules_paidfor_band__WEBPACK_IMPORTED_MODULE_19__["init"]], ['cm-commentAdverts', commercial_modules_comment_adverts__WEBPACK_IMPORTED_MODULE_25__["initCommentAdverts"]]);
}

var loadHostedBundle = function loadHostedBundle() {
  if (lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isHosted) {
    return new Promise(function (resolve) {
      Promise.all(/*! require.ensure | commercial-hosted */[__webpack_require__.e("vendors~commercial-hosted"), __webpack_require__.e("commercial-hosted")]).then((function (require) {
        var hostedAbout = __webpack_require__(/*! commercial/modules/hosted/about */ "./static/src/javascripts/projects/commercial/modules/hosted/about.js");

        var initHostedVideo = __webpack_require__(/*! commercial/modules/hosted/video */ "./static/src/javascripts/projects/commercial/modules/hosted/video.js");

        var hostedGallery = __webpack_require__(/*! commercial/modules/hosted/gallery */ "./static/src/javascripts/projects/commercial/modules/hosted/gallery.js");

        var initHostedCarousel = __webpack_require__(/*! commercial/modules/hosted/onward-journey-carousel */ "./static/src/javascripts/projects/commercial/modules/hosted/onward-journey-carousel.js");

        var loadOnwardComponent = __webpack_require__(/*! commercial/modules/hosted/onward */ "./static/src/javascripts/projects/commercial/modules/hosted/onward.js");

        commercialModules.push(['cm-hostedAbout', hostedAbout.init], ['cm-hostedVideo', initHostedVideo.initHostedVideo, true], ['cm-hostedGallery', hostedGallery.init], ['cm-hostedOnward', loadOnwardComponent.loadOnwardComponent, true], ['cm-hostedOJCarousel', initHostedCarousel.initHostedCarousel]);
        resolve();
      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    });
  }

  return Promise.resolve();
};

var loadModules = function loadModules() {
  Object(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["addStartTimeBaseline"])(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["primaryBaseline"]);
  var modulePromises = [];
  commercialModules.forEach(function (module) {
    var moduleName = module[0];
    var moduleInit = module[1];
    var moduleDefer = module[2];
    Object(lib_robust__WEBPACK_IMPORTED_MODULE_1__["catchErrorsWithContext"])([[moduleName, function pushAfterComplete() {
      // These modules all have async init procedures which don't block, and return a promise purely for
      // perf logging, to time when their async work is done. The command buffer guarantees execution order,
      // so we don't use the returned promise to order the bootstrap's module invocations.
      var wrapped = moduleDefer ? Object(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["defer"])(moduleName, moduleInit) : Object(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["wrap"])(moduleName, moduleInit);
      var result = wrapped();
      modulePromises.push(result);
    }]]);
  });
  return Promise.all(modulePromises).then(function () {
    Object(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["addEndTimeBaseline"])(commercial_modules_dfp_performance_logging__WEBPACK_IMPORTED_MODULE_21__["primaryBaseline"]);
  });
};

var bootCommercial = function bootCommercial() {
  console.log("Pascal [1]");
  /*
  markTime('commercial start');
  catchErrorsWithContext([
      [
          'ga-user-timing-commercial-start',
          function runTrackPerformance(): void {
              trackPerformance(
                  'Javascript Load',
                  'commercialStart',
                  'Commercial start parse time'
              );
          },
      ],
  ]);
   // Stub the command queue
  window.googletag = {
      cmd: [],
  };
   return loadHostedBundle()
      .then(loadModules)
      .then(() => {
          markTime('commercial end');
          catchErrorsWithContext([
              [
                  'ga-user-timing-commercial-end',
                  function runTrackPerformance(): void {
                      trackPerformance(
                          'Javascript Load',
                          'commercialEnd',
                          'Commercial end parse time'
                      );
                  },
              ],
          ]);
      })
      .catch(err => {
          // Just in case something goes wrong, we don't want it to
          // prevent enhanced from loading
          reportError(err, {
              feature: 'commercial',
          });
      });
  */
};

/***/ }),

/***/ "./static/src/javascripts/lib/$.js":
/*!*****************************************!*\
  !*** ./static/src/javascripts/lib/$.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bonzo */ "./node_modules/bonzo/bonzo.js");
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bonzo__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_1__);

 // Warning: side effect. This patches the bonzo module for use everywhere

bonzo__WEBPACK_IMPORTED_MODULE_0___default.a.aug({
  height: function height() {
    return this.dim().height;
  }
}); // #? Use of `Node` throughout this file may need a second look?

var $ = function $(selector, context) {
  return bonzo__WEBPACK_IMPORTED_MODULE_0___default()(qwery__WEBPACK_IMPORTED_MODULE_1___default()(selector, context));
};

$.create = function (s) {
  return bonzo__WEBPACK_IMPORTED_MODULE_0___default()(bonzo__WEBPACK_IMPORTED_MODULE_0___default.a.create(s));
}; // #? duplicated in lib/closest.js?


$.ancestor = function (el, className) {
  if (el === null || el === undefined || el.nodeName.toLowerCase() === 'html') {
    return null;
  }

  if (!el.parentNode || bonzo__WEBPACK_IMPORTED_MODULE_0___default()(el.parentNode).hasClass(className)) {
    return el.parentNode;
  }

  return $.ancestor(el.parentNode, className);
}; // #? does this offer any value?


$.forEachElement = function (selector, fn) {
  var els = qwery__WEBPACK_IMPORTED_MODULE_1___default()(selector);
  els.forEach(fn);
  return els;
}; // #es6 can be named exports once we're es6-only
// eslint-disable-next-line guardian-frontend/no-default-export


/* harmony default export */ __webpack_exports__["default"] = ($);

/***/ }),

/***/ "./static/src/javascripts/lib/ajax.js":
/*!********************************************!*\
  !*** ./static/src/javascripts/lib/ajax.js ***!
  \********************************************/
/*! exports provided: ajax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajax", function() { return ajax; });
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! reqwest */ "./node_modules/reqwest/reqwest.js");
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(reqwest__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");


 // This should no longer be used.
// Prefer the new 'lib/fetch' or 'lib/fetch-json' library instead, which are es6 compliant.

var ajaxHost = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.ajaxUrl', '');

var ajax = function ajax(params) {
  var options = params;

  if (!options.url.match('^(https?:)?//')) {
    options.url = ajaxHost + options.url;
    options.crossOrigin = true;
  }

  var r = reqwest__WEBPACK_IMPORTED_MODULE_0___default()(options);
  lib_raven__WEBPACK_IMPORTED_MODULE_2__["default"].wrap({
    deep: true
  }, r.then);
  return r;
};

ajax.setHost = function (host) {
  ajaxHost = host;
};



/***/ }),

/***/ "./static/src/javascripts/lib/array-utils.js":
/*!***************************************************!*\
  !*** ./static/src/javascripts/lib/array-utils.js ***!
  \***************************************************/
/*! exports provided: appendToLastElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appendToLastElement", function() { return appendToLastElement; });
var isLastElement = function isLastElement(elementIndex, arrayLength) {
  return elementIndex + 1 === arrayLength;
};

var appendToLastElement = function appendToLastElement(array, stringToAppend) {
  return array.map(function (element, index) {
    return isLastElement(index, array.length) ? "".concat(element).concat(stringToAppend) : element;
  });
};

/***/ }),

/***/ "./static/src/javascripts/lib/cookies.js":
/*!***********************************************!*\
  !*** ./static/src/javascripts/lib/cookies.js ***!
  \***********************************************/
/*! exports provided: _, cleanUp, addCookie, addSessionCookie, addForMinutes, removeCookie, getCookie */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleanUp", function() { return cleanUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCookie", function() { return addCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addSessionCookie", function() { return addSessionCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addForMinutes", function() { return addForMinutes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCookie", function() { return removeCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCookie", function() { return getCookie; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");


var ERR_INVALID_COOKIE_NAME = "Cookie must not contain invalid characters (space, tab and the following characters: '()<>@,;\"/[]?={}')"; // subset of https://github.com/guzzle/guzzle/pull/1131

var isValidCookieValue = function isValidCookieValue(name) {
  return !/[()<>@,;"\\/[\]?={} \t]/g.test(name);
};

var getShortDomain = function getShortDomain() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$isCrossSubdomain = _ref.isCrossSubdomain,
      isCrossSubdomain = _ref$isCrossSubdomain === void 0 ? false : _ref$isCrossSubdomain;

  var domain = document.domain || ''; // Trim any possible subdomain (will be shared with supporter, identity, etc)

  if (isCrossSubdomain) {
    return [''].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(domain.split('.').slice(-2))).join('.');
  } // Trim subdomains for prod (www.theguardian), code (m.code.dev-theguardian) and dev (dev.theguardian, m.thegulocal)


  return domain.replace(/^(www|m\.code|dev|m)\./, '.');
};

var getDomainAttribute = function getDomainAttribute() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref2$isCrossSubdomai = _ref2.isCrossSubdomain,
      isCrossSubdomain = _ref2$isCrossSubdomai === void 0 ? false : _ref2$isCrossSubdomai;

  var shortDomain = getShortDomain({
    isCrossSubdomain: isCrossSubdomain
  });
  return shortDomain === 'localhost' ? '' : " domain=".concat(shortDomain, ";");
};

var removeCookie = function removeCookie(name) {
  var currentDomainOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var expires = 'expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  var path = 'path=/;'; // Remove cookie, implicitly using the document's domain.

  document.cookie = "".concat(name, "=;").concat(path).concat(expires);

  if (!currentDomainOnly) {
    // also remove from the short domain
    document.cookie = "".concat(name, "=;").concat(path).concat(expires, " domain=").concat(getShortDomain(), ";");
  }
};

var addCookie = function addCookie(name, value, daysToLive) {
  var isCrossSubdomain = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var expires = new Date();

  if (!isValidCookieValue(name) || !isValidCookieValue(value)) {
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(new Error("".concat(ERR_INVALID_COOKIE_NAME, " .").concat(name, "=").concat(value)), {}, false);
  }

  if (daysToLive) {
    expires.setDate(expires.getDate() + daysToLive);
  } else {
    expires.setMonth(expires.getMonth() + 5);
    expires.setDate(1);
  }

  document.cookie = "".concat(name, "=").concat(value, "; path=/; expires=").concat(expires.toUTCString(), ";").concat(getDomainAttribute({
    isCrossSubdomain: isCrossSubdomain
  }));
};

var cleanUp = function cleanUp(names) {
  names.forEach(function (name) {
    removeCookie(name);
  });
};

var addForMinutes = function addForMinutes(name, value, minutesToLive) {
  var expires = new Date();

  if (!isValidCookieValue(name) || !isValidCookieValue(value)) {
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(new Error("".concat(ERR_INVALID_COOKIE_NAME, " .").concat(name, "=").concat(value)), {}, false);
  }

  expires.setMinutes(expires.getMinutes() + minutesToLive);
  document.cookie = "".concat(name, "=").concat(value, "; path=/; expires=").concat(expires.toUTCString(), ";").concat(getDomainAttribute());
};

var addSessionCookie = function addSessionCookie(name, value) {
  if (!isValidCookieValue(name) || !isValidCookieValue(value)) {
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(new Error("".concat(ERR_INVALID_COOKIE_NAME, " .").concat(name, "=").concat(value)), {}, false);
  }

  document.cookie = "".concat(name, "=").concat(value, "; path=/;").concat(getDomainAttribute());
};

var getCookieValues = function getCookieValues(name) {
  var nameEq = "".concat(name, "=");
  var cookies = document.cookie.split(';');
  return cookies.reduce(function (acc, cookie) {
    var cookieTrimmed = cookie.trim();

    if (cookieTrimmed.indexOf(nameEq) === 0) {
      acc.push(cookieTrimmed.substring(nameEq.length, cookieTrimmed.length));
    }

    return acc;
  }, []);
};

var getCookie = function getCookie(name) {
  var cookieVal = getCookieValues(name);

  if (cookieVal.length > 0) {
    return cookieVal[0];
  }

  return null;
};

var _ = {
  isValidCookieValue: isValidCookieValue
};


/***/ }),

/***/ "./static/src/javascripts/lib/detect.js":
/*!**********************************************!*\
  !*** ./static/src/javascripts/lib/detect.js ***!
  \**********************************************/
/*! exports provided: hasCrossedBreakpoint, hasTouchScreen, hasPushStateSupport, getBreakpoint, getUserAgent, getViewport, isIOS, isAndroid, isBreakpoint, initPageVisibility, pageVisible, breakpoints, isEnhanced, adblockInUse, getReferrer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasCrossedBreakpoint", function() { return hasCrossedBreakpoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasTouchScreen", function() { return hasTouchScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasPushStateSupport", function() { return hasPushStateSupport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBreakpoint", function() { return getBreakpoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserAgent", function() { return getUserAgent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getViewport", function() { return getViewport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIOS", function() { return isIOS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAndroid", function() { return isAndroid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBreakpoint", function() { return isBreakpoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPageVisibility", function() { return initPageVisibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pageVisible", function() { return pageVisible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "breakpoints", function() { return breakpoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEnhanced", function() { return isEnhanced; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adblockInUse", function() { return adblockInUse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getReferrer", function() { return getReferrer; });
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");

// These should match those defined in:
//   stylesheets/_vars.scss
var breakpoints = [{
  name: 'mobile',
  isTweakpoint: false,
  width: 0
}, {
  name: 'mobileMedium',
  isTweakpoint: true,
  width: 375
}, {
  name: 'mobileLandscape',
  isTweakpoint: true,
  width: 480
}, {
  name: 'phablet',
  isTweakpoint: true,
  width: 660
}, {
  name: 'tablet',
  isTweakpoint: false,
  width: 740
}, {
  name: 'desktop',
  isTweakpoint: false,
  width: 980
}, {
  name: 'leftCol',
  isTweakpoint: true,
  width: 1140
}, {
  name: 'wide',
  isTweakpoint: false,
  width: 1300
}];
var currentBreakpoint;
var currentTweakpoint;
var supportsPushState; // #?: Consider dropping support for vendor-specific implementations

var pageVisibility = document.visibilityState || // $FlowFixMe
document.webkitVisibilityState || // $FlowFixMe
document.mozVisibilityState || // $FlowFixMe
document.msVisibilityState || 'visible';
var breakpointNames = breakpoints.map(function (breakpoint) {
  return breakpoint.name;
});

var findBreakpoint = function findBreakpoint(tweakpoint) {
  var breakpointIndex = breakpointNames.indexOf(tweakpoint);
  var breakpoint = breakpoints[breakpointIndex];

  while (breakpointIndex >= 0 && breakpoint.isTweakpoint) {
    breakpointIndex -= 1;
    breakpoint = breakpoints[breakpointIndex];
  }

  return breakpoint.name;
};

var updateBreakpoint = function updateBreakpoint(breakpoint) {
  currentTweakpoint = breakpoint.name;

  if (breakpoint.isTweakpoint) {
    currentBreakpoint = findBreakpoint(currentTweakpoint);
  } else {
    currentBreakpoint = currentTweakpoint;
  }
}; // this function has a Breakpoint as context, so we can't use fat arrows


var onMatchingBreakpoint = function onMatchingBreakpoint(mql) {
  if (mql && mql.matches) {
    updateBreakpoint(this);
  }
};

var updateBreakpoints = function updateBreakpoints() {
  // The implementation for browsers that don't support window.matchMedia is simpler,
  // but relies on (1) the resize event, (2) layout and (3) hidden generated content
  // on a pseudo-element
  var bodyStyle = window.getComputedStyle(document.body, '::after');
  var breakpointName = bodyStyle.content.substring(1, bodyStyle.content.length - 1);
  var breakpointIndex = breakpointNames.indexOf(breakpointName);
  updateBreakpoint(breakpoints[breakpointIndex]);
};

var initMediaQueryListeners = function initMediaQueryListeners() {
  breakpoints.forEach(function (bp, index, bps) {
    // We create mutually exclusive (min-width) and (max-width) media queries
    // to facilitate the breakpoint/tweakpoint logic.
    var minWidth = "(min-width: ".concat(bp.width, "px)");
    bp.mql = index < bps.length - 1 ? window.matchMedia("".concat(minWidth, " and (max-width: ").concat(bps[index + 1].width - 1, "px)")) : window.matchMedia(minWidth);
    bp.listener = onMatchingBreakpoint.bind(bp);

    if (bp.mql) {
      bp.mql.addListener(bp.listener);
    }

    if (bp.mql && bp.listener) {
      bp.listener(bp.mql);
    }
  });
};

var initBreakpoints = function initBreakpoints() {
  if ('matchMedia' in window) {
    initMediaQueryListeners();
  } else {
    updateBreakpoints();
    lib_mediator__WEBPACK_IMPORTED_MODULE_0__["default"].on('window:throttledResize', updateBreakpoints);
  }
};

var getViewport = function getViewport() {
  if (!window.innerWidth || !(document && document.body && document.body.clientWidth)) {
    return {
      height: 0,
      width: 0
    };
  }

  return {
    width: window.innerWidth || document.body.clientWidth,
    height: window.innerHeight || document.body.clientHeight
  };
};

var getBreakpoint = function getBreakpoint(includeTweakpoint) {
  return includeTweakpoint ? currentTweakpoint : currentBreakpoint;
};

var isBreakpoint = function isBreakpoint(criteria) {
  var indexMin = criteria.min ? breakpointNames.indexOf(criteria.min) : 0;
  var indexMax = criteria.max ? breakpointNames.indexOf(criteria.max) : breakpointNames.length - 1;
  var indexCur = breakpointNames.indexOf(currentTweakpoint || currentBreakpoint);
  return indexMin <= indexCur && indexCur <= indexMax;
};

var hasCrossedBreakpoint = function hasCrossedBreakpoint(includeTweakpoint) {
  var was = getBreakpoint(includeTweakpoint);
  return function (callback) {
    var is = getBreakpoint(includeTweakpoint);

    if (is !== was) {
      callback(is, was);
      was = is;
    }
  };
};

var isIOS = function isIOS() {
  return /(iPad|iPhone|iPod touch)/i.test(navigator.userAgent);
};

var isAndroid = function isAndroid() {
  return /Android/i.test(navigator.userAgent);
};

var hasTouchScreen = function hasTouchScreen() {
  return 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch;
};

var hasPushStateSupport = function hasPushStateSupport() {
  if (supportsPushState !== undefined) {
    return supportsPushState;
  }

  if (window.history && window.history.pushState) {
    supportsPushState = true; // Android stock browser lies about its HistoryAPI support.

    if (window.navigator.userAgent.match(/Android/i)) {
      supportsPushState = !!window.navigator.userAgent.match(/(Chrome|Firefox)/i);
    }
  }

  return supportsPushState;
};

var initPageVisibility = function initPageVisibility() {
  var onchange = function onchange() {
    var evt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;
    var v = 'visible';
    var evtMap = {
      focus: v,
      focusin: v,
      pageshow: v,
      blur: 'hidden',
      focusout: 'hidden',
      pagehide: 'hidden'
    };

    if (evt.type in evtMap) {
      pageVisibility = evtMap[evt.type];
    } else {
      pageVisibility = window && window.hidden ? 'hidden' : 'visible';
    }
  }; // Standards:


  if ('hidden' in document) {
    document.addEventListener('visibilitychange', onchange);
  } else if ('msHidden' in document) {
    document.addEventListener('msvisibilitychange', onchange);
  } else if ('onfocusin' in document) {
    // IE 9 and lower:
    window.onfocusout = onchange;
    window.onfocusin = onchange;
  } else {
    // All others:
    window.onpageshow = onchange;
    window.onpagehide = onchange;
    window.onfocus = onchange;
    window.onblur = onchange;
  }
};

var pageVisible = function pageVisible() {
  return pageVisibility === 'visible';
};

var isEnhanced = function isEnhanced() {
  return window.guardian.isEnhanced;
};

var adblockInUse = new Promise(function (resolve) {
  if (window.guardian.adBlockers.hasOwnProperty('active')) {
    // adblock detection has completed
    resolve(window.guardian.adBlockers.active);
  } else {
    // Push a listener for when the JS loads
    window.guardian.adBlockers.onDetect.push(resolve);
  }
});

var getReferrer = function getReferrer() {
  return document.referrer || '';
};

var getUserAgent = function () {
  if (!navigator && !navigator.userAgent) {
    return '';
  }

  var ua = navigator.userAgent;
  var tem;
  var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];

  if (M && M[1] && /trident/i.test(M[1])) {
    tem = /\brv[ :]+(\d+)/g.exec(ua);

    if (tem && tem[1]) {
      return "IE ".concat(tem[1]);
    }
  }

  if (M && M[1] === 'Chrome') {
    tem = ua.match(/\bOPR\/(\d+)/);

    if (tem && tem[1]) {
      return "Opera ".concat(tem[1]);
    }
  }

  M = M && M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
  tem = ua.match(/version\/(\d+)/i);

  if (tem && tem[1]) {
    M.splice(1, 1, tem[1]);
  }

  return {
    browser: M[0],
    version: M[1]
  };
}();

initBreakpoints();


/***/ }),

/***/ "./static/src/javascripts/lib/element-inview.js":
/*!******************************************************!*\
  !*** ./static/src/javascripts/lib/element-inview.js ***!
  \******************************************************/
/*! exports provided: elementInView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementInView", function() { return elementInView; });
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lib_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/noop */ "./static/src/javascripts/lib/noop.js");




var elementIsInView = function elementIsInView(el, offsets_) {
  var offsets = Object.assign({}, {
    left: 0,
    right: 0,
    top: 0,
    bottom: 0
  }, offsets_);
  var rect = el.getBoundingClientRect();
  var viewportHeight = window.innerHeight;
  var viewportWidth = window.innerWidth;
  var fromTop = rect.top + offsets.top;
  var fromBottom = rect.bottom - offsets.bottom;
  var fromLeft = rect.left - offsets.left;
  var fromRight = rect.right + offsets.right;
  var visibleVertically = fromTop < viewportHeight && fromBottom > 0;
  var visibleHorizontally = fromLeft < viewportWidth && fromRight > 0;
  return visibleVertically && visibleHorizontally;
};

var elementInView = function elementInView(element, container, offsets) {
  var hasBeenSeen = false;
  var events = {
    firstview: lib_noop__WEBPACK_IMPORTED_MODULE_2__["noop"]
  };
  bean__WEBPACK_IMPORTED_MODULE_0___default.a.on(container, 'scroll', lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {
    var inView = elementIsInView(element, offsets);

    if (events.firstview && inView && !hasBeenSeen) {
      hasBeenSeen = true;
      events.firstview(element);
    }
  }, 200));
  return {
    on: function on(event, func) {
      events[event] = func;
    }
  };
};



/***/ }),

/***/ "./static/src/javascripts/lib/events.js":
/*!**********************************************!*\
  !*** ./static/src/javascripts/lib/events.js ***!
  \**********************************************/
/*! exports provided: addEventListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEventListener", function() { return addEventListener; });
var supportsOptions = false;

try {
  var opts = Object.defineProperty({}, 'passive', {
    get: function get() {
      supportsOptions = true;
    }
  } // https://github.com/facebook/flow/issues/285
  );
  window.addEventListener('test', null, opts);
} catch (e) {
  /* noop */
}

var addEventListener = function addEventListener(node, name, handler) {
  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      _ref$passive = _ref.passive,
      passive = _ref$passive === void 0 ? false : _ref$passive,
      _ref$capture = _ref.capture,
      capture = _ref$capture === void 0 ? false : _ref$capture,
      _ref$once = _ref.once,
      once = _ref$once === void 0 ? false : _ref$once;

  if (supportsOptions) {
    node.addEventListener(name, handler, {
      passive: passive,
      capture: capture,
      once: once
    });
  } else if (once) {
    node.addEventListener(name, function boundHandler(evt) {
      handler.call(this, evt);
      node.removeEventListener(name, boundHandler);
    }, capture);
  } else {
    node.addEventListener(name, handler, capture);
  }
};



/***/ }),

/***/ "./static/src/javascripts/lib/fastdom-promise.js":
/*!*******************************************************!*\
  !*** ./static/src/javascripts/lib/fastdom-promise.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_0__);


var promisify = function promisify(fdaction) {
  return function (fn, ctx) {
    return new Promise(function (resolve, reject) {
      return fdaction(
      /* this function needs to be bound to ctx - it therefore cannot
             be an arrow function as this will be bound with the current
             context and cannot be rebound.
          */
      function () {
        try {
          resolve(fn.call(this));
        } catch (e) {
          reject(e);
        }
      }, ctx);
    });
  };
};

/* harmony default export */ __webpack_exports__["default"] = ({
  read: promisify(fastdom__WEBPACK_IMPORTED_MODULE_0___default.a.read.bind(fastdom__WEBPACK_IMPORTED_MODULE_0___default.a)),
  write: promisify(fastdom__WEBPACK_IMPORTED_MODULE_0___default.a.write.bind(fastdom__WEBPACK_IMPORTED_MODULE_0___default.a))
});

/***/ }),

/***/ "./static/src/javascripts/lib/fetch-json.js":
/*!**************************************************!*\
  !*** ./static/src/javascripts/lib/fetch-json.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fetch */ "./static/src/javascripts/lib/fetch.js");



var json = function json(input) {
  var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // #? we should use Object.assign for this assignment, but this currently breaks
  // Karma tests that depend on fetch-json.js and have not been stubbed
  var options = init;
  var path = typeof input === 'string' ? input : input.url;

  if (!path.match('^(https?:)?//')) {
    path = (lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.ajaxUrl || '') + path;
    options.mode = 'cors';
  }

  return Object(lib_fetch__WEBPACK_IMPORTED_MODULE_1__["default"])(path, options).then(function (resp) {
    if (resp.ok) {
      switch (resp.status) {
        case 204:
          return {};

        default:
          return resp.json();
      }
    }

    if (!resp.status) {
      // IE9 uses XDomainRequest which doesn't set the response status thus failing
      // even when the response was actually valid
      return resp.text().then(function (responseText) {
        try {
          return JSON.parse(responseText);
        } catch (ex) {
          throw new Error("Fetch error while requesting ".concat(path, ": Invalid JSON response"));
        }
      });
    }

    throw new Error("Fetch error while requesting ".concat(path, ": ").concat(resp.statusText));
  });
};

/* harmony default export */ __webpack_exports__["default"] = (json);

/***/ }),

/***/ "./static/src/javascripts/lib/fetch.js":
/*!*********************************************!*\
  !*** ./static/src/javascripts/lib/fetch.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! reqwest */ "./node_modules/reqwest/reqwest.js");
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(reqwest__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Provide a minimal function equivalent to fetch. I don't dare calling it a
 * polyfill but the signature is the same, albeit simplified.
 *
 * fetch (input, init): Promise
 *
 * Differences with the standard fetch are
 *
 * - fetch
 * - - input can only be a string, Request is not supported
 * - - does not support JSONP
 * - - headers can only be specified as an object literal, the Headers interface is not supported
 * - Response
 * - - blob is not supported
 * - - formData is not supported
 * - - headers are not populated
 *
 * If you're still wondering what it actually supports
 * - CORS
 * - credentials
 * - body, any body that you want to add to your request except for GET or HEAD
 * - response.text() and response.json()
 * - response.ok .status .statusText
 */

var buildRequest = function buildRequest(path, options) {
  var isCors = options.mode === 'cors';
  var withCredentials = isCors && options.credentials === 'include' || !isCors && options.credentials === 'same-origin';
  return {
    url: path,
    type: 'text',
    method: options.method || 'GET',
    crossOrigin: isCors,
    headers: options.headers,
    data: options.body,
    withCredentials: withCredentials
  };
};

var createResponse = function createResponse(response) {
  var bodyRead = false;
  var body = response.responseText;

  var text = function text() {
    var result = bodyRead ? Promise.reject(new TypeError('Already read')) : Promise.resolve(body);
    bodyRead = true;
    return result;
  };

  return {
    status: response.status,
    ok: response.status >= 200 && response.status < 300,
    statusText: response.statusText,
    url: response.responseURL || '',
    text: text,
    json: function json() {
      return text().then(JSON.parse);
    }
  };
};

var fetch = function fetch(input, init) {
  return new Promise(function (resolve, reject) {
    var req = buildRequest(input, init || {});
    reqwest__WEBPACK_IMPORTED_MODULE_0___default()(req).then(function (resp) {
      resolve(createResponse(resp));
    }).catch(function (resp) {
      if (resp.status === 0) {
        // reqwest wasn't able to make the request
        reject(new Error("Fetch error: ".concat(resp.statusText)));
      } else {
        // an error response was received, in fetch this is not a rejection
        resolve(createResponse(resp));
      }
    });
  });
};

/* harmony default export */ __webpack_exports__["default"] = (fetch);

/***/ }),

/***/ "./static/src/javascripts/lib/formInlineLabels.js":
/*!********************************************************!*\
  !*** ./static/src/javascripts/lib/formInlineLabels.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_2__);




var updateClass = function updateClass(type, $el, cssClass, testFunc) {
  return function () {
    // If we pass a boolean for test, then check if we should update the class
    var shouldUpdateClass = testFunc !== undefined ? testFunc() : true;

    if (shouldUpdateClass) {
      fastdom__WEBPACK_IMPORTED_MODULE_2___default.a.write(function () {
        $el[type === 'add' ? 'addClass' : 'removeClass'](cssClass);
      });
    }
  };
};

/* harmony default export */ __webpack_exports__["default"] = ({
  init: function init(el, opts) {
    var $el = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])(el);
    var $input = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])(opts.textInputClass, el);
    var $label = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])(opts.labelClass, el);
    var hiddenLabelClass = opts.hiddenLabelClass,
        labelEnabledClass = opts.labelEnabledClass; // Add the js only styling class for inline label enabled

    updateClass('add', $el, labelEnabledClass)(); // Check if the input val is empty and if not, hide the label

    if ($input.val() !== '') {
      updateClass('add', $label, hiddenLabelClass)();
    } // Bind to focus and blur handlers to update class based on input
    // Not delegated as bean doesn't support it on focus & blur


    bean__WEBPACK_IMPORTED_MODULE_0___default.a.on($input[0], {
      focus: updateClass('add', $label, hiddenLabelClass),
      blur: updateClass('remove', $label, hiddenLabelClass, function () {
        return $input.val() === '';
      })
    });
  }
});

/***/ }),

/***/ "./static/src/javascripts/lib/geolocation.js":
/*!***************************************************!*\
  !*** ./static/src/javascripts/lib/geolocation.js ***!
  \***************************************************/
/*! exports provided: get, getSupporterCountryGroup, getSync, getLocalCurrencySymbol, init, setGeolocation, extendedCurrencySymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupporterCountryGroup", function() { return getSupporterCountryGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSync", function() { return getSync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocalCurrencySymbol", function() { return getLocalCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGeolocation", function() { return setGeolocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendedCurrencySymbol", function() { return extendedCurrencySymbol; });
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");



var storageKey = 'gu.geolocation';
var editionToGeolocationMap = {
  UK: 'GB',
  US: 'US',
  AU: 'AU'
};
var daysBeforeGeolocationRefresh = 10;

var getFromStorage = function getFromStorage() {
  return lib_storage__WEBPACK_IMPORTED_MODULE_2__["local"].get(storageKey);
};

var get = function get() {
  return new Promise(function (resolve, reject) {
    var geolocationFromStorage = getFromStorage();

    if (geolocationFromStorage) {
      return resolve(geolocationFromStorage);
    }

    Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_0__["default"])('/geolocation', {
      headers: {
        'Content-Type': 'application/json'
      },
      mode: 'cors'
    }).then(function (response) {
      if (response.country) {
        resolve(response.country);
      } else {
        reject(new Error('No country in geolocation response'));
      }
    }).catch(reject);
  });
};

var setGeolocation = function setGeolocation(geolocation) {
  var currentDate = new Date();
  lib_storage__WEBPACK_IMPORTED_MODULE_2__["local"].set(storageKey, geolocation, {
    expires: currentDate.setDate(currentDate.getDate() + daysBeforeGeolocationRefresh)
  });
};

var init = function init() {
  get().then(setGeolocation);
};

var editionToGeolocation = function editionToGeolocation() {
  var editionKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'UK';
  return editionToGeolocationMap[editionKey];
};

var getSync = function getSync() {
  var geolocationFromStorage = getFromStorage();
  return geolocationFromStorage || editionToGeolocation(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.edition);
};

var countryGroups = {
  GBPCountries: {
    name: 'United Kingdom',
    currency: 'GBP',
    countries: ['GB', 'FK', 'GI', 'GG', 'IM', 'JE', 'SH'],
    supportInternationalisationId: 'uk'
  },
  UnitedStates: {
    name: 'United States',
    currency: 'USD',
    countries: ['US'],
    supportInternationalisationId: 'us'
  },
  AUDCountries: {
    name: 'Australia',
    currency: 'AUD',
    countries: ['AU', 'KI', 'NR', 'NF', 'TV'],
    supportInternationalisationId: 'au'
  },
  EURCountries: {
    name: 'Europe',
    currency: 'EUR',
    countries: ['AD', 'AL', 'AT', 'BA', 'BE', 'BG', 'BL', 'CH', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES', 'FI', 'FO', 'FR', 'GF', 'GL', 'GP', 'GR', 'HR', 'HU', 'IE', 'IT', 'LI', 'LT', 'LU', 'LV', 'MC', 'ME', 'MF', 'IS', 'MQ', 'MT', 'NL', 'NO', 'PF', 'PL', 'PM', 'PT', 'RE', 'RO', 'RS', 'SE', 'SI', 'SJ', 'SK', 'SM', 'TF', 'TR', 'WF', 'YT', 'VA', 'AX'],
    supportInternationalisationId: 'eu'
  },
  International: {
    name: 'International',
    currency: 'USD',
    countries: ['AE', 'AF', 'AG', 'AI', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AW', 'AZ', 'BB', 'BD', 'BF', 'BH', 'BI', 'BJ', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CC', 'CD', 'CF', 'CG', 'CI', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'DJ', 'DM', 'DO', 'DZ', 'EC', 'EG', 'EH', 'ER', 'ET', 'FJ', 'FM', 'GA', 'GD', 'GE', 'GH', 'GM', 'GN', 'GQ', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HT', 'ID', 'IL', 'IN', 'IO', 'IQ', 'IR', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LK', 'LR', 'LS', 'LY', 'MA', 'MD', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MR', 'MS', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NG', 'NI', 'NP', 'NU', 'OM', 'PA', 'PE', 'PG', 'PH', 'PK', 'PN', 'PR', 'PS', 'PW', 'PY', 'QA', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SG', 'SL', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TT', 'TW', 'TZ', 'UA', 'UG', 'UM', 'UY', 'UZ', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WS', 'YE', 'ZA', 'ZM', 'ZW'],
    supportInternationalisationId: 'int'
  },
  NZDCountries: {
    name: 'New Zealand',
    currency: 'NZD',
    countries: ['NZ', 'CK'],
    supportInternationalisationId: 'nz'
  },
  Canada: {
    name: 'Canada',
    currency: 'CAD',
    countries: ['CA'],
    supportInternationalisationId: 'ca'
  }
}; // These are the different 'country groups' we accept when taking payment.
// See https://github.com/guardian/support-internationalisation/blob/master/src/main/scala/com/gu/i18n/CountryGroup.scala for more context.

var getSupporterCountryGroup = function getSupporterCountryGroup(location) {
  var availableCountryGroups = Object.keys(countryGroups);
  var response = null;
  availableCountryGroups.forEach(function (countryGroup) {
    if (countryGroups[countryGroup].countries.includes(location)) {
      response = countryGroup;
    }
  });
  return response || 'GBPCountries';
};

var extendedCurrencySymbol = {
  GBPCountries: '£',
  UnitedStates: '$',
  AUDCountries: '$',
  Canada: 'CA$',
  EURCountries: '€',
  NZDCountries: 'NZ$',
  International: '$'
};

var getLocalCurrencySymbol = function getLocalCurrencySymbol() {
  return extendedCurrencySymbol[getSupporterCountryGroup(getSync())] || '£';
};



/***/ }),

/***/ "./static/src/javascripts/lib/load-script.js":
/*!***************************************************!*\
  !*** ./static/src/javascripts/lib/load-script.js ***!
  \***************************************************/
/*! exports provided: loadScript */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadScript", function() { return loadScript; });
var loadScript = function loadScript(src, props) {
  if (document.querySelector("script[src=\"".concat(src, "\"]"))) {
    return Promise.resolve();
  }

  return new Promise(function (resolve, reject) {
    var ref = document.scripts[0];
    var script = document.createElement('script');
    script.src = src;

    if (props) {
      Object.assign(script, props);
    }

    script.onload = resolve;

    script.onerror = function () {
      reject(new Error("Failed to load script ".concat(src)));
    };

    if (ref.parentNode) {
      ref.parentNode.insertBefore(script, ref);
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/lib/mediator.js":
/*!************************************************!*\
  !*** ./static/src/javascripts/lib/mediator.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var wolfy87_eventemitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wolfy87-eventemitter */ "./node_modules/wolfy87-eventemitter/EventEmitter.js");
/* harmony import */ var wolfy87_eventemitter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(wolfy87_eventemitter__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (new wolfy87_eventemitter__WEBPACK_IMPORTED_MODULE_0___default.a());

/***/ }),

/***/ "./static/src/javascripts/lib/noop.js":
/*!********************************************!*\
  !*** ./static/src/javascripts/lib/noop.js ***!
  \********************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
// eslint-disable-next-line no-unused-vars
var noop = function noop() {};



/***/ }),

/***/ "./static/src/javascripts/lib/page.js":
/*!********************************************!*\
  !*** ./static/src/javascripts/lib/page.js ***!
  \********************************************/
/*! exports provided: isMatch, isCompetition, isClockwatch, isLiveClockwatch, isFootballStatsPage, belowArticleVisible, keywordExists */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return isMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompetition", function() { return isCompetition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isClockwatch", function() { return isClockwatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isLiveClockwatch", function() { return isLiveClockwatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFootballStatsPage", function() { return isFootballStatsPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "belowArticleVisible", function() { return belowArticleVisible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keywordExists", function() { return keywordExists; });
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");


 // #? this should'nt really be an `any`, but the callbacks themselves are explicit
// about the types they accept.
// that this is required suggests maybe the approach is too generic

// #? this is very hard to understand, what is it's purpose?
var isit = function isit(isTrue, yes, no, arg) {
  if (isTrue) {
    return yes ? !!yes(arg || isTrue) : arg || !!isTrue;
  }

  return no ? !!no() : false;
};

var isMatch = function isMatch(yes, no) {
  var teams = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].referencesOfType('pa-football-team');
  var match = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.footballMatch', {}); // the order of this is important as, on occasion,
  // "minbymin" is tagged with "match reports" but should be considered "minbymin".

  var pageTypes = [['minbymin', lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isLiveBlog], ['report', lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].hasTone('Match reports')], ['preview', lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].hasSeries('Match previews')], ['stats', match.id]];
  var pageType = pageTypes.find(function (type) {
    return type[1] === true;
  });
  Object.assign(match, {
    date: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].webPublicationDateAsUrlPart(),
    teams: teams,
    isLive: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isLive,
    pageType: pageType && pageType[0]
  });
  return isit(match.id || match.pageType && match.teams.length === 2, yes, no, match);
};

var isCompetition = function isCompetition(yes) {
  var notMobile = Object(lib_detect__WEBPACK_IMPORTED_MODULE_2__["getBreakpoint"])() !== 'mobile';
  var competition = notMobile ? (Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-football-competition').attr('data-link-name') || '').replace('keyword: football/', '') : '';
  return isit(competition, yes);
};

var isClockwatch = function isClockwatch(yes) {
  return isit(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].hasSeries('Clockwatch'), yes);
};

var isLiveClockwatch = function isLiveClockwatch(yes) {
  return isClockwatch(function () {
    return isit(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isLive, yes);
  });
};

var isFootballStatsPage = function isFootballStatsPage(yes) {
  return isit(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.hasOwnProperty('footballMatch'), yes);
};

var belowArticleVisible = function belowArticleVisible(yes, no) {
  var el = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-after-article')[0];
  var vis = el ? window.getComputedStyle(el).getPropertyValue('display') !== 'none' : false;
  return isit(vis, yes, no, el);
};

var keywordExists = function keywordExists(keywordArr) {
  var keywords = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.keywords', '').split(',');
  return keywordArr.some(function (kw) {
    return keywords.includes(kw);
  });
};



/***/ }),

/***/ "./static/src/javascripts/lib/raven.js":
/*!*********************************************!*\
  !*** ./static/src/javascripts/lib/raven.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raven-js */ "./node_modules/raven-js/src/singleton.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(raven_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");



var _config$page = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page,
    sentryPublicApiKey = _config$page.sentryPublicApiKey,
    sentryHost = _config$page.sentryHost;
var sentryUrl = "https://".concat(sentryPublicApiKey, "@").concat(sentryHost);
var adblockBeingUsed = false;
var sentryOptions = {
  whitelistUrls: [// localhost will not log errors, but call `shouldSendCallback`
  /localhost/, /assets\.guim\.co\.uk/, /ophan\.co\.uk/],
  tags: {
    edition: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.edition'),
    contentType: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.contentType'),
    revisionNumber: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.revisionNumber')
  },
  ignoreErrors: ["Can't execute code from a freed script", /There is no space left matching rules from/gi, 'Top comments failed to load:', 'Comments failed to load:', /InvalidStateError/gi, /Fetch error:/gi, 'Network request failed', 'This video is no longer available.', 'UnknownError', // weatherapi/city.json frequently 404s and lib/fetch-json throws an error
  'Fetch error while requesting https://api.nextgen.guardianapps.co.uk/weatherapi/city.json:'],
  dataCallback: function dataCallback(data) {
    var _data$culprit = data.culprit,
        culprit = _data$culprit === void 0 ? false : _data$culprit;
    var resp = data;
    var culpritMatches = /j.ophan.co.uk/.test(data.culprit);

    if (culprit) {
      resp.culprit = culprit.replace(/\/[a-z\d]{32}(\/[^/]+)$/, '$1');
    }

    resp.tags.origin = culpritMatches ? 'ophan' : 'app';
    return resp;
  },
  shouldSendCallback: function shouldSendCallback(data) {
    var _config$get = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page'),
        isDev = _config$get.isDev;

    var isIgnored = typeof data.tags.ignored !== 'undefined' && data.tags.ignored;

    var _config$get2 = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches'),
        enableSentryReporting = _config$get2.enableSentryReporting;

    var isInSample = Math.random() < 0.1;

    if (isDev && !isIgnored) {
      // Some environments don't support or don't always expose the console Object
      if (window.console && window.console.warn) {
        window.console.warn('Raven captured error.', data);
      }
    }

    return enableSentryReporting && isInSample && !isIgnored && !adblockBeingUsed && !isDev;
  }
};
lib_detect__WEBPACK_IMPORTED_MODULE_2__["adblockInUse"].then(function (isUse) {
  adblockBeingUsed = isUse;
});
/* harmony default export */ __webpack_exports__["default"] = (raven_js__WEBPACK_IMPORTED_MODULE_0___default.a.config(sentryUrl, sentryOptions).install());

/***/ }),

/***/ "./static/src/javascripts/lib/report-error.js":
/*!****************************************************!*\
  !*** ./static/src/javascripts/lib/report-error.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");
/*
   Report errors to Sentry with optional tags metadata
   We optionally re-throw the error to halt execution and to ensure the error is
   still logged to the console via browsers built-in logging for uncaught
   exceptions. This is optional because sometimes we log errors for tracking
   user data.
*/


var reportError = function reportError(err, tags) {
  var shouldThrow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  lib_raven__WEBPACK_IMPORTED_MODULE_0__["default"].captureException(err, {
    tags: tags
  });

  if (shouldThrow) {
    // Flag to ensure it is not reported to Sentry again via global handlers
    var error = err;
    error.reported = true;
    throw error;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (reportError);

/***/ }),

/***/ "./static/src/javascripts/lib/robust.js":
/*!**********************************************!*\
  !*** ./static/src/javascripts/lib/robust.js ***!
  \**********************************************/
/*! exports provided: catchErrorsWithContext, logError, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catchErrorsWithContext", function() { return catchErrorsWithContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logError", function() { return logError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");


/*
    Swallows (and reports) exceptions. Designed to wrap around modules at the "bootstrap" level.
    For example "comments throwing an exception should not stop auto refresh"
 */


var catchErrors = function catchErrors(fn) {
  var error;

  try {
    fn();
  } catch (e) {
    error = e;
  }

  return error;
};

var logError = function logError(module, error) {
  if (window.console && window.console.warn) {
    window.console.warn('Caught error.', error.stack);
  }

  Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(error, {
    module: module
  }, false);
};

var catchAndLogError = function catchAndLogError(name, fn) {
  var error = catchErrors(fn);

  if (error) {
    logError(name, error);
  }
};

var catchErrorsWithContext = function catchErrorsWithContext(modules) {
  return modules.forEach(function (_ref) {
    var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
        name = _ref2[0],
        fn = _ref2[1];

    return catchAndLogError(name, fn);
  });
};


var _ = {
  catchAndLogError: catchAndLogError
};

/***/ }),

/***/ "./static/src/javascripts/lib/sha1.js":
/*!********************************************!*\
  !*** ./static/src/javascripts/lib/sha1.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* eslint no-bitwise: 0, no-plusplus: 0, default-case: 0 */

/**
 * SHA-1 hash function reference implementation.
 *
 * @namespace
 */
var Sha1 = {
  /**
   * Generates SHA-1 hash of string.
   *
   * @param   {string} msg - (Unicode) string to be hashed.
   * @returns {string} Hash of msg as hex character string.
   */
  hash: function hash(content) {
    var msg = content; // convert string to UTF-8, as SHA only deals with byte-streams

    msg = decodeURIComponent(encodeURIComponent(msg)); // constants [§4.2.1]

    var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6]; // PREPROCESSING

    msg += String.fromCharCode(0x80); // add trailing '1' bit (+ 0's padding) to string [§5.1.1]
    // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]

    var l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length

    var N = Math.ceil(l / 16); // number of 16-integer-blocks required to hold 'l' ints

    var M = new Array(N);

    for (var i = 0; i < N; i++) {
      M[i] = new Array(16);

      for (var j = 0; j < 16; j++) {
        // encode 4 chars per integer, big-endian encoding
        M[i][j] = msg.charCodeAt(i * 64 + j * 4) << 24 | msg.charCodeAt(i * 64 + j * 4 + 1) << 16 | msg.charCodeAt(i * 64 + j * 4 + 2) << 8 | msg.charCodeAt(i * 64 + j * 4 + 3);
      } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0

    } // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]
    // note: most significant word would be (len-1)*8 >>> 32, but since JS converts
    // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators


    M[N - 1][14] = (msg.length - 1) * 8 / Math.pow(2, 32);
    M[N - 1][14] = Math.floor(M[N - 1][14]);
    M[N - 1][15] = (msg.length - 1) * 8 & 0xffffffff; // set initial hash value [§5.3.1]

    var H0 = 0x67452301;
    var H1 = 0xefcdab89;
    var H2 = 0x98badcfe;
    var H3 = 0x10325476;
    var H4 = 0xc3d2e1f0; // HASH COMPUTATION [§6.1.2]

    var W = new Array(80);
    var a;
    var b;
    var c;
    var d;
    var e;

    for (var _i = 0; _i < N; _i++) {
      // 1 - prepare message schedule 'W'
      for (var t = 0; t < 16; t++) {
        W[t] = M[_i][t];
      }

      for (var _t = 16; _t < 80; _t++) {
        W[_t] = Sha1.ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
      } // 2 - initialise five working variables a, b, c, d, e with previous hash value


      a = H0;
      b = H1;
      c = H2;
      d = H3;
      e = H4; // 3 - main loop

      for (var _t2 = 0; _t2 < 80; _t2++) {
        var s = Math.floor(_t2 / 20); // seq for blocks of 'f' functions and 'K' constants

        var T = Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[_t2] & 0xffffffff;
        e = d;
        d = c;
        c = Sha1.ROTL(b, 30);
        b = a;
        a = T;
      } // 4 - compute the new intermediate hash value (note 'addition modulo 2^32')


      H0 = H0 + a & 0xffffffff;
      H1 = H1 + b & 0xffffffff;
      H2 = H2 + c & 0xffffffff;
      H3 = H3 + d & 0xffffffff;
      H4 = H4 + e & 0xffffffff;
    }

    return Sha1.toHexStr(H0) + Sha1.toHexStr(H1) + Sha1.toHexStr(H2) + Sha1.toHexStr(H3) + Sha1.toHexStr(H4);
  },

  /**
   * Function 'f' [§4.1.1].
   * @private
   */
  f: function f(s, x, y, z) {
    switch (s) {
      case 0:
        return x & y ^ ~x & z;
      // Ch()

      case 1:
        return x ^ y ^ z;
      // Parity()

      case 2:
        return x & y ^ x & z ^ y & z;
      // Maj()

      case 3:
        return x ^ y ^ z;
      // Parity()
    }
  },

  /**
   * Rotates left (circular left shift) value x by n positions [§3.2.5].
   * @private
   */
  ROTL: function ROTL(x, n) {
    return x << n | x >>> 32 - n;
  },

  /**
   * Hexadecimal representation of a number.
   * @private
   */
  toHexStr: function toHexStr(n) {
    // note can't use toString(16) as it is implementation-dependant,
    // and in IE returns signed numbers when used on full words
    var s = '';
    var v;

    for (var i = 7; i >= 0; i--) {
      v = n >>> i * 4 & 0xf;
      s += v.toString(16);
    }

    return s;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (Sha1);

/***/ }),

/***/ "./static/src/javascripts/lib/storage.js":
/*!***********************************************!*\
  !*** ./static/src/javascripts/lib/storage.js ***!
  \***********************************************/
/*! exports provided: local, session */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "local", function() { return local; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "session", function() { return session; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);




/* eslint consistent-return: 0 */
var Storage =
/*#__PURE__*/
function () {
  function Storage(type) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Storage);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "storage", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "available", void 0);

    this.storage = window[type];
    this.available = this.isAvailable();
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Storage, [{
    key: "isAvailable",
    value: function isAvailable() {
      var key = 'local-storage-module-test';

      if (this.available !== undefined) {
        return this.available;
      }

      try {
        // to fully test, need to set item
        // http://stackoverflow.com/questions/9077101/iphone-localstorage-quota-exceeded-err-issue#answer-12976988
        this.storage.setItem(key, 'graun');
        this.storage.removeItem(key);
        this.available = true;
      } catch (err) {
        this.available = false;
      }

      return this.available;
    }
  }, {
    key: "get",
    value: function get(key) {
      if (!this.available) {
        return;
      }

      var data; // try and parse the data

      try {
        var value = this.getRaw(key);

        if (value === null || value === undefined) {
          return null;
        }

        data = JSON.parse(value);

        if (data === null) {
          return null;
        }
      } catch (e) {
        this.remove(key);
        return null;
      } // has it expired?


      if (data.expires && new Date() > new Date(data.expires)) {
        this.remove(key);
        return null;
      }

      return data.value;
    }
  }, {
    key: "set",
    value: function set(key, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!this.available) {
        return;
      }

      return this.storage.setItem(key, JSON.stringify({
        value: value,
        expires: options.expires
      }));
    }
  }, {
    key: "setIfNotExists",
    value: function setIfNotExists(key, value) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!this.available) {
        return;
      }

      if (this.storage.getItem(key) !== null) {
        return;
      }

      return this.storage.setItem(key, JSON.stringify({
        value: value,
        expires: options.expires
      }));
    }
  }, {
    key: "getRaw",
    value: function getRaw(key) {
      if (this.available) {
        return this.storage.getItem(key);
      }
    }
  }, {
    key: "remove",
    value: function remove(key) {
      if (this.available) {
        return this.storage.removeItem(key);
      }
    }
  }]);

  return Storage;
}();

var local = new Storage('localStorage');
var session = new Storage('sessionStorage');

/***/ }),

/***/ "./static/src/javascripts/lib/time-utils.js":
/*!**************************************************!*\
  !*** ./static/src/javascripts/lib/time-utils.js ***!
  \**************************************************/
/*! exports provided: dateDiffDays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateDiffDays", function() { return dateDiffDays; });
// from and to should be Epoch time in milliseconds
var dateDiffDays = function dateDiffDays(from, to) {
  var oneDayMs = 1000 * 60 * 60 * 24;
  var diffMs = to - from;
  return Math.floor(diffMs / oneDayMs);
};



/***/ }),

/***/ "./static/src/javascripts/lib/url.js":
/*!*******************************************!*\
  !*** ./static/src/javascripts/lib/url.js ***!
  \*******************************************/
/*! exports provided: getUrlVars, getPath, pushUrl, constructQuery, back, supportsPushState, pushQueryString, replaceQueryString, pbTestNameMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUrlVars", function() { return getUrlVars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPath", function() { return getPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushUrl", function() { return pushUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constructQuery", function() { return constructQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "back", function() { return back; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsPushState", function() { return supportsPushState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushQueryString", function() { return pushQueryString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "replaceQueryString", function() { return replaceQueryString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pbTestNameMap", function() { return pbTestNameMap; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_2__);



var supportsPushState = Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["hasPushStateSupport"])();
/* commercial testing instrument */
// Returns a map { <bidderName>: true } of bidders
// according to the pbtest URL parameter

var pbTestNameMap = lodash_memoize__WEBPACK_IMPORTED_MODULE_2___default()(function () {
  return new URLSearchParams(window.location.search).getAll('pbtest').reduce(function (acc, value) {
    acc[value] = true;
    return acc;
  }, {});
}, function () {
  return (// Same implicit parameter as the memoized function
    window.location.search
  );
}); // returns "foo=bar&fizz=buzz" (eg. no ? symbol)

var getCurrentQueryString = function getCurrentQueryString() {
  return window.location.search.replace(/^\?/, '');
};

var queryStringToUrlVars = lodash_memoize__WEBPACK_IMPORTED_MODULE_2___default()(function (queryString) {
  return Array.from(new URLSearchParams(queryString).entries()) // polyfill.io guarantees URLSearchParams
  .reduce(function (acc, _ref) {
    var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    acc[key] = value === '' ? true : value;
    return acc;
  }, {});
}); // returns a map of querystrings
// eg ?foo=bar&fizz=buzz returns {foo: 'bar', fizz: 'buzz'}
// ?foo=bar&foo=baz returns {foo: 'baz'}
// ?foo returns { foo: true }

var getUrlVars = function getUrlVars(query) {
  return queryStringToUrlVars(query || window.location.search);
};

var updateQueryString = function updateQueryString(params, historyFn) {
  var querystringChanged = getCurrentQueryString() !== params.querystring;

  if (params.querystring && querystringChanged && supportsPushState) {
    historyFn(params.state || {}, params.title || window.title, params.querystring + window.location.hash);
  }
}; // this will replace anything after the root/domain of the URL
// and add an item to the browser history.
// params Object requires a "querystring" property
// and optionally takes a "state" and "title" property too


var pushQueryString = function pushQueryString(params) {
  return updateQueryString(params, window.history.pushState.bind(window.history));
}; // equivalent to pushQueryString but uses history.replaceState to
// overwrite history rather than history.pushState


var replaceQueryString = function replaceQueryString(params) {
  return updateQueryString(params, window.history.replaceState.bind(window.history));
}; // take an Object, construct into a query, e.g. {page: 1, pageSize: 10} => page=1&pageSize=10
// Note that Array value parameters will turn into param=value1,value2 as opposed to param=value1&param=value2


var constructQuery = function constructQuery(query) {
  return Object.keys(query).map(function (param) {
    var value = query[param];
    var queryValue = Array.isArray(value) ? value.map(function (v) {
      return encodeURIComponent(v);
    }).join(',') : encodeURIComponent(value);
    return "".concat(param, "=").concat(queryValue);
  }).join('&');
};

var getPath = function getPath(url) {
  var a = document.createElement('a');
  a.href = url;
  return a.pathname;
};

var pushUrl = function pushUrl(state, title, url) {
  var replace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

  if (supportsPushState) {
    window.history[replace ? 'replaceState' : 'pushState'](state, title, url);
  }
};

var back = function back() {
  if (supportsPushState) {
    window.history.back();
  }
};



/***/ }),

/***/ "./static/src/javascripts/lib/user-timing.js":
/*!***************************************************!*\
  !*** ./static/src/javascripts/lib/user-timing.js ***!
  \***************************************************/
/*! exports provided: markTime, getMarkTime, getCurrentTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "markTime", function() { return markTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMarkTime", function() { return getMarkTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentTime", function() { return getCurrentTime; });
/* harmony import */ var lib_window_performance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/window-performance */ "./static/src/javascripts/lib/window-performance.js");

var timings = {};
var startDate = new Date().getTime();

var getCurrentTime = function getCurrentTime() {
  if (lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"] && 'now' in lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    return lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"].now();
  }

  return new Date().getTime() - startDate;
};

var markTime = function markTime(label) {
  if (lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"] && 'mark' in lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"].mark(label);
  } else {
    timings[label] = getCurrentTime();
  }
}; // Returns the ms time when the mark was made.


var getMarkTime = function getMarkTime(label) {
  if (lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"] && 'getEntriesByName' in lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"]) {
    var perfMark = lib_window_performance__WEBPACK_IMPORTED_MODULE_0__["default"].getEntriesByName(label, 'mark');

    if (perfMark && perfMark[0] && 'startTime' in perfMark[0]) {
      return perfMark[0].startTime;
    }
  } else if (label in timings) {
    return timings[label];
  }
};



/***/ }),

/***/ "./static/src/javascripts/lib/window-performance.js":
/*!**********************************************************!*\
  !*** ./static/src/javascripts/lib/window-performance.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var api = window.performance || window.msPerformance || window.webkitPerformance || window.mozPerformance;
/* harmony default export */ __webpack_exports__["default"] = (api);

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/ad-free-slot-remove.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/ad-free-slot-remove.js ***!
  \***********************************************************************************/
/*! exports provided: adFreeSlotRemove */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adFreeSlotRemove", function() { return adFreeSlotRemove; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");





var mpuCandidateClass = 'fc-slice__item--mpu-candidate';
var mpuCandidateSelector = ".".concat(mpuCandidateClass);

var shouldRemoveMpuWhenAdFree = function shouldRemoveMpuWhenAdFree(mpuCandidate) {
  return mpuCandidate.className.toLowerCase().includes(mpuCandidateClass);
};

var shouldRemoveFaciaContainerWhenAdFree = function shouldRemoveFaciaContainerWhenAdFree(faciaContainer) {
  var dataComponentAttribute = faciaContainer.getAttribute('data-component');
  return dataComponentAttribute && dataComponentAttribute.includes('commercial-container');
};

var adFreeSlotRemove = lodash_once__WEBPACK_IMPORTED_MODULE_2___default()(function () {
  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].adFree) {
    return Promise.resolve();
  }

  var bodyEl = document.body;
  var adSlotsToRemove = qwery__WEBPACK_IMPORTED_MODULE_0___default()(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__["dfpEnv"].adSlotSelector);
  var mpusToRemove = qwery__WEBPACK_IMPORTED_MODULE_0___default()(mpuCandidateSelector).filter(shouldRemoveMpuWhenAdFree);
  var commercialFaciaContainersToRemove = qwery__WEBPACK_IMPORTED_MODULE_0___default()('.fc-container').filter(shouldRemoveFaciaContainerWhenAdFree);
  var commercialThrashers = qwery__WEBPACK_IMPORTED_MODULE_0___default()('.commercial-thrasher');
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
    if (bodyEl) {
      if (bodyEl.classList.toString().includes('has-page-skin')) {
        bodyEl.classList.remove('has-page-skin');
      }

      if (bodyEl.classList.toString().includes('has-active-pageskin')) {
        bodyEl.classList.remove('has-active-pageskin');
      }
    }

    adSlotsToRemove.forEach(function (adSlot) {
      return adSlot.remove();
    });
    mpusToRemove.forEach(function (mpu) {
      return mpu.classList.add('fc-slice__item--no-mpu');
    });
    commercialFaciaContainersToRemove.forEach(function (faciaContainer) {
      return faciaContainer.classList.add('u-h');
    });
    commercialThrashers.forEach(function (thrasher) {
      var closestFaciaContainer = thrasher.closest('.fc-container--thrasher');

      if (closestFaciaContainer) {
        closestFaciaContainer.remove();
      }
    });
  });
});


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/ad-sizes.js":
/*!************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/ad-sizes.js ***!
  \************************************************************************/
/*! exports provided: adSizes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adSizes", function() { return adSizes; });
var getAdSize = function getAdSize(width, height) {
  var toString = function toString() {
    return width === height && height === 0 ? 'fluid' : "".concat(width, ",").concat(height);
  };

  return Object.freeze({
    width: width,
    height: height,
    toString: toString
  });
};

var adSizes = {
  // standard ad sizes
  billboard: getAdSize(970, 250),
  leaderboard: getAdSize(728, 90),
  mpu: getAdSize(300, 250),
  halfPage: getAdSize(300, 600),
  portrait: getAdSize(300, 1050),
  // dfp proprietary ad sizes
  fluid: getAdSize(0, 0),
  outOfPage: getAdSize(1, 1),
  googleCard: getAdSize(300, 274),
  // guardian proprietary ad sizes
  video: getAdSize(620, 1),
  video2: getAdSize(620, 350),
  merchandisingHighAdFeature: getAdSize(88, 89),
  merchandisingHigh: getAdSize(88, 87),
  merchandising: getAdSize(88, 88),
  inlineMerchandising: getAdSize(88, 85),
  fabric: getAdSize(88, 71),
  empty: getAdSize(2, 2)
};
adSizes['970x250'] = adSizes.billboard;
adSizes['728x90'] = adSizes.leaderboard;
adSizes['300x250'] = adSizes.mpu;
adSizes['300x600'] = adSizes.halfPage;
adSizes['300x1050'] = adSizes.portrait;


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/ad-verification/prepare-ad-verification.js":
/*!*******************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/ad-verification/prepare-ad-verification.js ***!
  \*******************************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");
/* harmony import */ var common_modules_experiments_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/experiments/utils.js */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");


var init = function init(start) {
  var host = 'clarium.global.ssl.fastly.net';
  start();

  if (Object(common_modules_experiments_utils_js__WEBPACK_IMPORTED_MODULE_1__["getTestVariantId"])('CommercialAdVerification') === 'variant') {
    // vivify the _clrm object

    /* eslint-disable no-underscore-dangle */
    window._clrm = window._clrm || {};
    window._clrm.gpt = {
      propertyId: 'qE4aQtYj644UghGyTZsDnq5Qh_A',
      confiantCdn: host,
      mapping: 'W3siaSI6MiwidCI6Int7b319Ont7d319eHt7aH19IiwicCI6MCwiRCI6MSwiciI6W119XQ==',
      activation: '|||MjIxNzg5NDY2OQ==,|||MjE4NTM0MTI3,|||MjE5NzUwMDg3,|||MjM0ODc4NzI3,|||MzcxNjYwOTY3',
      callback: function callback() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        console.log('w00t one more bad ad nixed.', args);
      }
    };
    /* eslint-enable no-underscore-dangle */
    // and load the script tag

    return Object(lib_load_script__WEBPACK_IMPORTED_MODULE_0__["loadScript"])("//".concat(host, "/gpt/a/wrap.js"), {
      async: true
    });
  } // Do nothing.


  return Promise.resolve();
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/article-aside-adverts.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/article-aside-adverts.js ***!
  \*************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");




var minArticleHeight = 1300;
var minImmersiveArticleHeight = 600;

var minContentHeight = function minContentHeight() {
  return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isImmersive ? minImmersiveArticleHeight : minArticleHeight;
};

var init = function init(start, stop) {
  start();
  var $col = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-secondary-column'); // article aside ads are added server-side if the container doesn't exist then stop.

  if (!$col.length || $col.css('display') === 'none') {
    stop();
    return Promise.resolve(false);
  }

  var $mainCol = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-content-main-column');
  var $adSlot = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-ad-slot', $col);

  if (!$adSlot.length || !$mainCol.length) {
    stop();
    return Promise.resolve(false);
  }

  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].read(function () {
    return $mainCol.dim().height;
  }).then(function (mainColHeight) {
    // Should switch to 'right-small' MPU for short articles
    if (mainColHeight < minContentHeight()) {
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].write(function () {
        $adSlot.removeClass('right-sticky js-sticky-mpu is-sticky');
        $adSlot[0].setAttribute('data-mobile', '1,1|2,2|300,250|300,274|fluid');
        return $adSlot[0];
      });
    }

    return $adSlot[0];
  }).then(function (adSlot) {
    stop();
    lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].emit('page:defaultcommercial:right', adSlot);
    return true;
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/article-body-adverts.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/article-body-adverts.js ***!
  \************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/article/space-filler */ "./static/src/javascripts/projects/common/modules/article/space-filler.js");
/* harmony import */ var commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/ad-sizes */ "./static/src/javascripts/projects/commercial/modules/ad-sizes.js");
/* harmony import */ var commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/add-slot */ "./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js");
/* harmony import */ var commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/track-ad-render */ "./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js");
/* harmony import */ var commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/dfp/create-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_carrot_traffic_driver__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/carrot-traffic-driver */ "./static/src/javascripts/projects/commercial/modules/carrot-traffic-driver.js");
/* harmony import */ var common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/modules/experiments/utils */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var common_modules_experiments_tests_commercial_ad_mobile_web_increase_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/modules/experiments/tests/commercial-ad-mobile-web-increase.js */ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-ad-mobile-web-increase.js");












var isPaidContent = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.isPaidContent', false);

var isInAdMobileWebVariant = function isInAdMobileWebVariant() {
  var variant = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_10__["getVariant"])(common_modules_experiments_tests_commercial_ad_mobile_web_increase_js__WEBPACK_IMPORTED_MODULE_11__["commercialAdMobileWebIncrease"], 'variant');
  return variant ? Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_10__["isInVariant"])(common_modules_experiments_tests_commercial_ad_mobile_web_increase_js__WEBPACK_IMPORTED_MODULE_11__["commercialAdMobileWebIncrease"], variant) : false;
};

var adSlotClassSelectorSizes = {
  minAbove: 500,
  minBelow: 500
};

var insertAdAtPara = function insertAdAtPara(para, name, type, classes, sizes) {
  var ads = Object(commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_7__["createSlots"])(type, {
    name: name,
    classes: classes,
    sizes: sizes
  });
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    return ads.forEach(function (ad) {
      if (para.parentNode) {
        para.parentNode.insertBefore(ad, para);
      }
    });
  }).then(function () {
    var shouldForceDisplay = ['im', 'carrot'].includes(name); // Only add the first ad (the DFP one) to GTP

    Object(commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_5__["addSlot"])(ads[0], shouldForceDisplay);
  });
};

var previousAllowedCandidate; // this facilitates a second filtering, now taking into account the candidates' position/size relative to the other candidates

var filterNearbyCandidates = function filterNearbyCandidates(maximumAdHeight) {
  return function (candidate) {
    if (!previousAllowedCandidate || Math.abs(candidate.top - previousAllowedCandidate.top) - maximumAdHeight >= adSlotClassSelectorSizes.minBelow) {
      previousAllowedCandidate = candidate;
      return true;
    }

    return false;
  };
};

var addDesktopInlineAds = function addDesktopInlineAds(isInline1) {
  var isImmersive = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.isImmersive'); // For inline1

  var defaultRules = {
    bodySelector: '.js-article__body',
    slotSelector: ' > p',
    minAbove: isImmersive ? 700 : 300,
    minBelow: 700,
    selectors: {
      ' > h2': {
        minAbove: 0,
        minBelow: 250
      },
      ' .ad-slot': adSlotClassSelectorSizes,
      ' > :not(p):not(h2):not(.ad-slot)': {
        minAbove: 35,
        minBelow: 400
      },
      ' figure.element--immersive': {
        minAbove: 0,
        minBelow: 600
      }
    },
    filter: filterNearbyCandidates(commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].mpu.height)
  }; // For any other inline

  var relaxedRules = {
    bodySelector: '.js-article__body',
    slotSelector: ' > p',
    minAbove: isPaidContent ? 1600 : 1000,
    minBelow: 800,
    selectors: {
      ' .ad-slot': adSlotClassSelectorSizes,
      ' figure.element--immersive': {
        minAbove: 0,
        minBelow: 600
      }
    },
    filter: filterNearbyCandidates(commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].halfPage.height)
  };
  var rules = isInline1 ? defaultRules : relaxedRules;

  var insertAds = function insertAds(paras) {
    var slots = paras.slice(0, isInline1 ? 1 : paras.length).map(function (para, i) {
      var inlineId = i + (isInline1 ? 1 : 2);
      return insertAdAtPara(para, "inline".concat(inlineId), 'inline', "inline".concat(isInline1 ? '' : ' offset-right'), isInline1 ? null : {
        desktop: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].halfPage]
      });
    });
    return Promise.all(slots).then(function () {
      return slots.length;
    });
  };

  return common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_3__["spaceFiller"].fillSpace(rules, insertAds, {
    waitForImages: true,
    waitForLinks: true,
    waitForInteractives: true
  });
};

var addMobileInlineAds = function addMobileInlineAds(isVariant) {
  var rules = {
    bodySelector: '.js-article__body',
    slotSelector: ' > p',
    minAbove: isVariant ? 200 : 300,
    minBelow: isVariant ? 200 : 300,
    selectors: {
      ' > h2': {
        minAbove: 100,
        minBelow: 250
      },
      ' .ad-slot': adSlotClassSelectorSizes,
      ' > :not(p):not(h2):not(.ad-slot)': {
        minAbove: 35,
        minBelow: isVariant ? 200 : 400
      },
      fromBottom: true
    },
    filter: filterNearbyCandidates(commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].mpu.height)
  };

  var insertAds = function insertAds(paras) {
    var slots = paras.map(function (para, i) {
      return insertAdAtPara(para, i === 0 ? 'top-above-nav' : "inline".concat(i), i === 0 ? 'top-above-nav' : 'inline', 'inline');
    });
    return Promise.all(slots).then(function () {
      return slots.length;
    });
  }; // This just returns whatever is passed in the second argument


  return common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_3__["spaceFiller"].fillSpace(rules, insertAds, {
    waitForImages: true,
    waitForLinks: true,
    waitForInteractives: true
  });
};

var addInlineAds = function addInlineAds() {
  var isMobile = Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["isBreakpoint"])({
    max: 'phablet'
  });

  if (isMobile) {
    return addMobileInlineAds(isInAdMobileWebVariant());
  }

  if (isPaidContent) {
    return addDesktopInlineAds(false);
  }

  return addDesktopInlineAds(true).then(function () {
    return addDesktopInlineAds(false);
  });
};

var attemptToAddInlineMerchAd = function attemptToAddInlineMerchAd() {
  var rules = {
    bodySelector: '.js-article__body',
    slotSelector: ' > p',
    minAbove: 300,
    minBelow: 0,
    selectors: {
      ' > .merch': {
        minAbove: 0,
        minBelow: 0
      },
      ' > header': {
        minAbove: Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["isBreakpoint"])({
          max: 'tablet'
        }) ? 300 : 700,
        minBelow: 0
      },
      ' > h2': {
        minAbove: 100,
        minBelow: 250
      },
      ' .ad-slot': adSlotClassSelectorSizes,
      ' > :not(p):not(h2):not(.ad-slot)': {
        minAbove: 200,
        minBelow: 400
      }
    }
  };
  return common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_3__["spaceFiller"].fillSpace(rules, function (paras) {
    return insertAdAtPara(paras[0], 'im', 'im').then(function () {
      return true;
    });
  }, {
    waitForImages: true,
    waitForLinks: true,
    waitForInteractives: true
  });
};

var init = function init(start, stop) {
  start();

  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_8__["commercialFeatures"].articleBodyAdverts) {
    stop();
    return Promise.resolve();
  }

  var im = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.hasInlineMerchandise ? attemptToAddInlineMerchAd() : Promise.resolve(false);
  im.then(function (inlineMerchAdded) {
    return inlineMerchAdded ? Object(commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_6__["trackAdRender"])('dfp-ad--im') : Promise.resolve();
  }).then(commercial_modules_carrot_traffic_driver__WEBPACK_IMPORTED_MODULE_9__["initCarrot"]).then(addInlineAds).then(stop);
  return im;
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/carrot-traffic-driver.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/carrot-traffic-driver.js ***!
  \*************************************************************************************/
/*! exports provided: initCarrot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCarrot", function() { return initCarrot; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/add-slot */ "./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js");
/* harmony import */ var commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/create-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/article/space-filler */ "./static/src/javascripts/projects/common/modules/article/space-filler.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");






var defaultRules = {
  bodySelector: '.js-article__body',
  slotSelector: ' > p',
  minAbove: 500,
  minBelow: 400,
  clearContentMeta: 0,
  selectors: {
    ' .element-rich-link': {
      minAbove: 100,
      minBelow: 400
    },
    ' .element-image': {
      minAbove: 440,
      minBelow: 440
    },
    ' .player': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h1': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h2': {
      minAbove: 50,
      minBelow: 50
    },
    ' > *:not(p):not(h2):not(blockquote)': {
      minAbove: 50,
      minBelow: 50
    },
    ' .ad-slot': {
      minAbove: 100,
      minBelow: 100
    },
    ' .element-pullquote': {
      minAbove: 400,
      minBelow: 400
    }
  },
  fromBottom: true
}; // desktop(980) and tablet(740)

var desktopRules = {
  bodySelector: '.js-article__body',
  slotSelector: ' > p',
  minAbove: 500,
  minBelow: 400,
  clearContentMeta: 0,
  selectors: {
    ' .element-rich-link': {
      minAbove: 400,
      minBelow: 400
    },
    ' .element-image': {
      minAbove: 440,
      minBelow: 440
    },
    ' .player': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h1': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h2': {
      minAbove: 50,
      minBelow: 50
    },
    ' > *:not(p):not(h2):not(blockquote)': {
      minAbove: 50,
      minBelow: 50
    },
    ' .ad-slot': {
      minAbove: 400,
      minBelow: 400
    },
    ' .ad-slot--im': {
      minAbove: 400,
      minBelow: 400
    },
    ' .element-pullquote': {
      minAbove: 400,
      minBelow: 400
    }
  },
  fromBottom: true
}; // mobile(320) and above

var mobileRules = {
  bodySelector: '.js-article__body',
  slotSelector: ' > p',
  minAbove: 500,
  minBelow: 400,
  clearContentMeta: 0,
  selectors: {
    ' .element-rich-link': {
      minAbove: 400,
      minBelow: 400
    },
    ' .element-image': {
      minAbove: 440,
      minBelow: 440
    },
    ' .player': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h1': {
      minAbove: 50,
      minBelow: 50
    },
    ' > h2': {
      minAbove: 50,
      minBelow: 50
    },
    ' > *:not(p):not(h2):not(blockquote)': {
      minAbove: 50,
      minBelow: 50
    },
    ' .ad-slot': {
      minAbove: 400,
      minBelow: 400
    },
    ' .ad-slot--im': {
      minAbove: 400,
      minBelow: 400
    },
    ' .element-pullquote': {
      minAbove: 400,
      minBelow: 400
    }
  },
  fromBottom: true
};

var insertSlot = function insertSlot(paras) {
  var slots = Object(commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_2__["createSlots"])('carrot');
  var candidates = paras.slice(1);
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
    slots.forEach(function (slot) {
      if (candidates[0] && candidates[0].parentNode) {
        candidates[0].parentNode.insertBefore(slot, candidates[0]);
      }
    });
  }).then(function () {
    return Object(commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_1__["addSlot"])(slots[0], true);
  });
};

var getRules = function getRules() {
  switch (Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["getBreakpoint"])()) {
    case 'mobile':
    case 'mobileMedium':
    case 'mobileLandscape':
    case 'phablet':
      return mobileRules;

    case 'tablet':
    case 'desktop':
      return desktopRules;

    default:
      return defaultRules;
  }
};

var initCarrot = function initCarrot() {
  if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_3__["commercialFeatures"].carrotTrafficDriver) {
    return common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_4__["spaceFiller"].fillSpace(getRules(), insertSlot, {
      waitForImages: true,
      waitForLinks: true,
      waitForInteractives: true
    });
  }

  return Promise.resolve();
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/check-dispatcher.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/check-dispatcher.js ***!
  \********************************************************************************/
/*! exports provided: initCheckDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCheckDispatcher", function() { return initCheckDispatcher; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/email/run-checks */ "./static/src/javascripts/projects/common/modules/email/run-checks.js");
/* harmony import */ var common_modules_email_email_article__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/email/email-article */ "./static/src/javascripts/projects/common/modules/email/email-article.js");
/* harmony import */ var commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/track-ad-render */ "./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var common_modules_check_mediator_checks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/check-mediator-checks */ "./static/src/javascripts/projects/common/modules/check-mediator-checks.js");
/* harmony import */ var common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/check-mediator */ "./static/src/javascripts/projects/common/modules/check-mediator.js");
/* harmony import */ var common_modules_experiments_acquisition_test_selector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/experiments/acquisition-test-selector */ "./static/src/javascripts/projects/common/modules/experiments/acquisition-test-selector.js");









var someCheckPassed = function someCheckPassed(results) {
  return results.includes(true);
};

var everyCheckPassed = function everyCheckPassed(results) {
  return !results.includes(false);
};
/**
    Any check added to checksToDispatch should also
    be added to the array of checks in './check-mediator-checks'.
* */


var checksToDispatch = {
  isOutbrainDisabled: function isOutbrainDisabled() {
    if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].outbrain) {
      return Promise.resolve(false);
    }

    return Promise.resolve(true);
  },
  isUserInContributionsAbTest: function isUserInContributionsAbTest() {
    return Promise.resolve(!!Object(common_modules_experiments_acquisition_test_selector__WEBPACK_IMPORTED_MODULE_7__["getTest"])());
  },
  isUserNotInContributionsAbTest: function isUserNotInContributionsAbTest() {
    return Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isUserInContributionsAbTest').then(function (userInContributionsAbTest) {
      return !userInContributionsAbTest;
    });
  },
  emailCanRunPreCheck: function emailCanRunPreCheck() {
    return Promise.resolve(Object(common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_1__["allEmailCanRun"])());
  },
  listCanRun: function listCanRun() {
    var listConfigs = Object(common_modules_email_email_article__WEBPACK_IMPORTED_MODULE_2__["getListConfigs"])();
    var canRun = !!Object.keys(listConfigs).find(function (key) {
      return Object(common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_1__["listCanRun"])(listConfigs[key]);
    });
    return Promise.resolve(canRun);
  },
  emailInArticleOutbrainEnabled: function emailInArticleOutbrainEnabled() {
    return Promise.resolve(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.emailInArticleOutbrain);
  },
  hasHighPriorityAdLoaded: function hasHighPriorityAdLoaded() {
    // if thirdPartyTags false no external ads are loaded
    if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].thirdPartyTags && common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].highMerch) {
      return Promise.resolve(Object(commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_3__["trackAdRender"])('dfp-ad--merchandising-high'));
    }

    return Promise.resolve(false);
  },
  hasLowPriorityAdLoaded: function hasLowPriorityAdLoaded() {
    // if thirdPartyTags false no external ads are loaded
    if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].thirdPartyTags) {
      return Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasHighPriorityAdLoaded').then(function (highPriorityAdLoaded) {
        if (highPriorityAdLoaded) {
          return Promise.resolve(Object(commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_3__["trackAdRender"])('dfp-ad--merchandising'));
        }

        return Promise.resolve(true);
      });
    }

    return Promise.resolve(false);
  },
  hasLowPriorityAdNotLoaded: function hasLowPriorityAdNotLoaded() {
    return Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasLowPriorityAdLoaded').then(function (lowPriorityAdLoaded) {
      return !lowPriorityAdLoaded;
    });
  },
  isStoryQuestionsOnPage: function isStoryQuestionsOnPage() {
    return Promise.resolve(document.querySelectorAll('.js-ask-question-link').length > 0);
  },
  isOutbrainBlockedByAds: function isOutbrainBlockedByAds() {
    var dependentChecks = [Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasHighPriorityAdLoaded'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasLowPriorityAdLoaded')];
    return Promise.all(dependentChecks).then(function (results) {
      return everyCheckPassed(results);
    });
  },
  isOutbrainMerchandiseCompliant: function isOutbrainMerchandiseCompliant() {
    var dependentChecks = [Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasHighPriorityAdLoaded'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('hasLowPriorityAdNotLoaded')];
    return Promise.all(dependentChecks).then(function (results) {
      return everyCheckPassed(results);
    });
  },
  isOutbrainMerchandiseCompliantOrBlockedByAds: function isOutbrainMerchandiseCompliantOrBlockedByAds() {
    var dependentChecks = [Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isOutbrainMerchandiseCompliant'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isOutbrainBlockedByAds')];
    return Promise.all(dependentChecks).then(function (results) {
      return someCheckPassed(results);
    });
  },
  emailCanRun: function emailCanRun() {
    var dependentChecks = [Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('emailCanRunPreCheck'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('listCanRun'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('emailInArticleOutbrainEnabled'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isUserNotInContributionsAbTest')];
    return Promise.all(dependentChecks).then(function (results) {
      return everyCheckPassed(results);
    });
  },
  emailCanRunPostCheck: function emailCanRunPostCheck() {
    var dependentChecks = [Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isUserInEmailAbTest'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isOutbrainMerchandiseCompliantOrBlockedByAds'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isOutbrainDisabled'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["waitForCheck"])('isStoryQuestionsOnPage')];
    return Promise.all(dependentChecks).then(function (results) {
      return someCheckPassed(results);
    });
  }
};

var initCheckDispatcher = function initCheckDispatcher() {
  Object.keys(checksToDispatch).forEach(function (key) {
    if (common_modules_check_mediator_checks__WEBPACK_IMPORTED_MODULE_5__["checks"].includes(key)) {
      Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_6__["resolveCheck"])(key, checksToDispatch[key]());
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/close-disabled-slots.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/close-disabled-slots.js ***!
  \************************************************************************************/
/*! exports provided: closeDisabledSlots */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeDisabledSlots", function() { return closeDisabledSlots; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");





var shouldDisableAdSlot = function shouldDisableAdSlot(adSlot) {
  return window.getComputedStyle(adSlot).display === 'none';
};

var closeDisabledSlots = lodash_once__WEBPACK_IMPORTED_MODULE_2___default()(function () {
  // Get all ad slots
  var adSlots = qwery__WEBPACK_IMPORTED_MODULE_0___default()(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__["dfpEnv"].adSlotSelector); // remove the ones which should not be there

  adSlots = adSlots.filter(shouldDisableAdSlot);
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
    adSlots.forEach(function (adSlot) {
      return adSlot.remove();
    });
  });
});


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js":
/*!***************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js ***!
  \***************************************************************************/
/*! exports provided: VENDOR_CONSENT_COOKIE_NAME, VENDOR_CONSENT_COOKIE_MAX_AGE, CMP_GLOBAL_NAME, CMP_ID, CMP_VERSION, COOKIE_VERSION, COOKIE_NAME, defaultConfig, vendorVersionList, vendorVersionMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VENDOR_CONSENT_COOKIE_NAME", function() { return VENDOR_CONSENT_COOKIE_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VENDOR_CONSENT_COOKIE_MAX_AGE", function() { return VENDOR_CONSENT_COOKIE_MAX_AGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_GLOBAL_NAME", function() { return CMP_GLOBAL_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_ID", function() { return CMP_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_VERSION", function() { return CMP_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COOKIE_VERSION", function() { return COOKIE_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COOKIE_NAME", function() { return COOKIE_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vendorVersionList", function() { return vendorVersionList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vendorVersionMap", function() { return vendorVersionMap; });
//  strict
var vendorVersion = {
  version: 1,
  fields: [{
    name: 'cookieVersion',
    type: 'int',
    numBits: 6
  }, {
    name: 'created',
    type: 'date',
    numBits: 36
  }, {
    name: 'lastUpdated',
    type: 'date',
    numBits: 36
  }, {
    name: 'cmpId',
    type: 'int',
    numBits: 12
  }, {
    name: 'cmpVersion',
    type: 'int',
    numBits: 12
  }, {
    name: 'consentScreen',
    type: 'int',
    numBits: 6
  }, {
    name: 'consentLanguage',
    type: '6bitchar',
    numBits: 12
  }, {
    name: 'vendorListVersion',
    type: 'int',
    numBits: 12
  }, {
    name: 'purposeIdBitString',
    type: 'bits',
    numBits: 24
  }, {
    name: 'maxVendorId',
    type: 'int',
    numBits: 16
  }, {
    name: 'isRange',
    type: 'bool',
    numBits: 1
  }, {
    name: 'vendorIdBitString',
    type: 'bits',
    numBits: function numBits(decodedObject) {
      return decodedObject.maxVendorId;
    },
    validator: function validator(decodedObject) {
      return !decodedObject.isRange;
    }
  }, {
    name: 'defaultConsent',
    type: 'bool',
    numBits: 1,
    validator: function validator(decodedObject) {
      return decodedObject.isRange;
    }
  }, {
    name: 'numEntries',
    numBits: 12,
    type: 'int',
    validator: function validator(decodedObject) {
      return decodedObject.isRange;
    }
  }, {
    name: 'vendorRangeList',
    type: 'list',
    listCount: function listCount(decodedObject) {
      return decodedObject.numEntries;
    },
    validator: function validator(decodedObject) {
      return decodedObject.isRange;
    },
    fields: [{
      name: 'isRange',
      type: 'bool',
      numBits: 1
    }, {
      name: 'startVendorId',
      type: 'int',
      numBits: 16
    }, {
      name: 'endVendorId',
      type: 'int',
      numBits: 16,
      validator: function validator(decodedObject) {
        return decodedObject.isRange;
      }
    }]
  }]
};
var VENDOR_CONSENT_COOKIE_NAME = 'euconsent';
var VENDOR_CONSENT_COOKIE_MAX_AGE = 33696000;
var CMP_GLOBAL_NAME = '__cmp';
var CMP_ID = 112;
var CMP_VERSION = 1;
var COOKIE_VERSION = 1;
var COOKIE_NAME = 'GU_TK';
var defaultConfig = {
  storeConsentGlobally: false,
  storePublisherData: false,
  logging: false,
  gdprApplies: false
};
var vendorVersionList = [vendorVersion];
var vendorVersionMap = vendorVersionList.reduce(function (acc, definition) {
  acc[definition.version] = definition;
  return acc;
}, {});

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/cmp.js":
/*!***********************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/cmp.js ***!
  \***********************************************************************/
/*! exports provided: init, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/experiments/utils */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var common_modules_experiments_tests_commercial_cmp_customise__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/experiments/tests/commercial-cmp-customise */ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-cmp-customise.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./log */ "./static/src/javascripts/projects/commercial/modules/cmp/log.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./store */ "./static/src/javascripts/projects/commercial/modules/cmp/store.js");
/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cookie */ "./static/src/javascripts/projects/commercial/modules/cmp/cookie.js");
/* harmony import */ var _vendorlist__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./vendorlist */ "./static/src/javascripts/projects/commercial/modules/cmp/vendorlist.js");
/* harmony import */ var _cmp_env__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cmp-env */ "./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js");




//  strict












var readConsentCookie = function readConsentCookie(cookieName) {
  var cookieVal = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_5__["getCookie"])(cookieName); // flowlint sketchy-null-string:warn

  if (cookieVal && cookieVal.split('.')[0] === '1') return true;
  if (cookieVal && cookieVal.split('.')[0] === '0') return false;
  return null;
};

var isInCmpCustomiseTest = function isInCmpCustomiseTest() {
  var variant = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_8__["getVariant"])(common_modules_experiments_tests_commercial_cmp_customise__WEBPACK_IMPORTED_MODULE_9__["commercialCmpCustomise"], 'variant');
  return variant ? Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_8__["isInVariant"])(common_modules_experiments_tests_commercial_cmp_customise__WEBPACK_IMPORTED_MODULE_9__["commercialCmpCustomise"], variant) : false;
};

var generateStore = function generateStore(isInTest) {
  var store = new _store__WEBPACK_IMPORTED_MODULE_11__["CmpStore"](_cmp_env__WEBPACK_IMPORTED_MODULE_14__["CMP_ID"], _cmp_env__WEBPACK_IMPORTED_MODULE_14__["CMP_VERSION"], _cmp_env__WEBPACK_IMPORTED_MODULE_14__["COOKIE_VERSION"], readConsentCookie(_cmp_env__WEBPACK_IMPORTED_MODULE_14__["COOKIE_NAME"]), _vendorlist__WEBPACK_IMPORTED_MODULE_13__["shortVendorList"], isInTest);
  return store;
};

var isInEU = function isInEU() {
  return (Object(lib_cookies__WEBPACK_IMPORTED_MODULE_5__["getCookie"])('GU_geo_continent') || 'OTHER').toUpperCase() === 'EU';
};

var CmpService = function CmpService(store) {
  var _this = this;

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, CmpService);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isLoaded", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "cmpReady", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "cmpConfig", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "eventListeners", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "commandQueue", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "store", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "generateConsentString", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "processCommand", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "generateConsentString", function () {
    var _this$store = _this.store,
        vendorConsentData = _this$store.vendorConsentData,
        shortVendorList = _this$store.shortVendorList;

    if (_this.store.vendorConsentData && _this.store.shortVendorList) {
      _log__WEBPACK_IMPORTED_MODULE_10__["log"].info('GenerateConsentString: Persisted vendor consent data found'); // the encoding can fail if the format of the persisted data is incorrect!
      // TODO: Zero trust! we need to catch any errors, and log them...

      return Object(_cookie__WEBPACK_IMPORTED_MODULE_12__["encodeVendorConsentData"])(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({}, vendorConsentData, {
        shortVendorList: shortVendorList
      }));
    } // TODO: if the persisted data is missing we will need to generate it


    _log__WEBPACK_IMPORTED_MODULE_10__["log"].info('GenerateConsentString: No vendor consent data found'); // however, if the consent cookie is missing, we should return nothing.
    // The API spec suggests vendors use a timeout in case data is missing.
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "commands", {
    getVendorConsents: function getVendorConsents(vendorIds) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      var consent = _this.store.getVendorConsentsObject(vendorIds) || {};

      var result = _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default()({
        gdprApplies: _this.cmpConfig.gdprApplies,
        hasGlobalScope: _this.cmpConfig.storeConsentGlobally,
        metadata: _this.generateConsentString() || undefined
      }, consent);

      callback(result, true);
    },
    getConsentData: function getConsentData(_) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      var consentData = {
        gdprApplies: _this.cmpConfig.gdprApplies,
        hasGlobalScope: _this.cmpConfig.storeConsentGlobally,
        consentData: _this.generateConsentString() || undefined
      };
      callback(consentData, true);
    },
    getVendorList: function getVendorList(vendorListVersion) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])(lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('libs.cmp.fullVendorDataUrl'), {
        mode: 'cors'
      }).then(function (vendorList) {
        var _ref = vendorList || {},
            listVersion = _ref.vendorListVersion; // flowlint sketchy-null-number:warn


        if (!vendorListVersion || vendorListVersion === listVersion) {
          callback(vendorList, true);
        } else {
          callback(null, false);
        }
      }).then(undefined, function (err) {
        _log__WEBPACK_IMPORTED_MODULE_10__["log"].error('ERROR fetching fullvendorlist: ', err);
        callback(null, false);
      });
    },
    ping: function ping(_) {
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      var result = {
        gdprAppliesGlobally: _this.cmpConfig.storeConsentGlobally,
        cmpLoaded: true
      };
      callback(result, true);
    },
    addEventListener: function addEventListener(event, callback) {
      var eventSet = _this.eventListeners[event] || [];
      eventSet.push(callback);
      _this.eventListeners[event] = eventSet;

      if (event === 'isLoaded' && _this.isLoaded) {
        callback({
          event: event
        });
      }

      if (event === 'cmpReady' && _this.cmpReady) {
        callback({
          event: event
        });
      }
    }
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "processCommand", function (command, parameter) {
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    if (typeof _this.commands[command] !== 'function') {
      _log__WEBPACK_IMPORTED_MODULE_10__["log"].error("Invalid CMP command \"".concat(command, "\""));
    } else {
      _log__WEBPACK_IMPORTED_MODULE_10__["log"].info("Proccess command: ".concat(command, ", parameter: ").concat(parameter || 'unknown'));

      _this.commands[command](parameter, callback);
    }
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "processCommandQueue", function () {
    var queue = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(_this.commandQueue);

    if (queue.length) {
      _log__WEBPACK_IMPORTED_MODULE_10__["log"].info("Process ".concat(queue.length, " queued commands"));
      _this.commandQueue = [];
      queue.forEach(function (_ref2) {
        var callId = _ref2.callId,
            command = _ref2.command,
            parameter = _ref2.parameter,
            callback = _ref2.callback,
            event = _ref2.event;

        if (event) {
          _this.processCommand(command, parameter, function (returnValue) {
            return event.source.postMessage({
              __cmpReturn: {
                callId: callId,
                command: command,
                returnValue: returnValue
              }
            }, event.origin);
          });
        } else {
          _this.processCommand(command, parameter, callback);
        }
      });
    }
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "receiveMessage", function (_ref3) {
    var data = _ref3.data,
        origin = _ref3.origin,
        source = _ref3.source;

    if (data instanceof Object) {
      var cmp = data.__cmpCall;

      if (cmp) {
        _log__WEBPACK_IMPORTED_MODULE_10__["log"].info("Message from: ".concat(origin));
        var callId = cmp.callId,
            command = cmp.command,
            parameter = cmp.parameter;

        if (source && source.postMessage) {
          _this.processCommand(command, parameter, function (returnValue) {
            return source.postMessage({
              __cmpReturn: {
                callId: callId,
                command: command,
                returnValue: returnValue
              }
            }, origin);
          });
        } else {
          _log__WEBPACK_IMPORTED_MODULE_10__["log"].debug("Missing source: Unable to process command from ".concat(origin));
        }
      }
    }
  });

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "notify", function (event, data) {
    _log__WEBPACK_IMPORTED_MODULE_10__["log"].info("Notify event: ".concat(event));
    var eventSet = _this.eventListeners[event] || [];
    eventSet.forEach(function (listener) {
      listener({
        event: event,
        data: data
      });
    }); // Process any queued commands that were waiting for consent data

    if (event === 'onSubmit') {
      _this.processCommandQueue();
    }
  });

  this.isLoaded = false;
  this.cmpReady = false;
  this.store = store;
  this.commandQueue = [];
  this.eventListeners = {};
  this.processCommand.receiveMessage = this.receiveMessage;
  this.cmpConfig = _cmp_env__WEBPACK_IMPORTED_MODULE_14__["defaultConfig"];

  if (Object(lib_url__WEBPACK_IMPORTED_MODULE_6__["getUrlVars"])().cmpdebug) {
    this.cmpConfig.logging = 'debug';
    _log__WEBPACK_IMPORTED_MODULE_10__["log"].info('Set logging level to DEBUG');
  }

  if (isInEU()) {
    this.cmpConfig.gdprApplies = true;
  }
};

var init = function init() {
  // Only run our CmpService if prepareCmp has added the CMP stub
  if (window[_cmp_env__WEBPACK_IMPORTED_MODULE_14__["CMP_GLOBAL_NAME"]]) {
    // Pull queued commands from the CMP stub
    var _ref4 = window[_cmp_env__WEBPACK_IMPORTED_MODULE_14__["CMP_GLOBAL_NAME"]] || {},
        _ref4$commandQueue = _ref4.commandQueue,
        commandQueue = _ref4$commandQueue === void 0 ? [] : _ref4$commandQueue;

    var shouldAccessTestCookie = isInCmpCustomiseTest(); // Initialize the store with all of our consent data

    var store = generateStore(shouldAccessTestCookie);
    var cmp = new CmpService(store); // Expose `processCommand` as the CMP implementation

    window[_cmp_env__WEBPACK_IMPORTED_MODULE_14__["CMP_GLOBAL_NAME"]] = cmp.processCommand;
    cmp.commandQueue = commandQueue;
    cmp.isLoaded = true;
    cmp.notify('isLoaded'); // Execute any previously queued command

    cmp.processCommandQueue();
    cmp.cmpReady = true;
    cmp.notify('cmpReady');

    if (shouldAccessTestCookie) {
      _log__WEBPACK_IMPORTED_MODULE_10__["log"].info('CMP customise is ACTIVE');
    }
  }
};
var _ = {
  CmpService: CmpService,
  readConsentCookie: readConsentCookie
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/consent-tracker.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/consent-tracker.js ***!
  \***********************************************************************************/
/*! exports provided: trackConsent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackConsent", function() { return trackConsent; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fetch */ "./static/src/javascripts/lib/fetch.js");
/* harmony import */ var common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/ad-prefs.lib */ "./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js");
/* harmony import */ var commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/cmp/cmp-env */ "./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js");
/* harmony import */ var commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/prebid/utils */ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js");






var shouldTrack = function shouldTrack() {
  // gather analytics from 1% (1 in 100) of page views
  var inSample = Object(commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_4__["getRandomIntInclusive"])(1, 100) === 1;
  return lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.commercialPageViewAnalytics && (inSample || lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isDev);
};

var buildPayload = function buildPayload(consent, pageViewId) {
  return {
    pv: pageViewId,
    cs: consent.consentData,
    cc: Object(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_2__["getAdConsentState"])(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_2__["thirdPartyTrackingAdConsent"])
  };
};

var postConsent = function postConsent(payload) {
  var url = "".concat(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.ajaxUrl', ''), "/commercial/api/pv");
  Object(lib_fetch__WEBPACK_IMPORTED_MODULE_1__["default"])(url, {
    method: 'post',
    body: JSON.stringify(payload),
    mode: 'cors'
  });
};

var trackConsent = function trackConsent() {
  if (shouldTrack()) {
    var pageViewId = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('ophan.pageViewId');
    var cmp = window[commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_3__["CMP_GLOBAL_NAME"]];

    if (pageViewId && cmp) {
      cmp('getConsentData', [], function (result) {
        postConsent(buildPayload(result, pageViewId));
      });
    }
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/cookie.js":
/*!**************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/cookie.js ***!
  \**************************************************************************/
/*! exports provided: encodeVendorConsentData, decodeVendorConsentData, readVendorConsentCookie, writeVendorConsentCookie, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeVendorConsentData", function() { return encodeVendorConsentData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeVendorConsentData", function() { return decodeVendorConsentData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readVendorConsentCookie", function() { return readVendorConsentCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writeVendorConsentCookie", function() { return writeVendorConsentCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/cmp/log */ "./static/src/javascripts/projects/commercial/modules/cmp/log.js");
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/cmp/cmp-env */ "./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js");
/* harmony import */ var commercial_modules_cmp_cookieutils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/cmp/cookieutils */ "./static/src/javascripts/projects/commercial/modules/cmp/cookieutils.js");


//  strict





var encodeVendorCookieValue = function encodeVendorCookieValue(data) {
  if (data && data.cookieVersion) {
    return Object(commercial_modules_cmp_cookieutils__WEBPACK_IMPORTED_MODULE_5__["encodeCookieValue"])(data, commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__["vendorVersionMap"]);
  }
};

var decodeVendorCookieValue = function decodeVendorCookieValue(cookieValue) {
  return Object(commercial_modules_cmp_cookieutils__WEBPACK_IMPORTED_MODULE_5__["decodeCookieValue"])(cookieValue, commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__["vendorVersionMap"]);
};

var encodeVendorIdsToBits = function encodeVendorIdsToBits(maxVendorId) {
  var selectedVendorIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var vendorString = '';

  for (var id = 1; id <= maxVendorId; id += 1) {
    vendorString += selectedVendorIds.includes(id) ? '1' : '0';
  }

  return Object(commercial_modules_cmp_cookieutils__WEBPACK_IMPORTED_MODULE_5__["padRight"])(vendorString, Math.max(0, maxVendorId - vendorString.length));
};

var encodePurposeIdsToBits = function encodePurposeIdsToBits(purposeIDs, selectedPurposeIds) {
  var maxPurposeId = Math.max.apply(Math, [0].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(purposeIDs), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(selectedPurposeIds)));
  var purposeString = '';

  for (var id = 1; id <= maxPurposeId; id += 1) {
    purposeString += selectedPurposeIds.includes(id) ? '1' : '0';
  }

  return purposeString;
};

var decodeBitsToIds = function decodeBitsToIds(bitString) {
  var ids = bitString.split('').reduce(function (acc, bit, index) {
    if (bit === '1') {
      acc.push(index + 1);
    }

    return acc;
  }, []);
  return ids;
};

var convertVendorsToRanges = function convertVendorsToRanges(maxVendorId) {
  var selectedIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var range = [];
  var ranges = [];

  for (var id = 1; id <= maxVendorId; id += 1) {
    if (selectedIds.includes(id)) {
      range.push(id);
    } // If the range has ended or at the end of vendors add entry to the list


    if ((!selectedIds.includes(id) || id === maxVendorId) && range.length) {
      var startVendorId = range.shift();
      var endVendorId = range.pop();
      range = [];
      ranges.push({
        isRange: typeof endVendorId === 'number',
        startVendorId: startVendorId,
        endVendorId: endVendorId
      });
    }
  }

  return ranges;
};

var encodeVendorConsentData = function encodeVendorConsentData(data, shortVendorList) {
  var _data$selectedPurpose = data.selectedPurposeIds,
      selectedPurposeIds = _data$selectedPurpose === void 0 ? [] : _data$selectedPurpose,
      _data$selectedVendorI = data.selectedVendorIds,
      selectedVendorIds = _data$selectedVendorI === void 0 ? [] : _data$selectedVendorI,
      maxVendorId = data.maxVendorId;
  var purposeIDs = shortVendorList ? shortVendorList.purposeIDs : []; // Encode the data with and without ranges and return the smallest encoded payload

  var noRangesData = encodeVendorCookieValue(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, data, {
    maxVendorId: maxVendorId,
    purposeIdBitString: encodePurposeIdsToBits(purposeIDs, selectedPurposeIds),
    isRange: false,
    vendorIdBitString: encodeVendorIdsToBits(maxVendorId, selectedVendorIds)
  }));
  var vendorRangeList = convertVendorsToRanges(maxVendorId, selectedVendorIds);
  var rangesData = encodeVendorCookieValue(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, data, {
    maxVendorId: maxVendorId,
    purposeIdBitString: encodePurposeIdsToBits(purposeIDs, selectedPurposeIds),
    isRange: true,
    defaultConsent: false,
    numEntries: vendorRangeList.length,
    vendorRangeList: vendorRangeList
  })); // flowlint sketchy-null-string:warn

  if (noRangesData && rangesData) {
    return noRangesData.length < rangesData.length ? noRangesData : rangesData;
  }

  commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_2__["log"].error('Could not encode vendor consent data');
  return '';
};

var decodeVendorConsentData = function decodeVendorConsentData(cookieValue) {
  // $FlowFixMe allowing Object just this once since sanity checks below
  var decoded = decodeVendorCookieValue(cookieValue);
  var cookieVersion = decoded.cookieVersion,
      cmpId = decoded.cmpId,
      cmpVersion = decoded.cmpVersion,
      consentScreen = decoded.consentScreen,
      consentLanguage = decoded.consentLanguage,
      vendorListVersion = decoded.vendorListVersion,
      purposeIdBitString = decoded.purposeIdBitString,
      maxVendorId = decoded.maxVendorId,
      created = decoded.created,
      lastUpdated = decoded.lastUpdated,
      isRange = decoded.isRange,
      defaultConsent = decoded.defaultConsent,
      vendorIdBitString = decoded.vendorIdBitString,
      vendorRangeList = decoded.vendorRangeList;
  var cookieData = {
    cookieVersion: cookieVersion,
    cmpId: cmpId,
    cmpVersion: cmpVersion,
    consentScreen: consentScreen,
    consentLanguage: consentLanguage,
    vendorListVersion: vendorListVersion,
    selectedVendorIds: [],
    selectedPurposeIds: decodeBitsToIds(purposeIdBitString),
    maxVendorId: maxVendorId,
    created: created,
    lastUpdated: lastUpdated
  };

  if (isRange) {
    var idMap = vendorRangeList.reduce( // eslint-disable-next-line no-shadow
    function (acc, _ref) {
      var isRange = _ref.isRange,
          startVendorId = _ref.startVendorId,
          endVendorId = _ref.endVendorId;
      var lastVendorId = isRange ? endVendorId : startVendorId;

      for (var i = startVendorId; i <= lastVendorId; i += 1) {
        acc[i] = true;
      }

      return acc;
    }, {});

    for (var i = 0; i <= maxVendorId; i += 1) {
      if (defaultConsent && !idMap[i] || !defaultConsent && idMap[i]) {
        cookieData.selectedVendorIds.push(i);
      }
    }
  } else {
    cookieData.selectedVendorIds = decodeBitsToIds(vendorIdBitString);
  }

  return cookieData;
};

var readVendorConsentCookie = function readVendorConsentCookie() {
  var cookieVal = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_3__["getCookie"])(commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__["VENDOR_CONSENT_COOKIE_NAME"]);

  if (cookieVal) {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_2__["log"].info("Read consent data from cookie: ".concat(cookieVal));
    return decodeVendorConsentData(cookieVal);
  }

  commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_2__["log"].info('Unable to read from CMP cookie');
  return false;
};

var writeVendorConsentCookie = function writeVendorConsentCookie(vendorConsentData) {
  commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_2__["log"].debug("Attempting to write consent data to cookie", vendorConsentData);
  return Promise.resolve(Object(lib_cookies__WEBPACK_IMPORTED_MODULE_3__["addCookie"])(commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__["VENDOR_CONSENT_COOKIE_NAME"], encodeVendorConsentData(vendorConsentData), commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_4__["VENDOR_CONSENT_COOKIE_MAX_AGE"], true));
};


var _ = {
  encodeVendorCookieValue: encodeVendorCookieValue,
  decodeVendorCookieValue: decodeVendorCookieValue,
  encodeVendorIdsToBits: encodeVendorIdsToBits,
  decodeBitsToIds: decodeBitsToIds,
  encodePurposeIdsToBits: encodePurposeIdsToBits,
  convertVendorsToRanges: convertVendorsToRanges
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/cookieutils.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/cookieutils.js ***!
  \*******************************************************************************/
/*! exports provided: padRight, encodeCookieValue, decodeCookieValue, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "padRight", function() { return padRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeCookieValue", function() { return encodeCookieValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeCookieValue", function() { return decodeCookieValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/cmp/log */ "./static/src/javascripts/projects/commercial/modules/cmp/log.js");

//  strict

var SIX_BIT_ASCII_OFFSET = 65;
var NUM_BITS_VERSION = 6;

var repeat = function repeat(count) {
  var string = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
  var padString = '';

  for (var i = 0; i < count; i += 1) {
    padString += string;
  }

  return padString;
};

var padLeft = function padLeft(string, padding) {
  return repeat(Math.max(0, padding)).toString() + string;
};

var padRight = function padRight(string, padding) {
  return string + repeat(Math.max(0, padding));
};

var encodeIntToBits = function encodeIntToBits(number, numBits) {
  var bitString = '';

  if (typeof number === 'number' && !Number.isNaN(number)) {
    bitString = parseInt(number, 10).toString(2);
  } // Pad the string if not filling all bits
  // flowlint sketchy-null-number:warn


  if (numBits && numBits >= bitString.length) {
    bitString = padLeft(bitString, numBits - bitString.length);
  } // Truncate the string if longer than the number of bits


  if (numBits && numBits < bitString.length) {
    bitString = bitString.substring(0, numBits);
  }

  return bitString;
};

var getEncoded = function getEncoded(string) {
  if (typeof string !== 'string') {
    return '';
  }

  return string.split('').map(function (char) {
    var int = Math.max(0, char.toUpperCase().charCodeAt(0) - SIX_BIT_ASCII_OFFSET);
    return encodeIntToBits(int > 25 ? 0 : int, 6);
  }).join('');
};
/**
 * Encodes each character of a string in 6 bits starting
 * with [aA]=0 through [zZ]=25
 */


var encode6BitCharacters = function encode6BitCharacters(string, numBits) {
  var encoded = getEncoded(string);
  return padRight(encoded, numBits).substr(0, numBits);
};

var encodeBoolToBits = function encodeBoolToBits(value) {
  return encodeIntToBits(value === true ? 1 : 0, 1);
};

var encodeDateToBits = function encodeDateToBits(date, numBits) {
  if (date instanceof Date) {
    return encodeIntToBits(date.getTime() / 100, numBits);
  }

  return encodeIntToBits(date, numBits);
};

var decodeBitsToInt = function decodeBitsToInt(bitString, start, length) {
  var str = bitString.substr(start, length);
  return parseInt(str, 2);
};

var decodeBitsToDate = function decodeBitsToDate(bitString, start, length) {
  return new Date(decodeBitsToInt(bitString, start, length) * 100);
};

var decodeBitsToBool = function decodeBitsToBool(bitString, start) {
  var str = bitString.substr(start, 1);
  return parseInt(str, 2) === 1;
};

var decode6BitCharacters = function decode6BitCharacters(bitString, start, length) {
  var decoded = '';
  var decodeStart = start;

  while (decodeStart < start + length) {
    decoded += String.fromCharCode(SIX_BIT_ASCII_OFFSET + decodeBitsToInt(bitString, decodeStart, 6));
    decodeStart += 6;
  }

  return decoded;
};

var encodeFields = function encodeFields(_ref) {
  var input = _ref.input,
      fields = _ref.fields;
  return fields.reduce(function (acc, field) {
    // eslint-disable-next-line no-use-before-define
    var res = acc + encodeField({
      input: input,
      field: field
    });
    return res;
  }, '');
};

var encodeField = function encodeField(_ref2) {
  var input = _ref2.input,
      field = _ref2.field;
  var name = field.name,
      type = field.type,
      numBits = field.numBits,
      encoder = field.encoder,
      validator = field.validator;

  if (typeof validator === 'function') {
    if (!validator(input)) {
      return '';
    }
  }

  if (typeof encoder === 'function') {
    return encoder(input);
  }

  var bitCount = typeof numBits === 'function' ? numBits(input) : numBits;
  var inputValue = input[name];
  var fieldValue = inputValue === null || inputValue === undefined ? '' : inputValue;

  switch (type) {
    case 'int':
      return encodeIntToBits(fieldValue, bitCount);

    case 'bool':
      return encodeBoolToBits(fieldValue);

    case 'date':
      return encodeDateToBits(fieldValue, bitCount);

    case 'bits':
      if (typeof fieldValue === 'string') {
        return padRight(fieldValue, bitCount - fieldValue.length).substring(0, bitCount);
      }

      return '';

    case '6bitchar':
      if (typeof fieldValue === 'string') {
        return encode6BitCharacters(fieldValue, bitCount);
      }

      return '';

    case 'list':
      if (Array.isArray(fieldValue)) {
        return fieldValue.reduce(function (acc, listValue) {
          return acc + encodeFields({
            // $FlowFixMe we have gotten this far... this will okay
            input: listValue,
            fields: field.fields ? field.fields : []
          });
        }, '');
      }

      return '';

    default:
      commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].warn("Cookie definition field found without encoder or type: ".concat(name));
      return '';
  }
};

var decodeFields = function decodeFields(_ref3) {
  var input = _ref3.input,
      fields = _ref3.fields,
      _ref3$startPosition = _ref3.startPosition,
      startPosition = _ref3$startPosition === void 0 ? 0 : _ref3$startPosition;
  var position = startPosition;
  var decodedObject = fields.reduce(function (acc, field) {
    var name = field.name,
        numBits = field.numBits; // eslint-disable-next-line no-use-before-define

    var _decodeField = decodeField({
      input: input,
      output: acc,
      startPosition: position,
      field: field
    }),
        fieldValue = _decodeField.fieldValue,
        newPosition = _decodeField.newPosition;

    if (fieldValue !== undefined) {
      acc[name] = fieldValue;
    }

    if (newPosition !== undefined) {
      position = newPosition;
    } else if (typeof numBits === 'number') {
      position += numBits;
    }

    return acc;
  }, {});
  return {
    decodedObject: decodedObject,
    newPosition: position
  };
};

var decodeField = function decodeField(_ref4) {
  var input = _ref4.input,
      output = _ref4.output,
      startPosition = _ref4.startPosition,
      field = _ref4.field;
  var type = field.type,
      numBits = field.numBits,
      decoder = field.decoder,
      validator = field.validator,
      listCount = field.listCount;

  if (typeof validator === 'function') {
    if (!validator(output)) {
      // Not decoding this field so make sure we start parsing the next field at
      // the same point
      return {
        newPosition: startPosition
      };
    }
  }

  if (typeof decoder === 'function') {
    return decoder(input, output, startPosition);
  }

  var bitCount = typeof numBits === 'function' ? numBits(output) : numBits;

  var listEntryCount = function () {
    if (typeof listCount === 'function') {
      return listCount(output);
    }

    return typeof listCount === 'number' ? listCount : 0;
  }();

  switch (type) {
    case 'int':
      return {
        fieldValue: decodeBitsToInt(input, startPosition, bitCount)
      };

    case 'bool':
      return {
        fieldValue: decodeBitsToBool(input, startPosition)
      };

    case 'date':
      return {
        fieldValue: decodeBitsToDate(input, startPosition, bitCount)
      };

    case 'bits':
      return {
        fieldValue: input.substr(startPosition, bitCount)
      };

    case '6bitchar':
      return {
        fieldValue: decode6BitCharacters(input, startPosition, bitCount)
      };

    case 'list':
      return new Array(listEntryCount).fill().reduce(function (acc) {
        var _decodeFields = decodeFields({
          input: input,
          fields: field.fields ? field.fields : [],
          startPosition: acc.newPosition
        }),
            decodedObject = _decodeFields.decodedObject,
            newPosition = _decodeFields.newPosition;

        return {
          fieldValue: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(acc.fieldValue).concat([decodedObject]),
          newPosition: newPosition
        };
      }, {
        fieldValue: [],
        newPosition: startPosition
      });

    default:
      commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].warn("Cookie definition field found without decoder or type");
      return {};
  }
};
/**
 * Encode the data properties to a bit string. Encoding will encode
 * either `selectedVendorIds` or the `vendorRangeList` depending on
 * the value of the `isRange` flag.
 */


var encodeDataToBits = function encodeDataToBits(data, definitionMap) {
  var cookieVersion = data.cookieVersion;

  if (typeof cookieVersion !== 'number') {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].error('Could not find cookieVersion to encode');
  } else if (!definitionMap[cookieVersion]) {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].error("Could not find definition to encode cookie version ".concat(cookieVersion));
  } else {
    var cookieFields = definitionMap[cookieVersion].fields;
    return encodeFields({
      input: data,
      fields: cookieFields
    });
  }
};
/**
 * Take all fields required to encode the cookie and produce the
 * URL safe Base64 encoded value.
 */


var encodeCookieValue = function encodeCookieValue(data, definitionMap) {
  var binaryValue = encodeDataToBits(data, definitionMap); // flowlint sketchy-null-string:warn

  if (binaryValue) {
    // Pad length to multiple of 8
    var paddedBinaryValue = padRight(binaryValue, 7 - (binaryValue.length + 7) % 8); // Encode to bytes

    var bytes = '';

    for (var i = 0; i < paddedBinaryValue.length; i += 8) {
      bytes += String.fromCharCode(parseInt(paddedBinaryValue.substr(i, 8), 2));
    } // Make base64 string URL friendly


    return btoa(bytes).replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
  }
};

var decodeCookieBitValue = function decodeCookieBitValue(bitString, definitionMap) {
  var cookieVersion = decodeBitsToInt(bitString, 0, NUM_BITS_VERSION);

  if (typeof cookieVersion !== 'number') {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].error('Could not find cookieVersion to decode');
    return {};
  } else if (!definitionMap[cookieVersion]) {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_1__["log"].error("Could not find definition to decode cookie version ".concat(cookieVersion));
    return {};
  }

  var cookieFields = definitionMap[cookieVersion].fields;

  var _decodeFields2 = decodeFields({
    input: bitString,
    fields: cookieFields
  }),
      decodedObject = _decodeFields2.decodedObject;

  return decodedObject;
};
/**
 * Decode the (URL safe Base64) value of a cookie into an object.
 */


var decodeCookieValue = function decodeCookieValue(cookieValue, definitionMap) {
  // Replace safe characters
  var unsafe = cookieValue.replace(/-/g, '+').replace(/_/g, '/') + '=='.substring(0, 3 * cookieValue.length % 4);
  var bytes = atob(unsafe);
  var inputBits = '';

  for (var i = 0; i < bytes.length; i += 1) {
    var bitString = bytes.charCodeAt(i).toString(2);
    inputBits += padLeft(bitString, 8 - bitString.length);
  }

  return decodeCookieBitValue(inputBits, definitionMap);
};


var _ = {
  padLeft: padLeft,
  encodeField: encodeField,
  encodeDataToBits: encodeDataToBits,
  encodeIntToBits: encodeIntToBits,
  encodeBoolToBits: encodeBoolToBits,
  encodeDateToBits: encodeDateToBits,
  encode6BitCharacters: encode6BitCharacters,
  decodeBitsToInt: decodeBitsToInt,
  decodeBitsToDate: decodeBitsToDate,
  decodeBitsToBool: decodeBitsToBool,
  decodeCookieBitValue: decodeCookieBitValue,
  decode6BitCharacters: decode6BitCharacters
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/log.js":
/*!***********************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/log.js ***!
  \***********************************************************************/
/*! exports provided: log */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/cmp/cmp-env */ "./static/src/javascripts/projects/commercial/modules/cmp/cmp-env.js");


/* eslint-disable no-console */

var logLevels = ['debug', 'info', 'warn', 'error'];
var log = logLevels.reduce(function (logger, funcName, index) {
  // $FlowFixMe
  logger[funcName] = function () {
    var consoleFunc = funcName === 'debug' ? 'log' : funcName;
    var logging = commercial_modules_cmp_cmp_env__WEBPACK_IMPORTED_MODULE_1__["defaultConfig"].logging;

    if (logging && console && typeof console[consoleFunc] === 'function') {
      var enabledLevelIndex = logLevels.indexOf(logging.toString().toLocaleLowerCase());

      if (logging === true || enabledLevelIndex > -1 && index >= enabledLevelIndex) {
        var _console;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var _ref = args.concat(),
            message = _ref[0],
            rest = _ref.slice(1);

        (_console = console)[consoleFunc].apply(_console, ["".concat(funcName.toUpperCase(), ": (CMP) ").concat(message)].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(rest)));
      }
    }
  };

  return logger;
}, {});

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/lotame-cmp.js":
/*!******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/lotame-cmp.js ***!
  \******************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
//  strict

var clientId = 12666;
var lotameVendorId = 95;
var lotameConsentKey = 'lotameConsent';

var lotameConsentData = function lotameConsentData(isConsenting) {
  return {
    analytics: isConsenting,
    crossdevice: isConsenting,
    datasharing: isConsenting,
    targeting: isConsenting
  };
}; // local.get actually returns any... so convert to boolean


var getLotameConsent = function getLotameConsent() {
  return !!lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].get(lotameConsentKey);
};

var setLotameConsent = function setLotameConsent(consent) {
  return lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].set(lotameConsentKey, consent);
};

var lotameCallback = function lotameCallback(isConsenting) {
  return function (data) {
    if ('error' in data) {
      setLotameConsent(false);
    } else if ('consent' in data) {
      setLotameConsent(isConsenting);
    }
  };
}; // TODO: what should happen when GDPR applies = false? consent data will not exist


var isConsentingData = function isConsentingData(consentData) {
  if (consentData && consentData.vendorConsents && consentData.purposeConsents) {
    var vendorConsents = consentData.vendorConsents;
    var purposeConsents = consentData.purposeConsents;
    return Object.keys(vendorConsents).every(function (k) {
      return vendorConsents[k];
    }) && Object.keys(purposeConsents).every(function (k) {
      return purposeConsents[k];
    });
  }

  return false;
};

var getLotameAdConsentFromCmp = function getLotameAdConsentFromCmp() {
  return new Promise(function (resolve, reject) {
    if ('__cmp' in window) {
      /*eslint-disable */
      window.__cmp(
      /* eslint-enable */
      'getVendorConsents', [lotameVendorId], function (consentData, success) {
        return success ? resolve(consentData) : reject(Error('Error calling getVendorConsents'));
      });
    } else {
      reject(Error('__cmp does not exist on the window'));
    }
  });
};

var init = function init() {
  if ('LOTCC' in window && 'setConsent' in window.LOTCC) {
    getLotameAdConsentFromCmp().then(isConsentingData).then(function (isConsenting) {
      // lotame consent is stored but may need to be updated:
      if (getLotameConsent() !== isConsenting) {
        return window.LOTCC.setConsent(lotameCallback(isConsenting), clientId, lotameConsentData(isConsenting));
      }
    }).catch(function (error) {
      return console.error("Error with lotame initialisation: ".concat(error.toString()));
    });
  }

  return Promise.resolve();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/store.js":
/*!*************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/store.js ***!
  \*************************************************************************/
/*! exports provided: CmpStore, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CmpStore", function() { return CmpStore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/cmp/log */ "./static/src/javascripts/projects/commercial/modules/cmp/log.js");
/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cookie */ "./static/src/javascripts/projects/commercial/modules/cmp/cookie.js");




//  strict



var generateVendorConsentResponse = function generateVendorConsentResponse(vendorConsentData, shortVendorList, vendorIds) {
  var _vendorConsentData$ma = vendorConsentData.maxVendorId,
      maxVendorId = _vendorConsentData$ma === void 0 ? 0 : _vendorConsentData$ma,
      _vendorConsentData$se = vendorConsentData.selectedVendorIds,
      selectedVendorIds = _vendorConsentData$se === void 0 ? [] : _vendorConsentData$se,
      _vendorConsentData$se2 = vendorConsentData.selectedPurposeIds,
      selectedPurposeIds = _vendorConsentData$se2 === void 0 ? [] : _vendorConsentData$se2;
  var purposeMap = {}; // Initialise allPurposes map

  var allPurposes = shortVendorList.purposeIDs;
  allPurposes.forEach(function (pid) {
    purposeMap[pid] = false;
  }); // Set the selected ones to true

  selectedPurposeIds.forEach(function (pid) {
    purposeMap[pid] = true;
  });
  var vendorMap = {}; // Initialise vendorMap

  if (vendorIds && vendorIds.length) {
    // We are only interested in those vendorIds to be included in the map
    vendorIds.forEach(function (vid) {
      vendorMap[vid] = false;
    });
  } else {
    for (var i = 1; i <= maxVendorId; i += 1) {
      // Got through all vendors to initialise vendorMap
      vendorMap[i] = false;
    }
  } // and set the ones that are selected to true, only
  // for the ones considered.


  selectedVendorIds.filter(function (svid) {
    return svid in vendorMap;
  }).forEach(function (svid) {
    vendorMap[svid] = true;
  });
  return {
    maxVendorId: maxVendorId,
    purposeConsents: purposeMap,
    vendorConsents: vendorMap
  };
};

var generateVendorData = function generateVendorData(canPersonalise, shortVendorList) {
  var allVendors = Object.keys(shortVendorList.purposesByVID).map(function (s) {
    return parseInt(s, 10);
  });
  var maxVendorId = Math.max.apply(Math, [0].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_3___default()(allVendors)));

  if (canPersonalise) {
    var selectedPurposeIds = shortVendorList.purposeIDs;
    var selectedVendorIds = allVendors;
    return {
      selectedPurposeIds: selectedPurposeIds,
      selectedVendorIds: selectedVendorIds,
      maxVendorId: maxVendorId
    };
  }

  return {
    selectedPurposeIds: [],
    selectedVendorIds: [],
    maxVendorId: maxVendorId
  };
};
/* 
   This is a stub. For now it just enriches the
   given parameters with some constant context data.
*/


var generateConsentData = function generateConsentData(cmpId, cmpVersion, cookieVersion, vendorListVersion) {
  var currentDate = new Date();
  return {
    cmpId: cmpId,
    cmpVersion: cmpVersion,
    cookieVersion: cookieVersion,
    vendorListVersion: vendorListVersion,
    created: currentDate,
    lastUpdated: currentDate,
    consentLanguage: 'EN',
    consentScreen: 0
  };
};

var getVendorConsentData = function getVendorConsentData(cmpId, cmpVersion, cookieVersion, canPersonalise, shortVendorList) {
  var isRunningCmpCustomise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

  if (isRunningCmpCustomise) {
    commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_4__["log"].info('getVendorConsentData: Running Cmp Customise');
    var cookieVal = Object(_cookie__WEBPACK_IMPORTED_MODULE_5__["readVendorConsentCookie"])();
    if (cookieVal) return _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default()({}, cookieVal);
  }

  if (typeof canPersonalise === 'boolean') {
    var consentData = generateConsentData(cmpId, cmpVersion, cookieVersion, shortVendorList.version);
    var selectedData = generateVendorData(canPersonalise, shortVendorList);
    return _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default()({}, consentData, selectedData);
  }

  commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_4__["log"].warn('Missing value for consent state, Store will be incomplete');
};

var CmpStore = function CmpStore(cmpId, cmpVersion, cookieVersion, canPersonalise, shortVendorList) {
  var _this = this;

  var isRunningCmpCustomise = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CmpStore);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "shortVendorList", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "consentData", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "canPersonalise", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "allowedVendorIds", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "vendorConsentData", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "vendorConsentResponse", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "getVendorConsentsObject", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "getVendorConsentsObject", function (vendorIds) {
    if (_this.vendorConsentData) {
      var consentDataResponse = generateVendorConsentResponse(_this.vendorConsentData, _this.shortVendorList, vendorIds);
      commercial_modules_cmp_log__WEBPACK_IMPORTED_MODULE_4__["log"].info('GetVendorConsentsObject: Successfully generated response');
      return _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default()({}, _this.consentData, consentDataResponse);
    }
  });

  this.shortVendorList = shortVendorList;
  this.canPersonalise = canPersonalise;
  this.allowedVendorIds = Object.keys(shortVendorList.purposesByVID).map(function (s) {
    return parseInt(s, 10);
  });
  this.consentData = generateConsentData(cmpId, cmpVersion, cookieVersion, shortVendorList.version);
  this.vendorConsentData = getVendorConsentData(cmpId, cmpVersion, cookieVersion, canPersonalise, shortVendorList, isRunningCmpCustomise);
};
var _ = {
  generateConsentData: generateConsentData,
  getVendorConsentData: getVendorConsentData,
  generateVendorData: generateVendorData,
  generateVendorConsentResponse: generateVendorConsentResponse
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/cmp/vendorlist.js":
/*!******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/cmp/vendorlist.js ***!
  \******************************************************************************/
/*! exports provided: shortVendorList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortVendorList", function() { return shortVendorList; });
/* eslint-disable */

/* DO NOT EDIT THIS.
 Regenerate by doing make compile-dev or make watch.
 See tools/__tasks__/compile/data/transform.js  */
var shortVendorList = {
  "version": 115,
  "purposeIDs": [1, 2, 3, 4, 5],
  "purposesByVID": {
    "1": [1, 2, 3, 4, 5],
    "2": [1, 2, 3],
    "3": [2, 3, 4, 5],
    "4": [1, 2, 3, 4, 5],
    "6": [1, 2, 3, 4, 5],
    "7": [2, 3, 4, 5],
    "8": [1, 2, 4],
    "9": [1, 2, 3, 4, 5],
    "10": [1],
    "11": [1],
    "12": [1, 3, 5],
    "13": [1, 2, 3],
    "14": [1, 2, 3, 4, 5],
    "15": [1, 2, 3, 4, 5],
    "16": [1, 3],
    "17": [1, 2, 3, 4, 5],
    "18": [1, 2, 3],
    "19": [1],
    "20": [],
    "21": [1, 2],
    "22": [1, 2, 3, 4, 5],
    "23": [1],
    "24": [1],
    "25": [1, 2],
    "26": [1, 2, 3, 4, 5],
    "27": [1, 3],
    "28": [1, 3],
    "29": [1, 2, 3, 4, 5],
    "30": [2],
    "31": [1, 2, 3, 4],
    "32": [1],
    "33": [1, 2, 3, 4],
    "34": [1, 2, 4, 5],
    "35": [1],
    "36": [5],
    "37": [1, 2, 3, 5],
    "38": [1, 2, 3, 5],
    "39": [1],
    "40": [1],
    "41": [2],
    "42": [1],
    "43": [1, 3],
    "44": [1],
    "45": [1, 2],
    "46": [1, 2, 3],
    "47": [1, 2, 3, 4, 5],
    "48": [1, 2, 3, 4, 5],
    "49": [1, 2, 3],
    "50": [1],
    "51": [1, 2, 3, 4, 5],
    "52": [1],
    "53": [1, 2],
    "55": [],
    "56": [1],
    "57": [1, 2, 3, 4, 5],
    "58": [1, 2, 3, 5],
    "59": [1, 2, 3],
    "60": [1],
    "61": [1, 2, 3, 5],
    "62": [1, 2, 3, 4, 5],
    "63": [],
    "64": [1],
    "65": [1, 2, 3, 4, 5],
    "66": [1, 2, 3, 5],
    "67": [1, 2, 3, 4, 5],
    "68": [1],
    "69": [1, 2, 3],
    "70": [],
    "71": [1, 2, 3],
    "72": [1, 2, 3, 5],
    "73": [2, 3, 4, 5],
    "74": [1, 3],
    "75": [1, 2, 3, 4, 5],
    "76": [1],
    "77": [1, 5],
    "78": [1],
    "79": [1],
    "80": [3, 5],
    "81": [1, 2, 3, 4, 5],
    "82": [1, 2, 3, 4, 5],
    "83": [5],
    "84": [],
    "85": [1, 2, 3, 4, 5],
    "86": [1, 2, 3, 4, 5],
    "87": [2, 4],
    "88": [1],
    "89": [1],
    "90": [1],
    "91": [1, 2, 3],
    "92": [],
    "93": [],
    "94": [1, 2, 3, 4, 5],
    "95": [1, 2, 3, 4, 5],
    "97": [1, 2, 3, 4, 5],
    "98": [1, 2, 3, 4],
    "100": [1, 2, 3],
    "101": [1, 2, 3, 4, 5],
    "102": [1, 2],
    "104": [1, 2],
    "105": [1, 3, 5],
    "108": [1, 2, 3, 4, 5],
    "109": [1, 2, 3, 5],
    "110": [1, 5],
    "111": [],
    "112": [1, 2, 3, 4, 5],
    "113": [1, 2, 3, 5],
    "114": [1, 2, 3],
    "115": [1],
    "119": [2],
    "120": [1, 2, 3, 4, 5],
    "122": [1, 2, 3],
    "124": [1, 2, 3, 5],
    "125": [1, 3, 5],
    "126": [5],
    "127": [1, 2, 4],
    "128": [1, 2, 3, 4, 5],
    "129": [1, 2, 3, 4, 5],
    "130": [1],
    "131": [1],
    "132": [1, 2],
    "133": [1, 3, 5],
    "134": [1, 2, 3],
    "136": [],
    "137": [],
    "138": [1],
    "139": [1, 2, 3],
    "140": [1, 2, 3, 4, 5],
    "141": [1, 2, 3, 4],
    "142": [1, 2],
    "143": [1, 2, 3, 4, 5],
    "144": [1, 2],
    "145": [1, 5],
    "147": [1, 2, 3],
    "148": [1],
    "149": [1, 2, 3],
    "150": [3],
    "151": [],
    "152": [],
    "153": [1, 2, 3, 4, 5],
    "154": [1, 2],
    "155": [1, 2, 3],
    "156": [1],
    "157": [1, 2, 3],
    "158": [1, 2, 3, 4, 5],
    "159": [1, 2, 3, 5],
    "160": [1, 2, 3, 4, 5],
    "161": [1, 2, 3, 4, 5],
    "162": [2],
    "163": [],
    "164": [1, 2, 3, 5],
    "165": [1],
    "167": [1, 5],
    "168": [1, 2, 3, 4, 5],
    "169": [1, 4],
    "170": [],
    "171": [1, 2, 3, 4, 5],
    "173": [1, 2, 3, 4, 5],
    "174": [],
    "175": [1, 2, 3, 4, 5],
    "177": [1, 2, 3, 4],
    "178": [],
    "179": [1, 2, 3, 4, 5],
    "180": [1],
    "182": [1, 2, 3, 4, 5],
    "183": [1, 2],
    "184": [1],
    "185": [1, 2, 3, 4, 5],
    "188": [],
    "189": [1, 3],
    "190": [1, 2, 3, 4, 5],
    "191": [1, 2, 3, 4, 5],
    "192": [1, 2, 3, 4, 5],
    "193": [1, 3],
    "194": [3, 5],
    "195": [],
    "196": [1, 2, 4],
    "197": [1, 3, 5],
    "198": [1, 3],
    "199": [1, 2, 3, 4, 5],
    "200": [],
    "201": [],
    "202": [1, 2, 3, 4, 5],
    "203": [],
    "205": [],
    "206": [1, 2, 3, 4, 5],
    "208": [2, 3],
    "209": [1],
    "210": [1, 2, 3, 4, 5],
    "211": [1, 2, 3, 4, 5],
    "212": [],
    "213": [],
    "214": [1, 2, 3],
    "215": [1, 2],
    "216": [],
    "217": [],
    "218": [],
    "221": [1, 2, 3, 4, 5],
    "223": [],
    "224": [2, 4],
    "225": [],
    "226": [1],
    "227": [2],
    "228": [],
    "229": [2, 4],
    "230": [1, 2, 3, 4, 5],
    "231": [1, 2, 3, 4, 5],
    "232": [],
    "234": [1, 2, 3],
    "235": [1],
    "236": [1, 2, 5],
    "237": [],
    "238": [],
    "239": [],
    "240": [],
    "241": [1, 2, 3, 4],
    "242": [1, 2],
    "243": [1, 2, 3, 4, 5],
    "244": [1, 2, 3, 4, 5],
    "245": [],
    "246": [],
    "248": [1],
    "249": [1, 2, 3, 4, 5],
    "250": [2, 3, 4],
    "251": [],
    "252": [],
    "253": [1, 2, 3, 4, 5],
    "254": [],
    "255": [2, 3, 5],
    "256": [1],
    "257": [1],
    "258": [],
    "259": [1, 2, 3, 4],
    "260": [3],
    "261": [1, 2, 3, 4, 5],
    "262": [3],
    "263": [],
    "264": [1, 2, 3, 4, 5],
    "265": [2, 3, 4],
    "266": [1, 2, 3, 4, 5],
    "268": [1, 2, 3, 4, 5],
    "269": [1, 2, 3, 4, 5],
    "270": [1, 3],
    "272": [1, 2, 3, 4, 5],
    "273": [],
    "274": [1, 2, 3, 4, 5],
    "275": [1, 2, 3],
    "276": [1, 2, 3, 4, 5],
    "277": [1, 2, 3, 4],
    "278": [],
    "279": [1, 2, 3, 4, 5],
    "280": [],
    "281": [],
    "282": [],
    "284": [],
    "285": [1],
    "287": [],
    "288": [2],
    "289": [1, 2, 3, 4, 5],
    "290": [1, 2, 3, 4, 5],
    "291": [1, 2, 4],
    "293": [],
    "294": [],
    "295": [1, 2, 3, 5],
    "297": [2],
    "298": [1, 2, 3, 5],
    "299": [],
    "301": [],
    "302": [1, 2, 3, 4, 5],
    "303": [1, 2, 3],
    "304": [1, 2, 3, 4, 5],
    "308": [1],
    "309": [],
    "310": [],
    "311": [1, 2, 3, 4, 5],
    "312": [1, 5],
    "314": [1, 2, 3],
    "315": [1, 3],
    "316": [1, 2, 3, 4, 5],
    "317": [1, 2, 3, 4, 5],
    "318": [2, 3, 4],
    "319": [1, 3],
    "320": [1, 2, 3],
    "321": [1, 2, 3, 5],
    "323": [2],
    "325": [],
    "326": [3, 5],
    "328": [1, 2, 3, 4, 5],
    "329": [],
    "330": [2],
    "331": [1, 2, 4],
    "333": [1, 2, 3, 4, 5],
    "334": [],
    "335": [],
    "336": [],
    "337": [1, 2, 3, 4, 5],
    "338": [],
    "339": [2, 3, 4, 5],
    "340": [1, 2, 3, 4, 5],
    "341": [1, 2],
    "343": [1, 2, 3, 4, 5],
    "344": [1, 3, 5],
    "345": [1, 3, 5],
    "346": [1, 2, 3, 4, 5],
    "347": [2, 4, 5],
    "349": [1, 2, 3, 4],
    "350": [1],
    "351": [1],
    "354": [2],
    "357": [1, 2, 3, 4, 5],
    "358": [1, 2, 3, 4, 5],
    "359": [1, 2, 3, 4, 5],
    "360": [],
    "361": [],
    "362": [1, 2, 3, 4, 5],
    "365": [],
    "366": [],
    "368": [1, 2, 3, 4, 5],
    "369": [1],
    "371": [],
    "373": [1, 2],
    "374": [1, 2, 4, 5],
    "375": [1, 2, 3],
    "376": [1, 2, 3, 5],
    "377": [1, 3, 5],
    "378": [],
    "380": [1, 2],
    "381": [1, 2, 3, 4, 5],
    "382": [1, 2, 4, 5],
    "384": [],
    "385": [1, 2, 3, 4],
    "387": [1, 3, 5],
    "388": [1],
    "389": [1, 2, 3, 4, 5],
    "390": [1, 3],
    "391": [],
    "392": [2, 3, 4],
    "394": [1, 2],
    "395": [],
    "397": [1, 2],
    "398": [1, 2, 3, 4, 5],
    "400": [1, 2, 3, 4, 5],
    "402": [2, 3, 4, 5],
    "403": [1, 3, 4, 5],
    "404": [],
    "405": [],
    "407": [1, 2],
    "408": [2],
    "409": [],
    "410": [1, 3],
    "412": [],
    "413": [1, 2, 3, 4, 5],
    "415": [],
    "416": [1, 2, 3, 4, 5],
    "418": [1],
    "421": [],
    "422": [1],
    "423": [1, 2, 3, 4, 5],
    "424": [],
    "425": [],
    "426": [],
    "427": [1, 2, 3, 4, 5],
    "428": [],
    "429": [1, 2, 3, 4, 5],
    "430": [],
    "431": [],
    "434": [1, 3],
    "435": [1, 2, 3],
    "436": [2, 3, 4],
    "438": [1, 2, 3],
    "440": [2, 3, 4],
    "442": [1, 2, 3, 4, 5],
    "443": [],
    "444": [2],
    "447": [],
    "448": [],
    "449": [],
    "450": [1, 2, 3, 4, 5],
    "452": [1, 2, 3, 4],
    "454": [1],
    "455": [1, 2, 3],
    "458": [],
    "459": [],
    "461": [1, 2, 3, 4, 5],
    "462": [1, 2, 3, 4, 5],
    "464": [1, 2, 3, 4],
    "465": [1, 2, 3, 4, 5],
    "466": [1, 3],
    "467": [3, 5],
    "468": [1],
    "469": [],
    "471": [1, 2, 3, 4, 5],
    "473": [3, 4, 5],
    "474": [],
    "475": [1, 2, 3],
    "476": [],
    "478": [1],
    "479": [1, 2, 3],
    "480": [2, 3],
    "482": [1, 2, 3, 4, 5],
    "484": [],
    "486": [],
    "487": [],
    "488": [2],
    "489": [1, 2, 3],
    "490": [1, 3, 5],
    "491": [1, 2, 3, 4, 5],
    "492": [],
    "493": [1, 2, 3, 4],
    "494": [1, 2, 4, 5],
    "495": [1, 2, 3, 4, 5],
    "496": [1, 2, 3, 4],
    "497": [1, 2, 4],
    "499": [5],
    "500": [1, 2, 3, 5],
    "501": [1, 2, 5],
    "502": [2, 3, 5],
    "505": [1, 2],
    "506": [1, 2, 3],
    "507": [],
    "508": [1, 2, 3, 4, 5],
    "509": [1, 3],
    "511": [1, 2, 3, 4, 5],
    "512": [1, 2, 3, 4, 5],
    "513": [1, 2, 3, 4, 5],
    "514": [1],
    "515": [1, 3],
    "516": [1, 2, 3, 4, 5],
    "517": [1, 2],
    "518": [1],
    "519": [1, 2],
    "520": [1],
    "521": [1],
    "522": [2, 3, 5],
    "523": [1, 2],
    "524": [1, 2, 3],
    "525": [1],
    "527": [1, 2, 3, 4, 5],
    "528": [1, 2, 3, 5],
    "529": [1, 2, 3, 4, 5],
    "530": [1, 2, 3, 5],
    "531": [1, 2, 3, 5],
    "534": [1, 3, 4, 5],
    "535": [1, 2, 3, 4, 5],
    "536": [1],
    "537": [],
    "539": [],
    "542": [],
    "543": [1, 2],
    "544": []
  },
  "legIntPurposesByVID": {
    "1": [],
    "2": [5],
    "3": [],
    "4": [],
    "6": [],
    "7": [1],
    "8": [3, 5],
    "9": [],
    "10": [],
    "11": [2, 3, 4, 5],
    "12": [],
    "13": [],
    "14": [],
    "15": [],
    "16": [],
    "17": [],
    "18": [],
    "19": [2, 3, 4, 5],
    "20": [1, 2, 3, 4, 5],
    "21": [3],
    "22": [],
    "23": [2, 3, 4, 5],
    "24": [2, 3, 4, 5],
    "25": [3, 5],
    "26": [],
    "27": [],
    "28": [],
    "29": [],
    "30": [1, 3],
    "31": [5],
    "32": [3],
    "33": [5],
    "34": [3],
    "35": [3, 5],
    "36": [1, 2, 3, 4],
    "37": [],
    "38": [],
    "39": [2, 3, 4, 5],
    "40": [2, 3, 5],
    "41": [1, 3],
    "42": [2, 3, 4, 5],
    "43": [],
    "44": [2, 3, 4, 5],
    "45": [3, 5],
    "46": [5],
    "47": [],
    "48": [],
    "49": [5],
    "50": [2, 3, 4, 5],
    "51": [],
    "52": [2, 3, 4, 5],
    "53": [3, 4, 5],
    "55": [1, 2, 3, 4, 5],
    "56": [],
    "57": [],
    "58": [],
    "59": [],
    "60": [2, 3, 4, 5],
    "61": [],
    "62": [],
    "63": [1, 3],
    "64": [],
    "65": [],
    "66": [],
    "67": [],
    "68": [2, 3, 4, 5],
    "69": [],
    "70": [1, 3],
    "71": [],
    "72": [],
    "73": [1],
    "74": [],
    "75": [],
    "76": [2, 3, 4, 5],
    "77": [],
    "78": [],
    "79": [2, 3, 4, 5],
    "80": [1],
    "81": [],
    "82": [],
    "83": [],
    "84": [1, 2, 5],
    "85": [],
    "86": [],
    "87": [1, 3, 5],
    "88": [2, 3],
    "89": [2, 3, 5],
    "90": [2, 3, 4, 5],
    "91": [],
    "92": [1, 2, 3, 4, 5],
    "93": [5],
    "94": [],
    "95": [],
    "97": [],
    "98": [5],
    "100": [5],
    "101": [],
    "102": [3],
    "104": [3],
    "105": [],
    "108": [],
    "109": [],
    "110": [],
    "111": [5],
    "112": [],
    "113": [],
    "114": [5],
    "115": [2, 3, 5],
    "119": [1, 3],
    "120": [],
    "122": [],
    "124": [],
    "125": [],
    "126": [],
    "127": [3, 5],
    "128": [],
    "129": [],
    "130": [2, 3],
    "131": [],
    "132": [3],
    "133": [],
    "134": [],
    "136": [1, 2, 3, 5],
    "137": [1, 2, 3],
    "138": [3],
    "139": [],
    "140": [],
    "141": [5],
    "142": [3, 5],
    "143": [],
    "144": [3, 5],
    "145": [],
    "147": [],
    "148": [],
    "149": [5],
    "150": [1],
    "151": [1, 2, 3],
    "152": [5],
    "153": [],
    "154": [3, 5],
    "155": [],
    "156": [2, 3, 4, 5],
    "157": [],
    "158": [],
    "159": [],
    "160": [],
    "161": [],
    "162": [1, 3, 5],
    "163": [1, 2, 3, 4, 5],
    "164": [4],
    "165": [],
    "167": [],
    "168": [],
    "169": [2, 3, 5],
    "170": [1, 2, 3, 4, 5],
    "171": [],
    "173": [],
    "174": [1, 3],
    "175": [],
    "177": [5],
    "178": [1, 2, 3, 4, 5],
    "179": [],
    "180": [3],
    "182": [],
    "183": [3, 4, 5],
    "184": [2, 3, 4, 5],
    "185": [],
    "188": [1, 2, 3, 4, 5],
    "189": [],
    "190": [],
    "191": [],
    "192": [],
    "193": [],
    "194": [1],
    "195": [1, 2, 3],
    "196": [3, 5],
    "197": [],
    "198": [],
    "199": [],
    "200": [1, 2, 3, 4, 5],
    "201": [2, 3, 4, 5],
    "202": [],
    "203": [1, 2, 3, 4, 5],
    "205": [3, 5],
    "206": [],
    "208": [],
    "209": [2, 3, 5],
    "210": [],
    "211": [],
    "212": [1, 2, 3, 4, 5],
    "213": [1, 2, 3, 5],
    "214": [],
    "215": [3],
    "216": [1, 2, 3, 4, 5],
    "217": [1, 3],
    "218": [1, 2, 3, 4, 5],
    "221": [],
    "223": [1, 5],
    "224": [1, 3, 5],
    "225": [1, 2, 3, 5],
    "226": [2, 3, 4, 5],
    "227": [1, 3, 4, 5],
    "228": [1, 3, 4, 5],
    "229": [],
    "230": [],
    "231": [],
    "232": [1, 3, 5],
    "234": [5],
    "235": [2, 3, 4, 5],
    "236": [3, 4],
    "237": [1, 2, 3, 4, 5],
    "238": [1, 2, 3, 4, 5],
    "239": [1, 3, 4, 5],
    "240": [1, 4, 5],
    "241": [5],
    "242": [3, 4, 5],
    "243": [],
    "244": [],
    "245": [1, 2, 3, 4, 5],
    "246": [5],
    "248": [3, 4, 5],
    "249": [],
    "250": [1],
    "251": [1, 2, 3, 4, 5],
    "252": [1, 2, 3, 4, 5],
    "253": [],
    "254": [1, 2, 3, 5],
    "255": [1],
    "256": [2, 4, 5],
    "257": [],
    "258": [1, 2, 3, 5],
    "259": [],
    "260": [1, 2, 5],
    "261": [],
    "262": [],
    "263": [1, 2, 3, 4, 5],
    "264": [],
    "265": [1, 5],
    "266": [],
    "268": [],
    "269": [],
    "270": [],
    "272": [],
    "273": [3],
    "274": [],
    "275": [],
    "276": [],
    "277": [5],
    "278": [5],
    "279": [],
    "280": [1, 2, 3, 4, 5],
    "281": [1, 5],
    "282": [5],
    "284": [1, 2, 3, 4, 5],
    "285": [],
    "287": [1, 3, 4],
    "288": [1, 3, 4, 5],
    "289": [],
    "290": [],
    "291": [3, 5],
    "293": [1, 3],
    "294": [1, 2, 3, 4, 5],
    "295": [],
    "297": [1, 3, 4, 5],
    "298": [],
    "299": [1, 2, 3, 4, 5],
    "301": [1, 2, 3, 4, 5],
    "302": [],
    "303": [],
    "304": [],
    "308": [2, 3],
    "309": [1, 2, 3, 5],
    "310": [4],
    "311": [],
    "312": [],
    "314": [],
    "315": [],
    "316": [],
    "317": [],
    "318": [1, 5],
    "319": [5],
    "320": [],
    "321": [],
    "323": [1, 3, 4, 5],
    "325": [1, 2, 3, 4, 5],
    "326": [1, 2, 4],
    "328": [],
    "329": [1, 5],
    "330": [1, 3, 4, 5],
    "331": [3, 5],
    "333": [],
    "334": [1, 2, 3, 4],
    "335": [1, 3, 4, 5],
    "336": [1, 2, 3, 4],
    "337": [],
    "338": [1, 2, 3, 4, 5],
    "339": [1],
    "340": [],
    "341": [3],
    "343": [1, 2, 3, 4, 5],
    "344": [2, 4],
    "345": [],
    "346": [],
    "347": [1],
    "349": [],
    "350": [2, 3, 4, 5],
    "351": [2, 3, 4, 5],
    "354": [1, 3, 4, 5],
    "357": [],
    "358": [],
    "359": [],
    "360": [1],
    "361": [1],
    "362": [],
    "365": [1, 5],
    "366": [1, 2, 3, 4, 5],
    "368": [],
    "369": [],
    "371": [1, 2, 3, 4, 5],
    "373": [5],
    "374": [],
    "375": [],
    "376": [],
    "377": [],
    "378": [1],
    "380": [3, 4, 5],
    "381": [],
    "382": [3],
    "384": [1, 5],
    "385": [5],
    "387": [],
    "388": [2, 3, 4, 5],
    "389": [],
    "390": [5],
    "391": [1, 2, 3, 5],
    "392": [1, 5],
    "394": [3, 4, 5],
    "395": [1, 2, 3, 5],
    "397": [3, 4, 5],
    "398": [],
    "400": [],
    "402": [],
    "403": [],
    "404": [1, 5],
    "405": [1, 3, 4, 5],
    "407": [3, 4, 5],
    "408": [1, 3, 4, 5],
    "409": [1, 3, 5],
    "410": [],
    "412": [1, 2, 4, 5],
    "413": [],
    "415": [1],
    "416": [],
    "418": [3],
    "421": [1, 2, 3, 4, 5],
    "422": [],
    "423": [],
    "424": [3, 5],
    "425": [1, 2, 3, 4, 5],
    "426": [1, 3, 5],
    "427": [],
    "428": [1, 3, 4, 5],
    "429": [],
    "430": [3],
    "431": [1, 5],
    "434": [2, 4],
    "435": [],
    "436": [1, 5],
    "438": [],
    "440": [1, 5],
    "442": [],
    "443": [1, 5],
    "444": [1, 3, 4, 5],
    "447": [5],
    "448": [1, 2, 3, 4, 5],
    "449": [1, 3, 5],
    "450": [],
    "452": [5],
    "454": [5],
    "455": [],
    "458": [1, 2, 3, 5],
    "459": [1, 3, 5],
    "461": [],
    "462": [],
    "464": [5],
    "465": [],
    "466": [],
    "467": [],
    "468": [2, 3, 4, 5],
    "469": [1, 2, 3, 4, 5],
    "471": [],
    "473": [1, 2],
    "474": [1, 2],
    "475": [4, 5],
    "476": [1, 2, 3, 4, 5],
    "478": [2],
    "479": [],
    "480": [1, 4, 5],
    "482": [],
    "484": [5],
    "486": [1, 5],
    "487": [1, 2, 3, 5],
    "488": [1, 3, 4, 5],
    "489": [],
    "490": [],
    "491": [],
    "492": [1, 5],
    "493": [5],
    "494": [],
    "495": [],
    "496": [],
    "497": [],
    "499": [],
    "500": [],
    "501": [3, 4],
    "502": [1],
    "505": [],
    "506": [],
    "507": [1, 2, 3, 5],
    "508": [],
    "509": [],
    "511": [],
    "512": [],
    "513": [],
    "514": [],
    "515": [5],
    "516": [],
    "517": [3],
    "518": [5],
    "519": [3, 4, 5],
    "520": [5],
    "521": [3, 5],
    "522": [],
    "523": [],
    "524": [],
    "525": [5],
    "527": [],
    "528": [],
    "529": [],
    "530": [],
    "531": [],
    "534": [],
    "535": [],
    "536": [3, 5],
    "537": [1, 2, 3, 4, 5],
    "539": [1, 2, 3, 4, 5],
    "542": [1, 2, 3, 4, 5],
    "543": [3, 4, 5],
    "544": [1, 5]
  },
  "featuresIdsByVID": {
    "1": [],
    "2": [2],
    "3": [],
    "4": [2, 3],
    "6": [],
    "7": [],
    "8": [1, 2],
    "9": [1, 2, 3],
    "10": [2, 3],
    "11": [1, 2],
    "12": [3],
    "13": [2, 3],
    "14": [2, 3],
    "15": [],
    "16": [],
    "17": [2],
    "18": [],
    "19": [2],
    "20": [2],
    "21": [1, 2, 3],
    "22": [],
    "23": [1, 2, 3],
    "24": [1, 2, 3],
    "25": [1, 2, 3],
    "26": [],
    "27": [],
    "28": [3],
    "29": [1],
    "30": [2, 3],
    "31": [2],
    "32": [2, 3],
    "33": [],
    "34": [],
    "35": [],
    "36": [1, 2, 3],
    "37": [1, 2],
    "38": [3],
    "39": [1, 2, 3],
    "40": [1, 2, 3],
    "41": [],
    "42": [1, 2],
    "43": [3],
    "44": [1, 2, 3],
    "45": [3],
    "46": [2],
    "47": [],
    "48": [1, 2, 3],
    "49": [1, 2, 3],
    "50": [1, 2],
    "51": [1, 2, 3],
    "52": [3],
    "53": [1, 2],
    "55": [1, 2, 3],
    "56": [],
    "57": [1, 2],
    "58": [2],
    "59": [3],
    "60": [1, 2, 3],
    "61": [3],
    "62": [],
    "63": [],
    "64": [],
    "65": [1, 2, 3],
    "66": [1, 2, 3],
    "67": [],
    "68": [2],
    "69": [1, 2, 3],
    "70": [3],
    "71": [1, 2, 3],
    "72": [],
    "73": [2, 3],
    "74": [],
    "75": [3],
    "76": [],
    "77": [2],
    "78": [],
    "79": [1, 2, 3],
    "80": [],
    "81": [1, 2, 3],
    "82": [3],
    "83": [],
    "84": [],
    "85": [1, 2, 3],
    "86": [3],
    "87": [2, 3],
    "88": [],
    "89": [2],
    "90": [],
    "91": [1, 2],
    "92": [1, 2, 3],
    "93": [],
    "94": [1, 2, 3],
    "95": [],
    "97": [1, 2],
    "98": [1, 2, 3],
    "100": [],
    "101": [1, 2, 3],
    "102": [],
    "104": [1, 2, 3],
    "105": [2, 3],
    "108": [3],
    "109": [1, 2, 3],
    "110": [],
    "111": [3],
    "112": [],
    "113": [],
    "114": [],
    "115": [1, 2, 3],
    "119": [1, 3],
    "120": [1],
    "122": [],
    "124": [3],
    "125": [],
    "126": [],
    "127": [3],
    "128": [1, 2, 3],
    "129": [1, 2, 3],
    "130": [1, 2],
    "131": [],
    "132": [1, 2],
    "133": [1, 2, 3],
    "134": [1, 2],
    "136": [2, 3],
    "137": [],
    "138": [],
    "139": [1, 2, 3],
    "140": [],
    "141": [3],
    "142": [3],
    "143": [],
    "144": [3],
    "145": [],
    "147": [],
    "148": [2],
    "149": [],
    "150": [],
    "151": [3],
    "152": [],
    "153": [1, 2, 3],
    "154": [3],
    "155": [2],
    "156": [1],
    "157": [],
    "158": [1, 2, 3],
    "159": [],
    "160": [1, 2, 3],
    "161": [1, 2, 3],
    "162": [],
    "163": [1, 2],
    "164": [1],
    "165": [],
    "167": [1, 2, 3],
    "168": [1, 2, 3],
    "169": [1, 3],
    "170": [1, 2, 3],
    "171": [],
    "173": [1, 2, 3],
    "174": [],
    "175": [],
    "177": [],
    "178": [],
    "179": [1, 2, 3],
    "180": [3],
    "182": [1, 2, 3],
    "183": [2, 3],
    "184": [1, 2, 3],
    "185": [1, 2],
    "188": [1, 2, 3],
    "189": [3],
    "190": [],
    "191": [3],
    "192": [],
    "193": [3],
    "194": [],
    "195": [3],
    "196": [3],
    "197": [],
    "198": [],
    "199": [],
    "200": [],
    "201": [2],
    "202": [1, 2, 3],
    "203": [],
    "205": [],
    "206": [1, 2, 3],
    "208": [1, 2, 3],
    "209": [3],
    "210": [1],
    "211": [1, 2, 3],
    "212": [],
    "213": [1, 2],
    "214": [],
    "215": [1, 2, 3],
    "216": [],
    "217": [],
    "218": [2, 3],
    "221": [3],
    "223": [2],
    "224": [3],
    "225": [3],
    "226": [1],
    "227": [1, 2, 3],
    "228": [],
    "229": [],
    "230": [],
    "231": [],
    "232": [3],
    "234": [1, 2],
    "235": [2, 3],
    "236": [3],
    "237": [2, 3],
    "238": [1, 2, 3],
    "239": [],
    "240": [],
    "241": [1, 2, 3],
    "242": [2, 3],
    "243": [1, 2],
    "244": [1, 2],
    "245": [1, 2],
    "246": [],
    "248": [3],
    "249": [2, 3],
    "250": [],
    "251": [],
    "252": [3],
    "253": [2, 3],
    "254": [3],
    "255": [],
    "256": [1, 2],
    "257": [1, 2],
    "258": [3],
    "259": [],
    "260": [3],
    "261": [1, 2],
    "262": [3],
    "263": [],
    "264": [2],
    "265": [],
    "266": [1],
    "268": [1, 2, 3],
    "269": [1, 2, 3],
    "270": [],
    "272": [1, 2, 3],
    "273": [],
    "274": [],
    "275": [1, 3],
    "276": [3],
    "277": [1, 2],
    "278": [],
    "279": [3],
    "280": [],
    "281": [1, 2],
    "282": [],
    "284": [1, 2, 3],
    "285": [],
    "287": [3],
    "288": [],
    "289": [3],
    "290": [],
    "291": [],
    "293": [],
    "294": [3],
    "295": [2],
    "297": [],
    "298": [3],
    "299": [1, 2],
    "301": [1, 2],
    "302": [3],
    "303": [],
    "304": [1, 2, 3],
    "308": [],
    "309": [1],
    "310": [],
    "311": [3],
    "312": [],
    "314": [],
    "315": [3],
    "316": [3],
    "317": [2, 3],
    "318": [],
    "319": [3],
    "320": [2, 3],
    "321": [2],
    "323": [1, 2],
    "325": [1, 2, 3],
    "326": [],
    "328": [2],
    "329": [],
    "330": [],
    "331": [2, 3],
    "333": [1, 2, 3],
    "334": [2, 3],
    "335": [],
    "336": [3],
    "337": [1, 2],
    "338": [1, 2, 3],
    "339": [],
    "340": [1, 3],
    "341": [1, 2, 3],
    "343": [3],
    "344": [],
    "345": [1, 2, 3],
    "346": [],
    "347": [],
    "349": [2],
    "350": [1, 2, 3],
    "351": [1, 2, 3],
    "354": [],
    "357": [1, 2, 3],
    "358": [1],
    "359": [1, 2, 3],
    "360": [1, 2],
    "361": [1, 2],
    "362": [1, 2, 3],
    "365": [],
    "366": [1, 2, 3],
    "368": [1, 2, 3],
    "369": [],
    "371": [3],
    "373": [1, 2],
    "374": [1, 2],
    "375": [3],
    "376": [1, 2, 3],
    "377": [3],
    "378": [],
    "380": [2, 3],
    "381": [],
    "382": [],
    "384": [],
    "385": [2],
    "387": [],
    "388": [1, 2, 3],
    "389": [],
    "390": [1, 3],
    "391": [3],
    "392": [3],
    "394": [1, 2],
    "395": [],
    "397": [1, 2, 3],
    "398": [3],
    "400": [2, 3],
    "402": [2],
    "403": [3],
    "404": [],
    "405": [2],
    "407": [1, 2, 3],
    "408": [3],
    "409": [1, 2],
    "410": [],
    "412": [],
    "413": [1, 2],
    "415": [],
    "416": [1, 2, 3],
    "418": [3],
    "421": [3],
    "422": [],
    "423": [],
    "424": [],
    "425": [1, 2, 3],
    "426": [2],
    "427": [3],
    "428": [],
    "429": [2, 3],
    "430": [],
    "431": [1, 3],
    "434": [1, 3],
    "435": [1, 3],
    "436": [1, 2, 3],
    "438": [2, 3],
    "440": [],
    "442": [],
    "443": [2],
    "444": [3],
    "447": [],
    "448": [1, 2, 3],
    "449": [3],
    "450": [1, 3],
    "452": [2],
    "454": [3],
    "455": [2, 3],
    "458": [1],
    "459": [],
    "461": [],
    "462": [1, 2, 3],
    "464": [2],
    "465": [1],
    "466": [],
    "467": [2],
    "468": [1, 2],
    "469": [1, 2],
    "471": [1, 2, 3],
    "473": [],
    "474": [],
    "475": [1, 2, 3],
    "476": [1],
    "478": [],
    "479": [2, 3],
    "480": [1, 2, 3],
    "482": [],
    "484": [],
    "486": [],
    "487": [1],
    "488": [],
    "489": [],
    "490": [],
    "491": [],
    "492": [1],
    "493": [2],
    "494": [],
    "495": [3],
    "496": [],
    "497": [1, 2, 3],
    "499": [],
    "500": [2, 3],
    "501": [1, 2],
    "502": [3],
    "505": [],
    "506": [2],
    "507": [1, 2, 3],
    "508": [1, 2, 3],
    "509": [],
    "511": [2, 3],
    "512": [3],
    "513": [1, 2],
    "514": [],
    "515": [1, 2],
    "516": [],
    "517": [2],
    "518": [2, 3],
    "519": [1, 2, 3],
    "520": [],
    "521": [],
    "522": [1, 2],
    "523": [3],
    "524": [2, 3],
    "525": [3],
    "527": [3],
    "528": [],
    "529": [1, 2, 3],
    "530": [3],
    "531": [],
    "534": [2, 3],
    "535": [],
    "536": [1, 2],
    "537": [1, 2, 3],
    "539": [],
    "542": [],
    "543": [],
    "544": []
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/comment-adverts.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/comment-adverts.js ***!
  \*******************************************************************************/
/*! exports provided: initCommentAdverts, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCommentAdverts", function() { return initCommentAdverts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/add-slot */ "./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js");
/* harmony import */ var commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/ad-sizes */ "./static/src/javascripts/projects/commercial/modules/ad-sizes.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/dfp/create-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");
//  strict












var createCommentSlots = function createCommentSlots(canBeDmpu) {
  var sizes = canBeDmpu ? {
    desktop: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_5__["adSizes"].halfPage]
  } : {};
  var adSlots = Object(commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_8__["createSlots"])('comments', {
    sizes: sizes
  });
  adSlots.forEach(function (adSlot) {
    adSlot.classList.add('js-sticky-mpu');
  });
  return adSlots;
};

var insertCommentAd = function insertCommentAd($commentMainColumn, $adSlotContainer, canBeDmpu) {
  var commentSlots = createCommentSlots(canBeDmpu);
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].write(function () {
    $commentMainColumn.addClass('discussion__ad-wrapper');

    if (!lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.isLiveBlog') && !lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.isMinuteArticle')) {
      $commentMainColumn.addClass('discussion__ad-wrapper-wider');
    } // Append each slot into the adslot container...


    commentSlots.forEach(function (adSlot) {
      $adSlotContainer.append(adSlot);
    });
    return commentSlots[0];
  }) // Add only the fist slot (DFP slot) to GTP
  .then(function (adSlot) {
    Object(commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_4__["addSlot"])(adSlot, false);
    Promise.resolve(lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].emit('page:commercial:comments'));
  });
};

var containsDMPU = function containsDMPU(ad) {
  return ad.sizes.desktop.some(function (el) {
    return el[0] === 300 && el[1] === 600;
  });
};

var maybeUpgradeSlot = function maybeUpgradeSlot(ad, $adSlot) {
  if (!containsDMPU(ad)) {
    ad.sizes.desktop.push([300, 600]);
    ad.slot.defineSizeMapping([[[0, 0], ad.sizes.desktop]]);
    lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].write(function () {
      $adSlot[0].setAttribute('data-desktop', '1,1|2,2|300,250|300,274|fluid|300,600');
    });
  }

  return ad;
};

var runSecondStage = function runSecondStage($commentMainColumn, $adSlotContainer) {
  var $adSlot = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-ad-slot', $adSlotContainer);
  var commentAdvert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_9__["getAdvertById"])('dfp-ad--comments');

  if (commentAdvert && $adSlot.length) {
    // when we refresh the slot, the sticky behavior runs again
    // this means the sticky-scroll height is corrected!
    Object(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_10__["refreshAdvert"])(maybeUpgradeSlot(commentAdvert, $adSlot));
  }

  if (!commentAdvert) {
    insertCommentAd($commentMainColumn, $adSlotContainer, true);
  }
};

var initCommentAdverts = function initCommentAdverts() {
  var $adSlotContainer = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-discussion__ad-slot');

  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_7__["commercialFeatures"].commentAdverts || !$adSlotContainer.length) {
    return Promise.resolve(false);
  }

  lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].once('modules:comments:renderComments:rendered', function () {
    var isLoggedIn = Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_6__["isUserLoggedIn"])();
    var $commentMainColumn = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])('.js-comments .content__main-column');
    lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].read(function () {
      return $commentMainColumn.dim().height;
    }).then(function (mainColHeight) {
      // always insert an MPU/DMPU if the user is logged in, since the
      // containers are reordered, and comments are further from most-pop
      if (mainColHeight >= 800 || isLoggedIn && mainColHeight >= 600) {
        insertCommentAd($commentMainColumn, $adSlotContainer, true);
      } else if (isLoggedIn) {
        insertCommentAd($commentMainColumn, $adSlotContainer, false);
      }

      lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].on('discussion:comments:get-more-replies', function () {
        runSecondStage($commentMainColumn, $adSlotContainer);
      });
    });
  });
  return Promise.resolve(true);
};
var _ = {
  maybeUpgradeSlot: maybeUpgradeSlot,
  createCommentSlots: createCommentSlots,
  insertCommentAd: insertCommentAd,
  runSecondStage: runSecondStage,
  containsDMPU: containsDMPU
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js":
/*!********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js ***!
  \********************************************************************************************/
/*! exports provided: addTrackingPixel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addTrackingPixel", function() { return addTrackingPixel; });
var addTrackingPixel = function addTrackingPixel(url) {
  new Image().src = url;
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js":
/*!*************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js ***!
  \*************************************************************************************************/
/*! exports provided: addViewabilityTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addViewabilityTracker", function() { return addViewabilityTracker; });
var addViewabilityTracker = function addViewabilityTracker(adSlot, creativeId, viewabilityTracker) {
  /*
    we need to ensure that any scripts in the viewabilityTracker are parsed
    and executed; this can be done with a Range and ContextualFragment
  */
  var range = document.createRange();
  range.setStart(adSlot, 0);
  range.setEnd(adSlot, 0);
  adSlot.appendChild(range.createContextualFragment(viewabilityTracker.replace('INSERT_UNIQUE_ID', creativeId)));
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-expandable-video-v2.js":
/*!****************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/fabric-expandable-video-v2.js ***!
  \****************************************************************************************************/
/*! exports provided: FabricExpandableVideoV2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FabricExpandableVideoV2", function() { return FabricExpandableVideoV2; });
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expandable_video_v2_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-expandable-video-v2.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expandable_video_v2_html__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_expandable_video_v2_html__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expandable_video_v2_cta_html__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-expandable-video-v2-cta.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expandable-video-v2-cta.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expandable_video_v2_cta_html__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_expandable_video_v2_cta_html__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! svgs/icon/arrow-down.svg */ "./static/src/inline-svgs/icon/arrow-down.svg");
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! svgs/icon/close-central.svg */ "./static/src/inline-svgs/icon/close-central.svg");
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");











var FabricExpandableVideoV2 = function FabricExpandableVideoV2(adSlot, params) {
  var isClosed = true;
  var closedHeight = 250;
  var openedHeight = 500;
  var ctaTpl = lodash_template__WEBPACK_IMPORTED_MODULE_3___default()(raw_loader_commercial_views_creatives_fabric_expandable_video_v2_cta_html__WEBPACK_IMPORTED_MODULE_5___default.a);

  var create = function create() {
    var videoHeight = openedHeight;
    var plusIconPosition = params.showCrossInContainer.substring(3);
    var additionalParams = {
      id: "fabric-expandable-".concat(Math.round(Math.random() * 10000).toString(16)),
      desktopCTA: params.ctaDesktopImage ? ctaTpl({
        media: 'hide-until-tablet',
        link: params.link,
        image: params.ctaDesktopImage,
        position: params.ctaDesktopPosition
      }) : '',
      mobileCTA: params.ctaMobileImage ? ctaTpl({
        media: 'mobile-only',
        link: params.link,
        image: params.ctaMobileImage,
        position: params.ctaMobilePosition
      }) : '',
      showArrow: params.showMoreType === 'arrow-only' || params.showMoreType === 'plus-and-arrow' ? "<button class=\"ad-exp__open-chevron ad-exp__open\">".concat(svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_6___default.a.markup, "</button>") : '',
      showPlus: params.showMoreType === 'plus-only' || params.showMoreType === 'plus-and-arrow' ? "<button class=\"ad-exp__close-button ad-exp__open ad-exp__open--".concat(plusIconPosition, "\">").concat(svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_7___default.a.markup, "</button>") : '',
      videoEmbed: params.YoutubeVideoURL !== '' ? "<iframe id=\"YTPlayer\" width=\"100%\" height=\"".concat(videoHeight, "\" src=\"").concat(params.YoutubeVideoURL, "?showinfo=0&amp;rel=0&amp;controls=0&amp;fs=0&amp;title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" class=\"expandable-video\"></iframe>") : ''
    };
    var $fabricExpandableVideo = lib_$__WEBPACK_IMPORTED_MODULE_2__["default"].create(lodash_template__WEBPACK_IMPORTED_MODULE_3___default()(raw_loader_commercial_views_creatives_fabric_expandable_video_v2_html__WEBPACK_IMPORTED_MODULE_4___default.a)({
      data: Object.assign(params, additionalParams)
    }));
    var $ad = Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp--expand', $fabricExpandableVideo);

    var open = function open(isOpen) {
      var videoSrc = Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('#YTPlayer').attr('src');
      var videoSrcAutoplay = videoSrc;

      if (videoSrc.indexOf('autoplay') === -1) {
        videoSrcAutoplay = "".concat(videoSrc, "&amp;autoplay=1");
      } else {
        videoSrcAutoplay = videoSrcAutoplay.replace(isOpen ? 'autoplay=0' : 'autoplay=1', isOpen ? 'autoplay=1' : 'autoplay=0');
      }

      if (isOpen) {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp__close-button', adSlot).addClass('button-spin');
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp__open-chevron', adSlot).addClass('chevron-down');
        $ad.css('height', openedHeight);
        $fabricExpandableVideo.addClass('creative--open');
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.slide-video, .slide-video .ad-exp__layer', adSlot).css('height', openedHeight).addClass('slide-video__expand');
      } else {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp__close-button', adSlot).removeClass('button-spin');
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp__open-chevron', adSlot).removeClass('chevron-down');
        $ad.css('height', closedHeight);
        $fabricExpandableVideo.removeClass('creative--open');
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.slide-video, .slide-video .ad-exp__layer', adSlot).css('height', closedHeight).removeClass('slide-video__expand');
      }

      isClosed = !isOpen;
      setTimeout(function () {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('#YTPlayer').attr('src', videoSrcAutoplay);
      }, 1000);
    };

    bean__WEBPACK_IMPORTED_MODULE_0___default.a.on(adSlot, 'click', '.ad-exp__open', function () {
      lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
        open(isClosed);
      });
    });
    bean__WEBPACK_IMPORTED_MODULE_0___default.a.on(adSlot, 'click', '.video-container__cta, .creative__cta', function () {
      lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
        open(false);
      });
    });
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
      $ad.css('height', closedHeight);
      Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])('.ad-exp-collapse__slide', $fabricExpandableVideo).css('height', closedHeight);

      if (params.trackingPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(params.trackingPixel + params.cacheBuster);
      }

      if (params.researchPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(params.researchPixel + params.cacheBuster);
      }

      $fabricExpandableVideo.appendTo(adSlot);

      if (params.viewabilityTracker) {
        Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__["addViewabilityTracker"])(adSlot, params.id, params.viewabilityTracker);
      }

      adSlot.classList.add('ad-slot--fabric');

      if (adSlot.parentNode && adSlot.parentNode.classList.contains('top-banner-ad-container')) {
        adSlot.parentNode.classList.add('top-banner-ad-container--fabric');
      }

      return true;
    });
  };

  return Object.freeze({
    create: create
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-expanding-v1.js":
/*!*********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/fabric-expanding-v1.js ***!
  \*********************************************************************************************/
/*! exports provided: FabricExpandingV1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FabricExpandingV1", function() { return FabricExpandingV1; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expanding_v1_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-expanding-v1.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-v1.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expanding_v1_html__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_expanding_v1_html__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expanding_video_html__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-expanding-video.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-expanding-video.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_expanding_video_html__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_expanding_video_html__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! svgs/icon/arrow-down.svg */ "./static/src/inline-svgs/icon/arrow-down.svg");
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! svgs/icon/close-central.svg */ "./static/src/inline-svgs/icon/close-central.svg");
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var lodash_bindAll__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/bindAll */ "./node_modules/lodash/bindAll.js");
/* harmony import */ var lodash_bindAll__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_bindAll__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");
















 // Forked from expandable-v3.js

var FabricExpandingV1 =
/*#__PURE__*/
function () {
  function FabricExpandingV1(adSlot, params) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FabricExpandingV1);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "adSlot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "params", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "isClosed", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "initialExpandCounter", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "closedHeight", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "openedHeight", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "$button", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "$ad", void 0);

    this.adSlot = adSlot;
    this.params = params;
    this.isClosed = true;
    this.initialExpandCounter = false;
    this.closedHeight = 250;
    this.openedHeight = 500;
    lodash_bindAll__WEBPACK_IMPORTED_MODULE_14___default()(this, 'updateBgPosition', 'listener');
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FabricExpandingV1, [{
    key: "updateBgPosition",
    value: function updateBgPosition() {
      var _this = this;

      var viewportHeight = Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["getViewport"])().height;
      var adSlotTop = this.adSlot.getBoundingClientRect().top;
      var adHeight = this.isClosed ? this.closedHeight : this.openedHeight;
      var inViewB = viewportHeight > adSlotTop;
      var inViewT = -adHeight * 2 < adSlotTop + 20;
      var topCusp = inViewT && viewportHeight * 0.4 - adHeight > adSlotTop ? 'true' : 'false';
      var bottomCusp = inViewB && viewportHeight * 0.5 < adSlotTop ? 'true' : 'false';
      var bottomScroll = bottomCusp === 'true' ? 50 - (viewportHeight * 0.5 - adSlotTop) * -0.2 : 50;
      var topScroll = topCusp === 'true' ? (viewportHeight * 0.4 - adSlotTop - adHeight) * 0.2 : 0;
      var scrollAmount;

      switch (this.params.backgroundImagePType) {
        case 'split':
          scrollAmount = bottomScroll + topScroll;
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand-scrolling-bg', _this.adSlot).css({
              'background-repeat': 'no-repeat',
              'background-position': "50%".concat(scrollAmount, "%")
            });
          });
          break;

        case 'fixed':
          scrollAmount = -adSlotTop;
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand-scrolling-bg', _this.adSlot).css('background-position', "50%".concat(scrollAmount, "px"));
          });
          break;

        case 'fixed matching fluid250':
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand-scrolling-bg', _this.adSlot).addClass('ad-exp--expand-scrolling-bg-fixed');
          });
          break;

        case 'parallax':
          scrollAmount = Math.ceil(adSlotTop * 0.3) + 20;
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand-scrolling-bg', _this.adSlot).addClass('ad-exp--expand-scrolling-bg-parallax');
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand-scrolling-bg', _this.adSlot).css('background-position', "50%".concat(scrollAmount, "%"));
          });
          break;

        case 'none':
          break;

        default:
          break;
      }
    }
  }, {
    key: "listener",
    value: function listener() {
      var _this2 = this;

      if (!this.initialExpandCounter && Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["getViewport"])().height > this.adSlot.getBoundingClientRect().top + this.openedHeight) {
        var itemId = Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-slot__content', this.adSlot).attr('id');
        var itemIdArray = itemId.split('/');

        if (!lib_storage__WEBPACK_IMPORTED_MODULE_8__["local"].get("gu.commercial.expandable.".concat(itemIdArray[1]))) {
          // expires in 1 week
          var week = 1000 * 60 * 60 * 24 * 7;
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            lib_storage__WEBPACK_IMPORTED_MODULE_8__["local"].set("gu.commercial.expandable.".concat(itemIdArray[1]), true, {
              expires: Date.now() + week
            });

            _this2.$button.addClass('button-spin');

            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp__open-chevron').removeClass('chevron-up').addClass('chevron-down');

            _this2.$ad.css('height', _this2.openedHeight);

            _this2.isClosed = false;
            _this2.initialExpandCounter = true;
          });
        } else if (this.isClosed) {
          lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
            Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp__open-chevron').addClass('chevron-up');
          });
        }

        return true;
      }
    }
  }, {
    key: "buildVideo",
    value: function buildVideo(customClass) {
      var videoAspectRatio = 16 / 9;
      var videoHeight = Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isBreakpoint"])({
        max: 'phablet'
      }) ? 125 : 250;
      var videoWidth = videoHeight * videoAspectRatio;
      var leftMargin = this.params.videoPositionH === 'center' ? "margin-left: ".concat(videoWidth / -2, "px") : '';
      var leftPosition = this.params.videoPositionH === 'left' ? "left: ".concat(this.params.videoHorizSpace, "px") : '';
      var rightPosition = this.params.videoPositionH === 'right' ? "right: ".concat(this.params.videoHorizSpace, "px") : '';
      var viewModel = {
        width: videoWidth,
        height: videoHeight,
        src: "".concat(this.params.videoURL, "?rel=0&amp;controls=0&amp;showinfo=0&amp;title=0&amp;byline=0&amp;portrait=0"),
        className: ['expandable_video', "expandable_video--horiz-pos-".concat(this.params.videoPositionH), customClass].join(' '),
        inlineStyle: [leftMargin, leftPosition, rightPosition].join('; ')
      };
      return lodash_template__WEBPACK_IMPORTED_MODULE_9___default()(raw_loader_commercial_views_creatives_fabric_expanding_video_html__WEBPACK_IMPORTED_MODULE_11___default.a)(viewModel);
    }
  }, {
    key: "stopVideo",
    value: function stopVideo() {
      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var videoSelector = Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isBreakpoint"])({
        min: 'tablet'
      }) ? '.js-fabric-video--desktop' : '.js-fabric-video--mobile';
      var video = Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])(videoSelector, this.adSlot);
      var videoSrc = video.attr('src');
      window.setTimeout(function () {
        video.attr('src', "".concat(videoSrc, "&amp;autoplay=0"));
      }, delay);
    }
  }, {
    key: "create",
    value: function create() {
      var _this3 = this;

      var hasVideo = this.params.videoURL !== '';
      var videoDesktop = {
        videoDesktop: hasVideo ? this.buildVideo('js-fabric-video--desktop') : ''
      };
      var videoMobile = {
        videoMobile: hasVideo ? this.buildVideo('js-fabric-video--mobile') : ''
      };
      var showmoreArrow = {
        showArrow: this.params.showMoreType === 'arrow-only' || this.params.showMoreType === 'plus-and-arrow' ? "<button class=\"ad-exp__open-chevron ad-exp__open\">".concat(svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_12___default.a.markup, "</button>") : ''
      };
      var showmorePlus = {
        showPlus: this.params.showMoreType === 'plus-only' || this.params.showMoreType === 'plus-and-arrow' ? "<button class=\"ad-exp__close-button ad-exp__open\">".concat(svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_13___default.a.markup, "</button>") : ''
      };
      var scrollbgDefaultY = '0%'; // used if no parallax / fixed background scroll support

      var scrollingbg = {
        scrollbg: this.params.backgroundImagePType !== 'none' ? "<div class=\"ad-exp--expand-scrolling-bg\" style=\"background-image: url(".concat(this.params.backgroundImageP, "); background-position: ").concat(this.params.backgroundImagePPosition, " ").concat(scrollbgDefaultY, "; background-repeat: ").concat(this.params.backgroundImagePRepeat, ";\"></div>") : ''
      };
      this.params.id = "fabric-expanding-".concat(Math.floor(Math.random() * 10000).toString(16));
      var $fabricExpandingV1 = lib_$__WEBPACK_IMPORTED_MODULE_5__["default"].create(lodash_template__WEBPACK_IMPORTED_MODULE_9___default()(raw_loader_commercial_views_creatives_fabric_expanding_v1_html__WEBPACK_IMPORTED_MODULE_10___default.a)({
        data: Object.assign(this.params, showmoreArrow, showmorePlus, videoDesktop, videoMobile, scrollingbg)
      }));
      lib_mediator__WEBPACK_IMPORTED_MODULE_7__["default"].on('window:throttledScroll', this.listener);
      bean__WEBPACK_IMPORTED_MODULE_3___default.a.on(this.adSlot, 'click', '.ad-exp__open', function () {
        if (!_this3.isClosed && hasVideo) {
          // wait 1000ms for close animation to finish
          _this3.stopVideo(1000);
        }

        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
          Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp__close-button').toggleClass('button-spin');
          Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp__open-chevron').removeClass('chevron-up').toggleClass('chevron-down');

          _this3.$ad.css('height', _this3.isClosed ? _this3.openedHeight : _this3.closedHeight);

          _this3.isClosed = !_this3.isClosed;
          _this3.initialExpandCounter = true;
        });
      });

      if (FabricExpandingV1.hasScrollEnabled) {
        // update bg position
        this.updateBgPosition();
        lib_mediator__WEBPACK_IMPORTED_MODULE_7__["default"].on('window:throttledScroll', this.updateBgPosition); // to be safe, also update on window resize

        lib_mediator__WEBPACK_IMPORTED_MODULE_7__["default"].on('window:throttledResize', this.updateBgPosition);
      }

      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
        this.$ad = Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp--expand', $fabricExpandingV1).css('height', this.closedHeight);
        this.$button = Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp__open', $fabricExpandingV1);
        Object(lib_$__WEBPACK_IMPORTED_MODULE_5__["default"])('.ad-exp-collapse__slide', $fabricExpandingV1).css('height', this.closedHeight);

        if (this.params.trackingPixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_15__["addTrackingPixel"])(this.params.trackingPixel + this.params.cacheBuster);
        }

        if (this.params.researchPixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_15__["addTrackingPixel"])(this.params.researchPixel + this.params.cacheBuster);
        }

        $fabricExpandingV1.appendTo(this.adSlot);

        if (this.params.viewabilityTracker) {
          Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_16__["addViewabilityTracker"])(this.adSlot, this.params.id, this.params.viewabilityTracker);
        }

        this.adSlot.classList.add('ad-slot--fabric');

        if (this.adSlot.parentNode.classList.contains('top-banner-ad-container')) {
          this.adSlot.parentNode.classList.add('top-banner-ad-container--fabric');
        }

        return true;
      }, this);
    }
  }]);

  return FabricExpandingV1;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(FabricExpandingV1, "hasScrollEnabled", void 0);

FabricExpandingV1.hasScrollEnabled = !Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isIOS"])() && !Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isAndroid"])();


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-v1.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/fabric-v1.js ***!
  \***********************************************************************************/
/*! exports provided: FabricV1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FabricV1", function() { return FabricV1; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_v1_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-v1.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-v1.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_v1_html__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_v1_html__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var raw_loader_commercial_views_creatives_iframe_video_html__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/iframe-video.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/iframe-video.html");
/* harmony import */ var raw_loader_commercial_views_creatives_iframe_video_html__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_iframe_video_html__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var raw_loader_commercial_views_creatives_scrollbg_html__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/scrollbg.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/scrollbg.html");
/* harmony import */ var raw_loader_commercial_views_creatives_scrollbg_html__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_scrollbg_html__WEBPACK_IMPORTED_MODULE_12__);













var hasBackgroundFixedSupport = !Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["isAndroid"])();
var isIE10OrLess = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_3___default()(lib_detect__WEBPACK_IMPORTED_MODULE_5__["getUserAgent"]) === 'object' && lib_detect__WEBPACK_IMPORTED_MODULE_5__["getUserAgent"].browser === 'MSIE' && parseInt(lib_detect__WEBPACK_IMPORTED_MODULE_5__["getUserAgent"].version, 10) <= 10;
var fabricV1Tpl;
var iframeVideoTpl;
var scrollBgTpl; // This is a hasty clone of fluid250.js

var FabricV1 =
/*#__PURE__*/
function () {
  function FabricV1(adSlot, params) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FabricV1);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "adSlot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "params", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "scrollingBg", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "layer2", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "scrollType", void 0);

    this.adSlot = adSlot;
    this.params = params;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FabricV1, [{
    key: "create",
    value: function create() {
      var _this = this;

      if (!fabricV1Tpl) {
        fabricV1Tpl = lodash_template__WEBPACK_IMPORTED_MODULE_6___default()(raw_loader_commercial_views_creatives_fabric_v1_html__WEBPACK_IMPORTED_MODULE_10___default.a);
        iframeVideoTpl = lodash_template__WEBPACK_IMPORTED_MODULE_6___default()(raw_loader_commercial_views_creatives_iframe_video_html__WEBPACK_IMPORTED_MODULE_11___default.a);
        scrollBgTpl = lodash_template__WEBPACK_IMPORTED_MODULE_6___default()(raw_loader_commercial_views_creatives_scrollbg_html__WEBPACK_IMPORTED_MODULE_12___default.a);
      }

      var videoPosition = {
        position: this.params.videoPositionH === 'left' || this.params.videoPositionH === 'right' ? "".concat(this.params.videoPositionH, ":").concat(this.params.videoHorizSpace, "px;") : ''
      };
      var templateOptions = {
        id: "fabric-".concat(Math.trunc(Math.random() * 10000).toString(16)),
        showLabel: this.params.showAdLabel !== 'hide',
        video: this.params.videoURL ? iframeVideoTpl(Object.assign({}, this.params, videoPosition)) : '',
        hasContainer: 'layerTwoAnimation' in this.params,
        layerTwoBGPosition: this.params.layerTwoBGPosition && (!this.params.layerTwoAnimation || this.params.layerTwoAnimation === 'disabled' || !Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["isEnhanced"])() && this.params.layerTwoAnimation === 'enabled') ? this.params.layerTwoBGPosition : '0% 0%',
        scrollbg: this.params.backgroundImagePType && this.params.backgroundImagePType !== 'none' ? scrollBgTpl(this.params) : false
      };

      if (templateOptions.scrollbg) {
        // update bg position
        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].read(this.updateBgPosition, this);
        lib_mediator__WEBPACK_IMPORTED_MODULE_7__["default"].on('window:throttledScroll', this.updateBgPosition.bind(this)); // to be safe, also update on window resize

        lib_mediator__WEBPACK_IMPORTED_MODULE_7__["default"].on('window:throttledResize', this.updateBgPosition.bind(this));
      }

      if (this.params.trackingPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(this.params.trackingPixel + this.params.cacheBuster);
      }

      if (this.params.researchPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(this.params.researchPixel + this.params.cacheBuster);
      }

      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
        _this.adSlot.insertAdjacentHTML('beforeend', fabricV1Tpl({
          data: Object.assign({}, _this.params, templateOptions)
        }));

        _this.scrollingBg = _this.adSlot.querySelector('.ad-scrolling-bg');
        _this.layer2 = _this.adSlot.querySelector('.hide-until-tablet .fabric-v1_layer2');
        _this.scrollType = _this.params.backgroundImagePType; // layer two animations must not have a background position, otherwise the background will
        // be visible before the animation has been initiated.

        if (_this.params.layerTwoAnimation === 'enabled' && _this.layer2 && Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["isEnhanced"])() && !isIE10OrLess) {
          _this.layer2.style.backgroundPosition = '';
        }

        if (_this.scrollType === 'fixed' && _this.scrollingBg && hasBackgroundFixedSupport) {
          _this.scrollingBg.style.backgroundAttachment = 'fixed';
        } // #? `classList.add` takes multiple arguments, but we are using it
        // here with arity 1 because polyfill.io has incorrect support with IE 10 and 11.
        // One may revert to this.adSlot.classList.add('ad-slot--fabric-v1', 'ad-slot--fabric', 'content__mobile-full-width');
        // When support is correct or when we stop supporting IE <= 11


        _this.adSlot.classList.add('ad-slot--fabric-v1');

        _this.adSlot.classList.add('ad-slot--fabric');

        _this.adSlot.classList.add('content__mobile-full-width');

        if (_this.adSlot.parentNode && _this.adSlot.parentNode instanceof HTMLElement && _this.adSlot.parentNode.classList.contains('top-banner-ad-container')) {
          _this.adSlot.parentNode.classList.add('top-banner-ad-container--fabric');
        }

        if (_this.params.viewabilityTracker) {
          Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__["addViewabilityTracker"])(_this.adSlot, _this.params.id, _this.params.viewabilityTracker);
        }

        return true;
      });
    }
  }, {
    key: "updateBgPosition",
    value: function updateBgPosition() {
      var _this2 = this;

      if (this.scrollType === 'parallax') {
        var scrollAmount = Math.ceil(this.adSlot.getBoundingClientRect().top * 0.3) + 20;
        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
          if (_this2.scrollingBg) {
            _this2.scrollingBg.style.backgroundPosition = "50% ".concat(scrollAmount, "%");

            _this2.scrollingBg.classList.add('ad-scrolling-bg-parallax');
          }
        });
      } else if (this.scrollType === 'fixed' && !hasBackgroundFixedSupport) {
        var adRect = this.adSlot.getBoundingClientRect();
        var vPos = (window.innerHeight - adRect.bottom + adRect.height / 2) / window.innerHeight * 100;
        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
          if (_this2.scrollingBg) {
            _this2.scrollingBg.style.backgroundPosition = "50% ".concat(vPos, "%");
          }
        });
      }

      this.layer2Animation();
    }
  }, {
    key: "layer2Animation",
    value: function layer2Animation() {
      var _this3 = this;

      var inViewB;

      if (this.params.layerTwoAnimation === 'enabled' && Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["isEnhanced"])() && !isIE10OrLess) {
        inViewB = Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["getViewport"])().height > this.adSlot.getBoundingClientRect().top;
        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
          if (_this3.layer2) {
            _this3.layer2.classList.add("ad-scrolling-text-hide".concat(_this3.params.layerTwoAnimationPosition ? "-".concat(_this3.params.layerTwoAnimationPosition) : ''));
          }

          if (_this3.layer2 && inViewB) {
            _this3.layer2.classList.add("ad-scrolling-text-animate".concat(_this3.params.layerTwoAnimationPosition ? "-".concat(_this3.params.layerTwoAnimationPosition) : ''));
          }
        });
      }
    }
  }]);

  return FabricV1;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-video.js":
/*!**************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/fabric-video.js ***!
  \**************************************************************************************/
/*! exports provided: FabricVideo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FabricVideo", function() { return FabricVideo; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/events */ "./static/src/javascripts/lib/events.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_video_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/fabric-video.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/fabric-video.html");
/* harmony import */ var raw_loader_commercial_views_creatives_fabric_video_html__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_fabric_video_html__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var object_fit_videos__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! object-fit-videos */ "./node_modules/object-fit-videos/object-fit-videos.js");
/* harmony import */ var object_fit_videos__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(object_fit_videos__WEBPACK_IMPORTED_MODULE_11__);













var FabricVideo =
/*#__PURE__*/
function () {
  function FabricVideo(adSlot, params) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FabricVideo);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "isUpdating", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "adSlot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "params", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "layer2", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "video", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "hasVideo", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "inView", void 0);

    var isSmallScreen = Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isBreakpoint"])({
      max: 'phablet'
    });
    this.isUpdating = false;
    this.hasVideo = !(Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isIOS"])() || Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["isAndroid"])() || isSmallScreen);
    this.inView = false;
    this.adSlot = adSlot;
    this.params = params;
    this.params.id = "fabric-video-".concat(Math.floor(Math.random() * 10000).toString(16));

    if (isSmallScreen) {
      this.params.posterMobile = "<div class=\"creative__poster\" style=\"background-image:url(".concat(this.params.Videobackupimage, ")\"></div>");
    } else {
      if (this.hasVideo) {
        this.params.video = "<video muted class=\"creative__video creative__video--".concat(this.params.Videoalignment, "\"><source src=\"").concat(this.params.VideoURL, "\" type=\"video/mp4\"></video>");
      }

      this.params.posterTablet = "<div class=\"creative__poster\" style=\"background-image:url(".concat(this.params.BackgroundImagemobile, ")\"></div>");
    }
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FabricVideo, [{
    key: "onVideoEnded",
    value: function onVideoEnded() {
      if (this.video) {
        this.video.onended = null;
        this.video = null;
      }
    }
  }, {
    key: "onScroll",
    value: function onScroll() {
      var viewportHeight = Object(lib_detect__WEBPACK_IMPORTED_MODULE_6__["getViewport"])().height;
      var rect = this.adSlot.getBoundingClientRect();
      this.inView = rect.top >= 0 && rect.bottom < viewportHeight;

      if (!this.isUpdating) {
        this.isUpdating = true;
        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__["default"].write(this.updateView, this);
      }
    }
  }, {
    key: "updateView",
    value: function updateView() {
      this.isUpdating = false;

      if (this.video) {
        this.updateVideo();
      }

      this.updateAnimation();
    }
  }, {
    key: "updateVideo",
    value: function updateVideo() {
      if (this.video) {
        if (this.inView) {
          this.video.play();
        } else {
          this.video.pause();
        }
      }
    }
  }, {
    key: "updateAnimation",
    value: function updateAnimation() {
      if (this.inView) {
        this.playAnimation();
      } else {
        this.pauseAnimation();
      }
    }
  }, {
    key: "playAnimation",
    value: function playAnimation() {
      if (this.layer2) {
        this.layer2.forEach(function (l) {
          l.classList.add('is-animating');
        });
      }
    }
  }, {
    key: "pauseAnimation",
    value: function pauseAnimation() {
      if (this.layer2) {
        this.layer2.forEach(function (l) {
          l.classList.remove('is-animating');
        });
      }
    }
  }, {
    key: "create",
    value: function create() {
      var _this = this;

      var fabricVideoTpl = lodash_template__WEBPACK_IMPORTED_MODULE_7___default()(raw_loader_commercial_views_creatives_fabric_video_html__WEBPACK_IMPORTED_MODULE_10___default.a);
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__["default"].write(function () {
        if (_this.params.Trackingpixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(_this.params.Trackingpixel + _this.params.cacheBuster);
        }

        if (_this.params.Researchpixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_8__["addTrackingPixel"])(_this.params.Researchpixel + _this.params.cacheBuster);
        }

        _this.adSlot.insertAdjacentHTML('beforeend', fabricVideoTpl({
          data: _this.params
        }));

        if (_this.params.viewabilityTracker) {
          Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_9__["addViewabilityTracker"])(_this.adSlot, _this.params.id, _this.params.viewabilityTracker);
        }

        if (_this.adSlot) {
          _this.adSlot.classList.add('ad-slot--fabric');
        }

        if (_this.adSlot.parentNode && _this.adSlot.parentNode instanceof Element && _this.adSlot.parentNode.classList.contains('top-banner-ad-container')) {
          _this.adSlot.parentNode.classList.add('top-banner-ad-container--fabric');
        } // The objectFitVideos should be removed after the DAP campaign is finished (09/12/2017).
        // At this point, IE support for Fabric Video will only be available through DFP Native Styles.


        object_fit_videos__WEBPACK_IMPORTED_MODULE_11___default()(_this.adSlot.querySelector('video'));
      }).then(function () {
        _this.layer2 = qwery__WEBPACK_IMPORTED_MODULE_3___default()('.creative__layer2', _this.adSlot);

        var boundOnScroll = _this.onScroll.bind(_this);

        Object(lib_events__WEBPACK_IMPORTED_MODULE_4__["addEventListener"])(window, 'scroll', boundOnScroll, {
          passive: true
        });
        Object(lib_events__WEBPACK_IMPORTED_MODULE_4__["addEventListener"])(_this.adSlot, 'animationend', function () {
          window.removeEventListener('scroll', boundOnScroll);
        });

        if (_this.hasVideo) {
          _this.video = _this.adSlot.getElementsByTagName('video')[0];
          _this.video.onended = _this.onVideoEnded;
        }

        lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__["default"].read(_this.onScroll, _this);
        return true;
      });
    }
  }]);

  return FabricVideo;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/frame.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/frame.js ***!
  \*******************************************************************************/
/*! exports provided: Frame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Frame", function() { return Frame; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var common_modules_ui_toggles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/ui/toggles */ "./static/src/javascripts/projects/common/modules/ui/toggles.js");
/* harmony import */ var common_views_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/views/svg */ "./static/src/javascripts/projects/common/views/svg.js");
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");
/* harmony import */ var raw_loader_commercial_views_creatives_frame_html__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/frame.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/frame.html");
/* harmony import */ var raw_loader_commercial_views_creatives_frame_html__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_frame_html__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var raw_loader_commercial_views_creatives_gustyle_label_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! raw-loader!commercial/views/creatives/gustyle-label.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/commercial/views/creatives/gustyle-label.html");
/* harmony import */ var raw_loader_commercial_views_creatives_gustyle_label_html__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(raw_loader_commercial_views_creatives_gustyle_label_html__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! svgs/icon/external-link.svg */ "./static/src/inline-svgs/icon/external-link.svg");
/* harmony import */ var svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! svgs/icon/arrow.svg */ "./static/src/inline-svgs/icon/arrow.svg");
/* harmony import */ var svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_12__);














var Frame =
/*#__PURE__*/
function () {
  function Frame(adSlot, params) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Frame);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "adSlot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "params", void 0);

    this.adSlot = adSlot;
    this.params = params;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Frame, [{
    key: "create",
    value: function create() {
      var _this = this;

      this.params.externalLinkIcon = Object(common_views_svg__WEBPACK_IMPORTED_MODULE_6__["addClassesAndTitle"])(svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_11___default.a.markup, ['frame__external-link-icon']);
      this.params.target = this.params.newWindow === 'yes' ? '_blank' : '_self';
      this.params.id = "frame-".concat(Math.floor(Math.random() * 10000).toString(16));
      var frameMarkup = lodash_template__WEBPACK_IMPORTED_MODULE_4___default()(raw_loader_commercial_views_creatives_frame_html__WEBPACK_IMPORTED_MODULE_9___default.a)({
        data: this.params
      });
      var labelMarkup = lodash_template__WEBPACK_IMPORTED_MODULE_4___default()(raw_loader_commercial_views_creatives_gustyle_label_html__WEBPACK_IMPORTED_MODULE_10___default.a)({
        data: {
          buttonTitle: 'Ad',
          infoTitle: 'Advertising on the Guardian',
          infoText: 'is created and paid for by third parties.',
          infoLinkText: 'Learn more about how advertising supports the Guardian.',
          infoLinkUrl: 'https://www.theguardian.com/advertising-on-the-guardian',
          icon: Object(common_views_svg__WEBPACK_IMPORTED_MODULE_6__["addClassesAndTitle"])(svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_12___default.a.markup, ['gu-comlabel__icon']),
          dataAttr: this.adSlot.id
        }
      });
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_3__["default"].write(function () {
        _this.adSlot.insertAdjacentHTML('beforeend', frameMarkup);

        if (_this.adSlot.lastElementChild) {
          _this.adSlot.lastElementChild.insertAdjacentHTML('afterbegin', labelMarkup);
        }

        _this.adSlot.classList.add('ad-slot--frame');

        if (_this.params.trackingPixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__["addTrackingPixel"])(_this.params.trackingPixel + _this.params.cacheBuster);
        }

        if (_this.params.researchPixel) {
          Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__["addTrackingPixel"])(_this.params.researchPixel + _this.params.cacheBuster);
        }

        if (_this.params.viewabilityTracker) {
          Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_8__["addViewabilityTracker"])(_this.adSlot, _this.params.id, _this.params.viewabilityTracker);
        }

        var toggles = new common_modules_ui_toggles__WEBPACK_IMPORTED_MODULE_5__["Toggles"](_this.adSlot);
        toggles.init();
        return true;
      });
    }
  }]);

  return Frame;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/page-skin.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/page-skin.js ***!
  \***********************************************************************************/
/*! exports provided: pageSkin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pageSkin", function() { return pageSkin; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");






var pageSkin = function pageSkin() {
  var bodyEl = document.body;
  var hasPageSkin = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.hasPageSkin;

  var togglePageSkinActiveClass = function togglePageSkinActiveClass() {
    if (bodyEl) {
      fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
        bodyEl.classList.toggle('has-active-pageskin', Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["isBreakpoint"])({
          min: 'wide'
        }));
      });
    }
  };

  var togglePageSkin = function togglePageSkin() {
    if (hasPageSkin && Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["hasCrossedBreakpoint"])(true) && !common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].adFree) {
      togglePageSkinActiveClass();
    }
  };

  togglePageSkin();
  lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].on('window:throttledResize', togglePageSkin);
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/creatives/scrollable-mpu-v2.js":
/*!*******************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/creatives/scrollable-mpu-v2.js ***!
  \*******************************************************************************************/
/*! exports provided: ScrollableMpu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollableMpu", function() { return ScrollableMpu; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/creatives/add-tracking-pixel */ "./static/src/javascripts/projects/commercial/modules/creatives/add-tracking-pixel.js");
/* harmony import */ var commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/creatives/add-viewability-tracker */ "./static/src/javascripts/projects/commercial/modules/creatives/add-viewability-tracker.js");










/**
 * TODO: rather blunt instrument this, due to the fact *most* mobile devices don't have a fixed
 * background-attachment - need to make this more granular
 */
var hasScrollEnabled = !Object(lib_detect__WEBPACK_IMPORTED_MODULE_5__["isAndroid"])();
/**
 * https://www.google.com/dfp/59666047#delivery/CreateCreativeTemplate/creativeTemplateId=10026567
 * https://www.google.com/dfp/59666047#delivery/CreateCreativeTemplate/creativeTemplateId=10037607
 */

var scrollableMpuTpl = function scrollableMpuTpl(params) {
  return "\n<a id=\"".concat(params.id, "\" class=\"creative--scrollable-mpu\"\n    href=\"").concat(params.clickMacro).concat(params.destination, "\"\n    target=\"_new\">\n    <div class=\"creative--scrollable-mpu-inner\">\n        ").concat(params.backgroundImage, "\n        <div class=\"creative--scrollable-mpu-static-image\" style=\"background-image: url('").concat(params.layer1Image, "');\"></div>\n    </div>\n</a>\n");
};

var ScrollableMpu =
/*#__PURE__*/
function () {
  function ScrollableMpu(adSlot, params) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ScrollableMpu);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "adSlot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "params", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "$scrollableImage", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "$scrollableMpu", void 0);

    this.adSlot = adSlot;
    this.params = params;
    this.$scrollableImage = null;
    this.$scrollableMpu = null;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ScrollableMpu, [{
    key: "updateBgFluid250",
    value: function updateBgFluid250() {
      var _this = this;

      fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
        if (_this.$scrollableImage) {
          _this.$scrollableImage.addClass('creative--scrollable-mpu-image-fixed');
        }
      });
    }
  }, {
    key: "updateBgParallax",
    value: function updateBgParallax() {
      var _this2 = this;

      var scrollAmount = Math.ceil(this.adSlot.getBoundingClientRect().top * 0.3) + 20;
      fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
        if (_this2.$scrollableImage) {
          _this2.$scrollableImage.addClass('creative--scrollable-mpu-image-parallax').css('background-position', "50% ".concat(scrollAmount, "%"));
        }
      });
    }
  }, {
    key: "updateBg",
    value: function updateBg() {
      var _this3 = this;

      if (this.$scrollableMpu) {
        var position = -this.$scrollableMpu[0].getBoundingClientRect().top;
        fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
          if (_this3.$scrollableImage) {
            _this3.$scrollableImage.css('background-position', "100% ".concat(position, "px"));
          }
        });
      }
    }
  }, {
    key: "create",
    value: function create() {
      var _this4 = this;

      var templateOptions = {
        id: "scrollable-mpu-".concat(Math.floor(Math.random() * 10000).toString(16)),
        clickMacro: this.params.clickMacro,
        destination: this.params.destination,
        layer1Image: hasScrollEnabled ? this.params.layer1Image : this.params.mobileImage,
        backgroundImage: hasScrollEnabled && this.params.backgroundImage ? "<div class=\"creative--scrollable-mpu-image\" style=\"background-image: url(".concat(this.params.backgroundImage, ");\"></div>") : ''
      };
      this.$scrollableMpu = lib_$__WEBPACK_IMPORTED_MODULE_4__["default"].create(scrollableMpuTpl(templateOptions)).appendTo(this.adSlot);

      if (this.params.trackingPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__["addTrackingPixel"])(this.params.trackingPixel + this.params.cacheBuster);
      }

      if (this.params.researchPixel) {
        Object(commercial_modules_creatives_add_tracking_pixel__WEBPACK_IMPORTED_MODULE_7__["addTrackingPixel"])(this.params.researchPixel + this.params.cacheBuster);
      }

      if (this.params.viewabilityTracker) {
        Object(commercial_modules_creatives_add_viewability_tracker__WEBPACK_IMPORTED_MODULE_8__["addViewabilityTracker"])(this.adSlot, this.params.id, this.params.viewabilityTracker);
      }

      if (hasScrollEnabled) {
        var updateFn;

        if (this.params.backgroundImagePType === 'fixed matching fluid250') {
          updateFn = function updateFn() {
            return _this4.updateBgFluid250();
          };
        } else if (this.params.backgroundImagePType === 'parallax') {
          updateFn = function updateFn() {
            return _this4.updateBgParallax();
          };
        } else {
          updateFn = function updateFn() {
            return _this4.updateBg();
          };
        }

        this.$scrollableImage = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.creative--scrollable-mpu-image', this.adSlot); // update bg position

        fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.read(updateFn);
        lib_mediator__WEBPACK_IMPORTED_MODULE_6__["default"].on('window:throttledScroll', updateFn); // to be safe, also update on window resize

        lib_mediator__WEBPACK_IMPORTED_MODULE_6__["default"].on('window:throttledResize', updateFn);
      }

      return Promise.resolve(true);
    }
  }]);

  return ScrollableMpu;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js":
/*!**************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/Advert.js ***!
  \**************************************************************************/
/*! exports provided: Advert, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Advert", function() { return Advert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_user_timing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/user-timing */ "./static/src/javascripts/lib/user-timing.js");
/* harmony import */ var commercial_modules_dfp_define_slot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/define-slot */ "./static/src/javascripts/projects/commercial/modules/dfp/define-slot.js");
/* harmony import */ var commercial_modules_dfp_breakpoint_name_to_attribute__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/dfp/breakpoint-name-to-attribute */ "./static/src/javascripts/projects/commercial/modules/dfp/breakpoint-name-to-attribute.js");









/** A breakpoint can have various sizes assigned to it. You can assign either on
 * set of sizes or multiple.
 *
 * One size       - `data-mobile="300,50"`
 * Multiple sizes - `data-mobile="300,50|320,50"`
 */
var createSizeMapping = function createSizeMapping(attr) {
  return attr.split('|').map(function (size) {
    return size === 'fluid' ? 'fluid' : size.split(',').map(Number);
  });
};

var getAdBreakpointSizes = function getAdBreakpointSizes(advertNode) {
  return lib_detect__WEBPACK_IMPORTED_MODULE_4__["breakpoints"].reduce(function (sizes, breakpoint) {
    var data = advertNode.getAttribute("data-".concat(Object(commercial_modules_dfp_breakpoint_name_to_attribute__WEBPACK_IMPORTED_MODULE_7__["breakpointNameToAttribute"])(breakpoint.name)));

    if (data) {
      sizes[breakpoint.name] = createSizeMapping(data);
    }

    return sizes;
  }, {});
};

var Advert =
/*#__PURE__*/
function () {
  function Advert(adSlotNode) {
    var _this = this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Advert);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "id", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "node", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "sizes", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "size", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "slot", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isEmpty", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isLoading", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isRendering", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isLoaded", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "isRendered", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "shouldRefresh", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "maxViewPercentage", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "whenLoaded", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "whenLoadedResolver", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "whenRendered", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "whenRenderedResolver", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "whenSlotReady", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "extraNodeClasses", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "timings", void 0);

    var sizes = getAdBreakpointSizes(adSlotNode);
    var slotDefinition = Object(commercial_modules_dfp_define_slot__WEBPACK_IMPORTED_MODULE_6__["defineSlot"])(adSlotNode, sizes);
    this.id = adSlotNode.id;
    this.node = adSlotNode;
    this.sizes = sizes;
    this.size = null;
    this.slot = slotDefinition.slot;
    this.isEmpty = null;
    this.isLoading = false;
    this.isRendering = false;
    this.isLoaded = false;
    this.isRendered = false;
    this.whenSlotReady = slotDefinition.slotReady;
    this.timings = {
      createTime: null,
      startLoading: null,
      stopLoading: null,
      startRendering: null,
      stopRendering: null,
      loadingMethod: null,
      lazyWaitComplete: null
    };
    this.shouldRefresh = false;
    this.maxViewPercentage = 0;
    this.whenLoaded = new Promise(function (resolve) {
      _this.whenLoadedResolver = resolve;
    }).then(function (isLoaded) {
      _this.isLoaded = isLoaded;
      return isLoaded;
    });
    this.whenRendered = new Promise(function (resolve) {
      _this.whenRenderedResolver = resolve;
    }).then(function (isRendered) {
      _this.isRendered = isRendered;
      return isRendered;
    });
    this.extraNodeClasses = [];
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Advert, [{
    key: "startLoading",
    value: function startLoading() {
      this.isLoading = true;
      this.timings.startLoading = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_5__["getCurrentTime"])();
    }
  }, {
    key: "stopLoading",
    value: function stopLoading(isLoaded) {
      this.isLoading = false;

      if (this.whenLoadedResolver) {
        this.whenLoadedResolver(isLoaded);
      }

      this.timings.stopLoading = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_5__["getCurrentTime"])();
    }
  }, {
    key: "startRendering",
    value: function startRendering() {
      this.isRendering = true;
      this.timings.startRendering = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_5__["getCurrentTime"])();
    }
  }, {
    key: "stopRendering",
    value: function stopRendering(isRendered) {
      this.isRendering = false;

      if (this.whenRenderedResolver) {
        this.whenRenderedResolver(isRendered);
      }
    }
  }, {
    key: "updateExtraSlotClasses",
    value: function updateExtraSlotClasses() {
      var _this$node$classList, _this$node$classList2;

      for (var _len = arguments.length, newClasses = new Array(_len), _key = 0; _key < _len; _key++) {
        newClasses[_key] = arguments[_key];
      }

      var classesToRemove = Advert.filterClasses(this.extraNodeClasses, newClasses);

      (_this$node$classList = this.node.classList).remove.apply(_this$node$classList, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(classesToRemove));

      (_this$node$classList2 = this.node.classList).add.apply(_this$node$classList2, newClasses);

      this.extraNodeClasses = newClasses;
    }
  }]);

  return Advert;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(Advert, "filterClasses", function (oldClasses, newClasses) {
  return oldClasses.filter(function (oldClass) {
    return !newClasses.includes(oldClass);
  });
});


var _ = {
  filterClasses: Advert.filterClasses
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js ***!
  \****************************************************************************/
/*! exports provided: addSlot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addSlot", function() { return addSlot; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_queue_advert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/queue-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/queue-advert.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");
/* harmony import */ var commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/lazy-load */ "./static/src/javascripts/projects/commercial/modules/dfp/lazy-load.js");






var displayAd = function displayAd(adSlot, forceDisplay) {
  var advert = new commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__["Advert"](adSlot);
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertIds[advert.id] = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].adverts.push(advert) - 1;

  if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].shouldLazyLoad() && !forceDisplay) {
    Object(commercial_modules_dfp_queue_advert__WEBPACK_IMPORTED_MODULE_2__["queueAdvert"])(advert);
    Object(commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_4__["enableLazyLoad"])(advert);
  } else {
    Object(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_3__["loadAdvert"])(advert);
  }
};

var addSlot = function addSlot(adSlot, forceDisplay) {
  window.googletag.cmd.push(function () {
    if (!(adSlot.id in commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertIds)) {
      // dynamically add ad slot
      displayAd(adSlot, forceDisplay);
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/apply-creative-template.js":
/*!*******************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/apply-creative-template.js ***!
  \*******************************************************************************************/
/*! exports provided: applyCreativeTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyCreativeTemplate", function() { return applyCreativeTemplate; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var commercial_modules_creatives_frame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/creatives/frame */ "./static/src/javascripts/projects/commercial/modules/creatives/frame.js");
/* harmony import */ var commercial_modules_creatives_fabric_v1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/creatives/fabric-v1 */ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-v1.js");
/* harmony import */ var commercial_modules_creatives_fabric_expanding_v1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/creatives/fabric-expanding-v1 */ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-expanding-v1.js");
/* harmony import */ var commercial_modules_creatives_fabric_expandable_video_v2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/creatives/fabric-expandable-video-v2 */ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-expandable-video-v2.js");
/* harmony import */ var commercial_modules_creatives_fabric_video__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/creatives/fabric-video */ "./static/src/javascripts/projects/commercial/modules/creatives/fabric-video.js");
/* harmony import */ var commercial_modules_creatives_scrollable_mpu_v2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/creatives/scrollable-mpu-v2 */ "./static/src/javascripts/projects/commercial/modules/creatives/scrollable-mpu-v2.js");








var creativeLookup = {
  frame: commercial_modules_creatives_frame__WEBPACK_IMPORTED_MODULE_2__["Frame"],
  'fabric-v1': commercial_modules_creatives_fabric_v1__WEBPACK_IMPORTED_MODULE_3__["FabricV1"],
  'fabric-expanding-v1': commercial_modules_creatives_fabric_expanding_v1__WEBPACK_IMPORTED_MODULE_4__["FabricExpandingV1"],
  'fabric-expandable-video-v2': commercial_modules_creatives_fabric_expandable_video_v2__WEBPACK_IMPORTED_MODULE_5__["FabricExpandableVideoV2"],
  'fabric-video': commercial_modules_creatives_fabric_video__WEBPACK_IMPORTED_MODULE_6__["FabricVideo"],
  'scrollable-mpu-v2': commercial_modules_creatives_scrollable_mpu_v2__WEBPACK_IMPORTED_MODULE_7__["ScrollableMpu"]
};

var renderCreativeTemplate = function renderCreativeTemplate(adSlot, iFrame) {
  var fetchCreativeConfig = function fetchCreativeConfig() {
    try {
      var breakoutScript = iFrame.contentDocument.body ? iFrame.contentDocument.body.querySelector('.breakout__script[type="application/json"]') : null;
      return breakoutScript ? breakoutScript.innerHTML : null;
    } catch (err) {
      return null;
    }
  };

  var mergeViewabilityTracker = function mergeViewabilityTracker(json) {
    var viewabilityTrackerDiv = iFrame.contentDocument.getElementById('viewabilityTracker');
    var viewabilityTracker = viewabilityTrackerDiv ? viewabilityTrackerDiv.childNodes[0].nodeValue.trim() : null;

    if (viewabilityTracker && json.params) {
      json.params.viewabilityTracker = viewabilityTracker;
    }

    return json;
  };

  var renderCreative = function renderCreative(config) {
    return new Promise(function (resolve) {
      var Creative = creativeLookup[config.name];
      resolve(new Creative(adSlot, config.params, config.opts).create());
    });
  };

  var hideIframe = function hideIframe() {
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
      iFrame.style.display = 'none';
    });
  };

  var creativeConfig = fetchCreativeConfig();

  if (creativeConfig) {
    return hideIframe().then(function () {
      return JSON.parse(creativeConfig);
    }).then(mergeViewabilityTracker).then(renderCreative).catch(function (err) {
      Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(Error("Failed to get creative JSON ".concat(err)), {
        feature: 'commercial'
      }, false);
      return Promise.resolve(true);
    });
  }

  return Promise.resolve(true);
};

var getAdvertIframe = function getAdvertIframe(adSlot) {
  return new Promise(function (resolve, reject) {
    // DFP will sometimes return empty iframes, denoted with a '__hidden__' parameter embedded in its ID.
    var contentFrame = adSlot.querySelector('iframe:not([id*="__hidden__"])');

    if (!contentFrame) {
      reject();
    } else if ( // According to Flow, readyState exists on the Document, not the HTMLIFrameElement
    // Is this different for old IE?
    // $FlowFixMe
    contentFrame.readyState && contentFrame.readyState !== 'complete') {
      // On IE, wait for the frame to load before interacting with it
      var getIeIframe = function getIeIframe(e) {
        var updatedIFrame = e.srcElement; // $FlowFixMe

        if (updatedIFrame && updatedIFrame.readyState === 'complete') {
          updatedIFrame.removeEventListener('readystatechange', getIeIframe);
          resolve(contentFrame);
        }
      };

      contentFrame.addEventListener('readystatechange', getIeIframe);
    } else {
      resolve(contentFrame);
    }
  });
};
/**
 * Not all adverts render themselves - some just provide data for templates that we implement in commercial.js.
 * This looks for any such data and, if we find it, renders the appropriate component.
 */


var applyCreativeTemplate = function applyCreativeTemplate(adSlot) {
  return getAdvertIframe(adSlot).then(function (iframe) {
    return renderCreativeTemplate(adSlot, iframe);
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/breakpoint-name-to-attribute.js":
/*!************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/breakpoint-name-to-attribute.js ***!
  \************************************************************************************************/
/*! exports provided: breakpointNameToAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "breakpointNameToAttribute", function() { return breakpointNameToAttribute; });
var breakpointNameToAttribute = function breakpointNameToAttribute(breakpointName) {
  return breakpointName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js ***!
  \********************************************************************************/
/*! exports provided: createSlots */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSlots", function() { return createSlots; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/ad-sizes */ "./static/src/javascripts/projects/commercial/modules/ad-sizes.js");


var inlineDefinition = {
  sizeMappings: {
    mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].mpu, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].googleCard, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid],
    desktop: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].mpu, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].video, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].video2, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].googleCard, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
  }
};
var adSlotToBlockthroughUids = {
  inline1: '5a98587091-157',
  inline2: '5a98587869-157',
  inline3: '5a98587f21-157',
  inline4: '5a985885d5-157',
  inline5: '5a98588c9c-157',
  inline6: '5a985892ed-157',
  inline7: '5a985899d4-157',
  inline8: '5a9858a114-157',
  mostpop: '5a9d5c1d72-157'
};
var adSlotDefinitions = {
  im: {
    label: false,
    refresh: false,
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].inlineMerchandising, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  'high-merch': {
    label: false,
    refresh: false,
    name: 'merchandising-high',
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].merchandisingHigh, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  'high-merch-lucky': {
    label: false,
    refresh: false,
    name: 'merchandising-high-lucky',
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  'high-merch-paid': {
    label: false,
    refresh: false,
    name: 'merchandising-high',
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].merchandisingHighAdFeature, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  inline: inlineDefinition,
  mostpop: inlineDefinition,
  comments: inlineDefinition,
  'top-above-nav': {
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].outOfPage, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].empty, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].mpu, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fabric, commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  carrot: {
    label: false,
    refresh: false,
    name: 'carrot',
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  },
  epic: {
    label: false,
    refresh: false,
    name: 'epic',
    sizeMappings: {
      mobile: [commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_1__["adSizes"].fluid]
    }
  }
};
/*
  Returns an array of adSlot HTMLElement(s) with always at least one HTMLDivElement
  which is the main DFP slot.

  Insert those elements as sibblings at the place
  you want adverts to appear.

  Note that for the DFP slot to be filled by GTP, you'll have to
  use addSlot from add-slot.js
*/

var createAdSlotElements = function createAdSlotElements(name, attrs, classes) {
  var adSlots = []; // The 'main' adSlot

  var adSlot = document.createElement('div');
  adSlot.id = "dfp-ad--".concat(name);
  adSlot.className = "js-ad-slot ad-slot ".concat(classes.join(' '));
  adSlot.setAttribute('data-link-name', "ad slot ".concat(name));
  adSlot.setAttribute('data-name', name);
  adSlot.setAttribute('aria-hidden', 'true');
  Object.keys(attrs).forEach(function (attr) {
    adSlot.setAttribute(attr, attrs[attr]);
  });
  adSlots.push(adSlot); // Should we have a companion BlockThrough span?

  var blockthroughUid = adSlotToBlockthroughUids["".concat(name)];

  if (blockthroughUid) {
    var blockthroughAdSlot = document.createElement('span');
    blockthroughAdSlot.className = 'bt-uid-tg';
    blockthroughAdSlot.setAttribute('uid', blockthroughUid);
    blockthroughAdSlot.setAttribute('style', 'display: none !important');
    blockthroughAdSlot.setAttribute('aria-hidden', 'true');
    adSlots.push(blockthroughAdSlot);
  }

  return adSlots;
};

var createSlots = function createSlots(type) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var attributes = {};
  var definition = adSlotDefinitions[type];
  var slotName = options.name || definition.name || type;
  var classes = options.classes ? options.classes.split(' ').map(function (cn) {
    return "ad-slot--".concat(cn);
  }) : [];
  var sizes = Object.assign({}, definition.sizeMappings);

  if (options.sizes) {
    Object.keys(options.sizes).forEach(function (size) {
      if (sizes[size]) {
        sizes[size] = sizes[size].concat(options.sizes[size]);
      } else {
        sizes[size] = options.sizes[size];
      }
    });
  }

  Object.keys(sizes).forEach(function (size) {
    sizes[size] = sizes[size].join('|');
  });
  Object.assign(attributes, sizes);

  if (definition.label === false) {
    attributes.label = 'false';
  }

  if (definition.refresh === false) {
    attributes.refresh = 'false';
  }

  classes.push("ad-slot--".concat(slotName));
  return createAdSlotElements(slotName, Object.keys(attributes).reduce(function (result, key) {
    return Object.assign({}, result, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, "data-".concat(key), attributes[key]));
  }, {}), classes);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/define-slot.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/define-slot.js ***!
  \*******************************************************************************/
/*! exports provided: defineSlot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defineSlot", function() { return defineSlot; });
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/uniqBy */ "./node_modules/lodash/uniqBy.js");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/flatten */ "./node_modules/lodash/flatten.js");
/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_flatten__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var commercial_modules_third_party_tags_outbrain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/third-party-tags/outbrain */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain.js");







var adUnit = lodash_once__WEBPACK_IMPORTED_MODULE_5___default()(function () {
  var urlVars = Object(lib_url__WEBPACK_IMPORTED_MODULE_0__["getUrlVars"])();
  return urlVars['ad-unit'] ? "/".concat(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.dfpAccountId, "/").concat(urlVars['ad-unit']) : lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.adUnit;
});

/**
 * Builds and assigns the correct size map for a slot based on the breakpoints
 * attached to the element via data attributes.
 *
 * A new size map is created for a given slot. We then loop through each breakpoint
 * defined in the config, checking if that breakpoint has been set on the slot.
 *
 * If it has been defined, then we add that size to the size mapping.
 *
 */
var buildSizeMapping = function buildSizeMapping(sizes) {
  var mapping = window.googletag.sizeMapping();
  lib_detect__WEBPACK_IMPORTED_MODULE_2__["breakpoints"].filter(function (_) {
    return _.name in sizes;
  }).forEach(function (_) {
    mapping.addSize([_.width, 0], sizes[_.name]);
  });
  return mapping.build();
};

var getSizeOpts = function getSizeOpts(sizesByBreakpoint) {
  var sizeMapping = buildSizeMapping(sizesByBreakpoint); // as we're using sizeMapping, pull out all the ad sizes, as an array of arrays

  var sizes = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3___default()(lodash_flatten__WEBPACK_IMPORTED_MODULE_4___default()(sizeMapping.map(function (size) {
    return size[1];
  })), function (size) {
    return "".concat(size[0], "-").concat(size[1]);
  });
  return {
    sizeMapping: sizeMapping,
    sizes: sizes
  };
}; // The high-merch slot targeting requires Promise-based data about the page.


var setHighMerchSlotTargeting = function setHighMerchSlotTargeting(slot, slotTarget) {
  if (!['merchandising-high', 'merchandising'].includes(slotTarget)) {
    return Promise.resolve();
  }

  return Object(commercial_modules_third_party_tags_outbrain__WEBPACK_IMPORTED_MODULE_6__["getOutbrainComplianceTargeting"])().then(function (keyValues) {
    keyValues.forEach(function (value, key) {
      slot.setTargeting(key, value);
    });
  });
};

var adomikClassify = function adomikClassify() {
  var rand = Math.random();

  switch (true) {
    case rand < 0.09:
      return "ad_ex".concat(Math.floor(100 * rand));

    case rand < 0.1:
      return 'ad_bc';

    default:
      return 'ad_opt';
  }
};

var defineSlot = function defineSlot(adSlotNode, sizes) {
  var slotTarget = adSlotNode.getAttribute('data-name');
  var sizeOpts = getSizeOpts(sizes);
  var id = adSlotNode.id;
  var slot;
  var slotReady;

  if (adSlotNode.getAttribute('data-out-of-page')) {
    slot = window.googletag.defineOutOfPageSlot(adUnit(), id).defineSizeMapping(sizeOpts.sizeMapping);
    slotReady = Promise.resolve();
  } else {
    slot = window.googletag.defineSlot(adUnit(), sizeOpts.sizes, id).defineSizeMapping(sizeOpts.sizeMapping);
    slotReady = setHighMerchSlotTargeting(slot, slotTarget);
  }
  /*
      For each ad slot defined, we request information from IAS, based
      on slot name, ad unit and sizes. We then add this targeting to the
      slot prior to requesting it from DFP.
       We race the request to IAS with a Timeout of 2 seconds. If the
      timeout resolves before the request to IAS then the slot is defined
      without the additional IAS data.
       To see debugging output from IAS add the URL param `&iasdebug=true` to the page URL
   */


  if (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches.iasAdTargeting', false)) {
    /* eslint-disable no-underscore-dangle */
    // this should all have been instantiated by commercial/modules/third-party-tags/ias.js
    window.__iasPET = window.__iasPET || {};
    var iasPET = window.__iasPET;
    /* eslint-disable no-underscore-enable */

    iasPET.queue = iasPET.queue || [];
    iasPET.pubId = '10249'; // IAS Optimization Targeting

    var iasPETSlots = [{
      adSlotId: id,
      size: slot.getSizes().filter(function (size) {
        return size !== 'fluid';
      }).map(function (size) {
        return [size.getWidth(), size.getHeight()];
      }),
      adUnitPath: adUnit() // why do we have this method and not just slot.getAdUnitPath()?

    }]; // this is stored so that the timeout can be cancelled in the event of IAS not timing out

    var timeoutId; // this is resolved by either the iasTimeout or iasDataCallback, defined below

    var loadedResolve;
    var iasDataPromise = new Promise(function (resolve) {
      loadedResolve = resolve;
    });

    var iasDataCallback = function iasDataCallback(targetingJSON) {
      clearTimeout(timeoutId);
      /*  There is a name-clash with the `fr` targeting returned by IAS
          and the `fr` paramater we already use for frequency. Therefore
          we apply the targeting to the slot ourselves and rename the IAS
          fr parameter to `fra` (given that, here, it relates to fraud).
      */

      var targeting = JSON.parse(targetingJSON); // brand safety is on a page level

      Object.keys(targeting.brandSafety).forEach(function (key) {
        return slot.setTargeting(key, targeting.brandSafety[key]);
      });

      if (targeting.fr) {
        slot.setTargeting('fra', targeting.fr);
      } // viewability targeting is on a slot level


      var ignoredKeys = ['id', 'pub'];
      Object.keys(targeting.slots[id]).filter(function (x) {
        return !ignoredKeys.includes(x);
      }).forEach(function (key) {
        return slot.setTargeting(key, targeting.slots[id][key]);
      });
      loadedResolve();
    };

    iasPET.queue.push({
      adSlots: iasPETSlots,
      dataHandler: iasDataCallback
    });
    var iasTimeoutDuration = 1000;

    var iasTimeout = function iasTimeout() {
      return new Promise(function (resolve) {
        timeoutId = setTimeout(resolve, iasTimeoutDuration);
      });
    };

    slotReady = slotReady.then(function () {
      return Promise.race([iasTimeout(), iasDataPromise]);
    });
  }

  if (slotTarget === 'im' && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isbn) {
    slot.setTargeting('isbn', lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.isbn);
  }

  var fabricKeyValues = new Map([['top-above-nav', 'fabric1'], ['merchandising-high', 'fabric2'], ['merchandising', 'fabric3']]);

  if (fabricKeyValues.has(slotTarget)) {
    slot.setTargeting('slot-fabric', fabricKeyValues.get(slotTarget));
  }

  if (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].switches.adomik) {
    slot.setTargeting('ad_group', adomikClassify());
    slot.setTargeting('ad_h', new Date().getUTCHours().toString());
  }

  slot.addService(window.googletag.pubads()).setTargeting('slot', slotTarget);
  return {
    slot: slot,
    slotReady: slotReady
  };
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js":
/*!***************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js ***!
  \***************************************************************************/
/*! exports provided: dfpEnv */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dfpEnv", function() { return dfpEnv; });
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var dfpEnv = {
  /* renderStartTime: integer. Point in time when DFP kicks in */
  renderStartTime: -1,

  /* adSlotSelector: string. A CSS selector to query ad slots in the DOM */
  adSlotSelector: '.js-ad-slot',

  /* externalDemand: string. Set to 'sonobi' for direct sonobi connection, 'none', or 'prebid' for header-bidding connections. */
  externalDemand: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.hbImpl,

  /* lazyLoadEnabled: boolean. Set to true when adverts are lazy-loaded */
  lazyLoadEnabled: false,

  /* lazyLoadObserve: boolean. Use IntersectionObserver in supporting browsers */
  lazyLoadObserve: 'IntersectionObserver' in window,

  /* creativeIDs: array<string>. List of loaded creative IDs */
  creativeIDs: [],

  /* advertIds: map<string -> int>. Keeps track of slot IDs and their position in the array of adverts */
  advertIds: {},

  /* advertsToLoad: array<Advert>. Lists adverts waiting to be loaded */
  advertsToLoad: [],

  /* advertsToRefresh: array<Advert>. Lists adverts refreshed when a breakpoint has been crossed */
  advertsToRefresh: [],

  /* adverts: array<Advert>. Keeps track of adverts and their state */
  adverts: [],

  /* shouldLazyLoad: () -> boolean. Determines whether ads should be lazy loaded */
  shouldLazyLoad: function shouldLazyLoad() {
    // We do not want lazy loading on pageskins because it messes up the roadblock
    // Also, if the special dll parameter is passed with a value of 1, we don't lazy load
    return !lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.hasPageSkin && Object(lib_url__WEBPACK_IMPORTED_MODULE_0__["getUrlVars"])().dll !== '1';
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/display-ads.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/display-ads.js ***!
  \*******************************************************************************/
/*! exports provided: displayAds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "displayAds", function() { return displayAds; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");
/* harmony import */ var commercial_modules_creatives_page_skin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/creatives/page-skin */ "./static/src/javascripts/projects/commercial/modules/creatives/page-skin.js");




var displayAds = function displayAds() {
  window.googletag.pubads().enableSingleRequest();
  window.googletag.pubads().collapseEmptyDivs();
  window.googletag.enableServices();
  /*
   *as this is an single request call, only need to make a single display call (to the first ad
   * slot)
   * This will load all adSlots in one go using gpt.js, even though we ask only for the first one,
   * thanks to 'enableSingleRequest' being set.
   */

  Object(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_1__["loadAdvert"])(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad[0]);
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad.length = 0;
  Object(commercial_modules_creatives_page_skin__WEBPACK_IMPORTED_MODULE_2__["pageSkin"])();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/display-lazy-ads.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/display-lazy-ads.js ***!
  \************************************************************************************/
/*! exports provided: displayLazyAds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "displayLazyAds", function() { return displayLazyAds; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/lazy-load */ "./static/src/javascripts/projects/commercial/modules/dfp/lazy-load.js");




var advertsToInstantlyLoad = ['dfp-ad--merchandising-high', 'dfp-ad--im'];

var instantLoad = function instantLoad() {
  var instantLoadAdverts = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad.filter(function (advert) {
    return advertsToInstantlyLoad.includes(advert.id);
  });
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad.filter(function (advert) {
    return !advertsToInstantlyLoad.includes(advert.id);
  });
  instantLoadAdverts.forEach(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_1__["loadAdvert"]);
};

var displayLazyAds = function displayLazyAds() {
  window.googletag.pubads().collapseEmptyDivs();
  window.googletag.enableServices();
  instantLoad();
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad.forEach(function (advert) {
    Object(commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_3__["enableLazyLoad"])(advert);
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/empty-advert.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/empty-advert.js ***!
  \********************************************************************************/
/*! exports provided: emptyAdvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "emptyAdvert", function() { return emptyAdvert; });
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");




var removeFromDfpEnv = function removeFromDfpEnv(advert) {
  var removeAdvert = function removeAdvert(adverts) {
    return adverts.filter(function (_) {
      return _ !== advert;
    });
  };

  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].adverts = removeAdvert(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].adverts);
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertsToRefresh = removeAdvert(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertsToRefresh);
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertsToLoad = removeAdvert(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertsToLoad);
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertIds = {};
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].adverts.forEach(function (ad, i) {
    commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_2__["dfpEnv"].advertIds[ad.id] = i;
  });
};

var emptyAdvert = function emptyAdvert(advert) {
  fastdom__WEBPACK_IMPORTED_MODULE_0___default.a.write(function () {
    window.googletag.destroySlots([advert.slot]);
    advert.node.remove();
    removeFromDfpEnv(advert);
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/fill-advert-slots.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/fill-advert-slots.js ***!
  \*************************************************************************************/
/*! exports provided: fillAdvertSlots */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fillAdvertSlots", function() { return fillAdvertSlots; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_queue_advert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/queue-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/queue-advert.js");
/* harmony import */ var commercial_modules_dfp_display_lazy_ads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/display-lazy-ads */ "./static/src/javascripts/projects/commercial/modules/dfp/display-lazy-ads.js");
/* harmony import */ var commercial_modules_dfp_display_ads__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/display-ads */ "./static/src/javascripts/projects/commercial/modules/dfp/display-ads.js");
/* harmony import */ var commercial_modules_dfp_prepare_sonobi_tag__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/prepare-sonobi-tag */ "./static/src/javascripts/projects/commercial/modules/dfp/prepare-sonobi-tag.js");
/* harmony import */ var commercial_modules_close_disabled_slots__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/close-disabled-slots */ "./static/src/javascripts/projects/commercial/modules/close-disabled-slots.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");








 // Pre-rendered ad slots that were rendered on the page by the server are collected here.
// For dynamic ad slots that are created at js-runtime, see:
//  article-aside-adverts
//  article-body-adverts
//  liveblog-adverts
//  high-merch

var fillAdvertSlots = function fillAdvertSlots() {
  // This module has the following strict dependencies. These dependencies must be
  // fulfilled before fillAdvertSlots can execute reliably. The bootstrap (commercial.js)
  var dependencies = [Object(commercial_modules_dfp_prepare_sonobi_tag__WEBPACK_IMPORTED_MODULE_6__["setupSonobi"])(), Object(commercial_modules_close_disabled_slots__WEBPACK_IMPORTED_MODULE_7__["closeDisabledSlots"])()];
  return Promise.all(dependencies).then(function () {
    // Quit if ad-free
    if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_8__["commercialFeatures"].adFree) {
      return Promise.resolve();
    } // Get all ad slots


    var adverts = qwery__WEBPACK_IMPORTED_MODULE_0___default()(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].adSlotSelector).filter(function (adSlot) {
      return !(adSlot.id in commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].advertIds);
    }).map(function (adSlot) {
      return new commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_2__["Advert"](adSlot);
    });
    var currentLength = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].adverts.length;
    commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].adverts = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].adverts.concat(adverts);
    adverts.forEach(function (advert, index) {
      commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].advertIds[advert.id] = currentLength + index;
    });
    adverts.forEach(commercial_modules_dfp_queue_advert__WEBPACK_IMPORTED_MODULE_3__["queueAdvert"]);

    if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].shouldLazyLoad()) {
      Object(commercial_modules_dfp_display_lazy_ads__WEBPACK_IMPORTED_MODULE_4__["displayLazyAds"])();
    } else {
      Object(commercial_modules_dfp_display_ads__WEBPACK_IMPORTED_MODULE_5__["displayAds"])();
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js ***!
  \************************************************************************************/
/*! exports provided: getAdvertById */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAdvertById", function() { return getAdvertById; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");



var getAdvertById = function getAdvertById(id) {
  return id in commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertIds ? commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].adverts[commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertIds[id]] : null;
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/lazy-load.js":
/*!*****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/lazy-load.js ***!
  \*****************************************************************************/
/*! exports provided: enableLazyLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableLazyLoad", function() { return enableLazyLoad; });
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_4__);





var IntersectionObserver = window.IntersectionObserver;
var IntersectionObserverEntry = window.IntersectionObserverEntry;

var displayAd = function displayAd(advertId) {
  var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_3__["getAdvertById"])(advertId);

  if (advert) {
    if (advert.isRendered) {
      Object(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_2__["refreshAdvert"])(advert);
    } else {
      Object(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_2__["loadAdvert"])(advert);
    }
  }
};

var onIntersect = function onIntersect(entries, observer) {
  var advertIds = [];
  entries.filter(function (entry) {
    return !('isIntersecting' in entry) || entry.isIntersecting;
  }).forEach(function (entry) {
    observer.unobserve(entry.target);
    displayAd(entry.target.id);
    advertIds.push(entry.target.id);
  });
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].advertsToLoad = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_1__["dfpEnv"].advertsToLoad.filter(function (advert) {
    return advertIds.indexOf(advert.id) < 0;
  });
};

var getObserver = lodash_once__WEBPACK_IMPORTED_MODULE_4___default()(function () {
  return Promise.resolve(new window.IntersectionObserver(onIntersect, {
    rootMargin: '200px 0px'
  }));
});
var enableLazyLoad = function enableLazyLoad(advert) {
  return getObserver().then(function (observer) {
    return observer.observe(advert.node);
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js ***!
  \*******************************************************************************/
/*! exports provided: loadAdvert, refreshAdvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadAdvert", function() { return loadAdvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refreshAdvert", function() { return refreshAdvert; });
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_prebid_prebid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/prebid/prebid */ "./static/src/javascripts/projects/commercial/modules/prebid/prebid.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");



var loadAdvert = function loadAdvert(advert) {
  advert.whenSlotReady.catch(function () {// The display needs to be called, even in the event of an error.
  }).then(function () {
    advert.startLoading();

    if (lib_config__WEBPACK_IMPORTED_MODULE_2__["default"].page.hasPageSkin) {
      // No point requesting prebid bids. pageSkin slots are all loaded in one
      // go. See 'fillAdvertSlots' in commercial/modules/dfp/fill-advert-slots.js
      return Promise.resolve();
    }

    return commercial_modules_prebid_prebid__WEBPACK_IMPORTED_MODULE_1__["prebid"].requestBids(advert);
  }).then(function () {
    return window.googletag.display(advert.id);
  });
};
var refreshAdvert = function refreshAdvert(advert) {
  // advert.size contains the effective size being displayed prior to refreshing
  advert.whenSlotReady.then(function () {
    return commercial_modules_prebid_prebid__WEBPACK_IMPORTED_MODULE_1__["prebid"].requestBids(advert, function (prebidSlot) {
      // We only fiddle with top-above-nav prebidSlot(s)
      if (prebidSlot.key !== 'top-above-nav') {
        return [prebidSlot];
      } // For top-above-nav slots, we force the refreshed
      // to be the same size as the first display


      if (prebidSlot.sizes.length === 1) {
        // No point forcing a size, as there is already only one
        // possible (mobile/tablet). See prebid/slot-config.js
        return [prebidSlot];
      } // Prebid slots only support array sizes (no string literals).


      if (Array.isArray(advert.size)) {
        return [Object.assign({}, prebidSlot, {
          sizes: [[advert.size[0], advert.size[1]]]
        })];
      } // No point having this prebidSlot, as advert.size is not an array


      return [];
    });
  }).then(function () {
    advert.slot.setTargeting('refreshed', 'true');

    if (advert.id === 'dfp-ad--top-above-nav') {
      // force the slot sizes to be the same as advert.size (current)
      // only when advert.size is an array (forget 'fluid' and other specials)
      if (Array.isArray(advert.size)) {
        advert.slot.defineSizeMapping([[[0, 0], [advert.size]]]);
      }
    }

    window.googletag.pubads().refresh([advert.slot]);
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-load.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/on-slot-load.js ***!
  \********************************************************************************/
/*! exports provided: onSlotLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onSlotLoad", function() { return onSlotLoad; });
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var commercial_modules_messenger_post_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/messenger/post-message */ "./static/src/javascripts/projects/commercial/modules/messenger/post-message.js");



var host = "".concat(window.location.protocol, "//").concat(window.location.host);
/* This is for native ads. We send two pieces of information:
   - the ID of the iframe into which this ad is embedded. This is currently
     the only way to link an incoming message to the iframe it is "coming from"
   - the HOST of the parent frame. Again, inside the embedded document there is
     no way to know if we are running the site in production, dev or local mode.
     But, this information is necessary in the window.postMessage call, and so
     we resort to sending it as a token of welcome :)
*/

var onSlotLoad = function onSlotLoad(event) {
  var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_1__["getAdvertById"])(event.slot.getSlotElementId());

  if (!advert) {
    return;
  }

  var iframe = advert.node.getElementsByTagName('iframe')[0];
  Object(commercial_modules_messenger_post_message__WEBPACK_IMPORTED_MODULE_2__["postMessage"])({
    id: iframe.id,
    host: host
  }, iframe.contentWindow);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-render.js":
/*!**********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/on-slot-render.js ***!
  \**********************************************************************************/
/*! exports provided: onSlotRender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onSlotRender", function() { return onSlotRender; });
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var common_modules_analytics_beacon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/analytics/beacon */ "./static/src/javascripts/projects/common/modules/analytics/beacon.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_render_advert__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/render-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/render-advert.js");
/* harmony import */ var commercial_modules_dfp_empty_advert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/dfp/empty-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/empty-advert.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");










var recordFirstAdRendered = lodash_once__WEBPACK_IMPORTED_MODULE_0___default()(function () {
  Object(common_modules_analytics_beacon__WEBPACK_IMPORTED_MODULE_3__["fire"])('/count/ad-render.gif');
});

var reportEmptyResponse = function reportEmptyResponse(adSlotId, event) {
  // This empty slot could be caused by a targeting problem,
  // let's report these and diagnose the problem in sentry.
  // Keep the sample rate low, otherwise we'll get rate-limited (report-error will also sample down)
  if (Math.random() < 0.0001) {
    var adUnitPath = event.slot.getAdUnitPath();
    var adTargetingKeys = event.slot.getTargetingKeys();
    var adTargetingKValues = adTargetingKeys.includes('k') ? event.slot.getTargeting('k') : [];
    var adKeywords = adTargetingKValues ? adTargetingKValues.join(', ') : '';
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_2__["default"])(new Error('dfp returned an empty ad response'), {
      feature: 'commercial',
      adUnit: adUnitPath,
      adSlot: adSlotId,
      adKeywords: adKeywords
    }, false);
  }
};

var onSlotRender = function onSlotRender(event) {
  recordFirstAdRendered();
  var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_8__["getAdvertById"])(event.slot.getSlotElementId());

  if (!advert) {
    return;
  }

  var emitRenderEvents = function emitRenderEvents(isRendered) {
    advert.stopRendering(isRendered);
    lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].emit('modules:commercial:dfp:rendered', event);
  };

  advert.stopLoading(true);
  advert.startRendering();
  advert.isEmpty = event.isEmpty;

  if (event.isEmpty) {
    Object(commercial_modules_dfp_empty_advert__WEBPACK_IMPORTED_MODULE_7__["emptyAdvert"])(advert);
    reportEmptyResponse(advert.id, event);
    emitRenderEvents(false);
  } else {
    advert.size = event.size;

    if (event.creativeId !== undefined) {
      commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__["dfpEnv"].creativeIDs.push(event.creativeId);
    } // Set refresh field based on the outcome of the slot render.


    var sizeString = advert.size && advert.size.toString();
    var isNotFluid = sizeString !== '0,0';
    var isNonRefreshableLineItem = event.lineItemId && lib_config__WEBPACK_IMPORTED_MODULE_9__["default"].get('page.dfpNonRefreshableLineItemIds', []).includes(event.lineItemId);
    advert.shouldRefresh = isNotFluid && !lib_config__WEBPACK_IMPORTED_MODULE_9__["default"].page.hasPageSkin && !isNonRefreshableLineItem;
    Object(commercial_modules_dfp_render_advert__WEBPACK_IMPORTED_MODULE_6__["renderAdvert"])(advert, event).then(emitRenderEvents);
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-viewable.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/on-slot-viewable.js ***!
  \************************************************************************************/
/*! exports provided: onSlotViewableFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onSlotViewableFunction", function() { return onSlotViewableFunction; });
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/lazy-load */ "./static/src/javascripts/projects/commercial/modules/dfp/lazy-load.js");





var setSlotAdRefresh = function setSlotAdRefresh(event) {
  var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_2__["getAdvertById"])(event.slot.getSlotElementId());
  var viewabilityThresholdMs = 30000; // 30 seconds refresh

  if (advert && advert.shouldRefresh) {
    var onDocumentVisible = function onDocumentVisible() {
      if (!document.hidden) {
        document.removeEventListener('visibilitychange', onDocumentVisible);
        Object(commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_3__["enableLazyLoad"])(advert);
      }
    };

    setTimeout(function () {
      // During the elapsed time, a 'disable-refresh' message may have been posted.
      // Check the flag again.
      if (!advert.shouldRefresh) {
        return;
      }

      if (document.hidden) {
        document.addEventListener('visibilitychange', onDocumentVisible);
      } else {
        Object(commercial_modules_dfp_lazy_load__WEBPACK_IMPORTED_MODULE_3__["enableLazyLoad"])(advert);
      }
    }, viewabilityThresholdMs);
  }
};
/*

  Returns a function to be used as a callback for GTP 'impressionViewable' event

  Uses URL parameters.

 */


var onSlotViewableFunction = function onSlotViewableFunction() {
  var queryParams = Object(lib_url__WEBPACK_IMPORTED_MODULE_0__["getUrlVars"])();

  if (queryParams.adrefresh !== 'false') {
    return setSlotAdRefresh;
  } // Nothing to do. Return an empty callback


  return function () {};
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-visibility-changed.js":
/*!**********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/on-slot-visibility-changed.js ***!
  \**********************************************************************************************/
/*! exports provided: onSlotVisibilityChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onSlotVisibilityChanged", function() { return onSlotVisibilityChanged; });
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");



var onSlotVisibilityChanged = function onSlotVisibilityChanged(event) {
  if (lib_storage__WEBPACK_IMPORTED_MODULE_0__["session"].isAvailable()) {
    var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_2__["getAdvertById"])(event.slot.getSlotElementId());

    if (advert && advert.maxViewPercentage < event.inViewPercentage) {
      // Check the inViewPercentage has crossed the 90% threshold.
      if (advert.maxViewPercentage <= 90 && event.inViewPercentage > 90) {
        var highVisibilitySlots = lib_storage__WEBPACK_IMPORTED_MODULE_0__["session"].get('gu.commercial.slotVisibility') || 0;
        lib_storage__WEBPACK_IMPORTED_MODULE_0__["session"].set('gu.commercial.slotVisibility', highVisibilitySlots + 1);
      }

      advert.maxViewPercentage = event.inViewPercentage;
    }
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/performance-logging.js":
/*!***************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/performance-logging.js ***!
  \***************************************************************************************/
/*! exports provided: setListeners, updateAdvertMetric, addStartTimeBaseline, addEndTimeBaseline, primaryBaseline, addTag, wrap, defer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setListeners", function() { return setListeners; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateAdvertMetric", function() { return updateAdvertMetric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addStartTimeBaseline", function() { return addStartTimeBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addEndTimeBaseline", function() { return addEndTimeBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primaryBaseline", function() { return primaryBaseline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addTag", function() { return addTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_user_timing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/user-timing */ "./static/src/javascripts/lib/user-timing.js");
/* harmony import */ var common_modules_analytics_beacon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/analytics/beacon */ "./static/src/javascripts/projects/common/modules/analytics/beacon.js");
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ophan/ng */ "./node_modules/ophan-tracker-js/build/ophan.ng.js");
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ophan_ng__WEBPACK_IMPORTED_MODULE_4__);





var performanceLog = {
  viewId: 'unknown',
  tags: [],
  modules: [],
  adverts: [],
  baselines: []
};
var primaryBaseline = 'primary'; // moduleStart() and moduleEnd() can be used for measuring modules ad-hoc,
// when they don't align to a baseline.

var moduleStart = function moduleStart(moduleName) {
  var timerStart = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_2__["getCurrentTime"])();
  performanceLog.modules.push({
    name: moduleName,
    start: timerStart
  });
};

var moduleEnd = function moduleEnd(moduleName) {
  var timerEnd = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_2__["getCurrentTime"])();
  var moduleIndex = performanceLog.modules.findIndex(function (module) {
    return module.name === moduleName;
  });

  if (moduleIndex !== -1) {
    var module = performanceLog.modules[moduleIndex];
    module.duration = timerEnd - module.start;
  }
}; // updateAdvertMetric() is called whenever the advert timings need to be updated.
// It may be called multiple times for the same advert, so that we effectively update
// the object with additional timings.


var updateAdvertMetric = function updateAdvertMetric(advert, metricName, metricValue) {
  performanceLog.adverts = performanceLog.adverts.filter(function (element) {
    return advert.id !== element.id;
  });
  advert.timings[metricName] = metricValue;
  performanceLog.adverts.push(Object.freeze(Object.assign({
    id: advert.id,
    isEmpty: advert.isEmpty
  }, advert.timings)));
};

var addStartTimeBaseline = function addStartTimeBaseline(baselineName) {
  performanceLog.baselines.push({
    name: baselineName,
    startTime: Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_2__["getCurrentTime"])()
  });
};

var addEndTimeBaseline = function addEndTimeBaseline(baselineName) {
  performanceLog.baselines.forEach(function (baseline) {
    if (baseline.name === baselineName) {
      baseline.endTime = Object(lib_user_timing__WEBPACK_IMPORTED_MODULE_2__["getCurrentTime"])();
    }
  });
}; // This posts the performance log to the beacon endpoint. It is expected that this be called
// multiple times in a page view, so that partial data is captured, and then topped up as adverts load in.


var reportTrackingData = function reportTrackingData() {
  if (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('tests.commercialClientLoggingVariant')) {
    var performanceReport = {
      viewId: ophan_ng__WEBPACK_IMPORTED_MODULE_4___default.a.viewId,
      tags: performanceLog.tags,
      adverts: performanceLog.adverts,
      baselines: performanceLog.baselines,
      modules: (performanceLog.modules || []).filter(function (module) {
        return !!module.duration;
      })
    };
    Object(common_modules_analytics_beacon__WEBPACK_IMPORTED_MODULE_3__["postJson"])('/commercial-report', JSON.stringify(performanceReport));
  }
};

var reportData = lib_raven__WEBPACK_IMPORTED_MODULE_0__["default"].wrap(reportTrackingData);

var setListeners = function setListeners(googletag) {
  googletag.pubads().addEventListener('slotRenderEnded', reportData);
};

var addTag = function addTag(tag) {
  performanceLog.tags.push(tag);
};

var wrap = function wrap(name, fn) {
  var _ref = [moduleStart.bind(null, name), moduleEnd.bind(null, name)],
      start = _ref[0],
      stop = _ref[1];
  return function () {
    start();

    try {
      var ret = fn.apply(void 0, arguments);

      if (ret instanceof Promise) {
        return ret.then(function (value) {
          stop();
          return value;
        }, function (reason) {
          stop();
          throw reason;
        });
      }

      stop();
      return ret;
    } catch (e) {
      stop();
      throw e;
    }
  };
};

var defer = function defer(name, fn) {
  var _ref2 = [moduleStart.bind(null, name), moduleEnd.bind(null, name)],
      start = _ref2[0],
      stop = _ref2[1];
  return function () {
    try {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var ret = fn.apply(void 0, [start, stop].concat(args)); // Module-initialiser functions using defer are expected to call stop(),
      // but a failed promise could be uncaught, so catch them here and call stop().

      if (ret instanceof Promise) {
        return ret.catch(function (reason) {
          stop();
          throw reason;
        });
      }

      return ret;
    } catch (e) {
      stop();
      throw e;
    }
  };
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/prepare-googletag.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/prepare-googletag.js ***!
  \*************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");
/* harmony import */ var lib_sha1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/sha1 */ "./static/src/javascripts/lib/sha1.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/commercial/ad-prefs.lib */ "./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js");
/* harmony import */ var common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/commercial/build-page-targeting */ "./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_ad_free_slot_remove__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! commercial/modules/ad-free-slot-remove */ "./static/src/javascripts/projects/commercial/modules/ad-free-slot-remove.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_fill_advert_slots__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! commercial/modules/dfp/fill-advert-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/fill-advert-slots.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var commercial_modules_dfp_on_slot_load__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! commercial/modules/dfp/on-slot-load */ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-load.js");
/* harmony import */ var commercial_modules_dfp_on_slot_render__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! commercial/modules/dfp/on-slot-render */ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-render.js");
/* harmony import */ var commercial_modules_dfp_on_slot_viewable__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! commercial/modules/dfp/on-slot-viewable */ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-viewable.js");
/* harmony import */ var commercial_modules_dfp_on_slot_visibility_changed__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! commercial/modules/dfp/on-slot-visibility-changed */ "./static/src/javascripts/projects/commercial/modules/dfp/on-slot-visibility-changed.js");
/* harmony import */ var commercial_modules_dfp_refresh_on_resize__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! commercial/modules/dfp/refresh-on-resize */ "./static/src/javascripts/projects/commercial/modules/dfp/refresh-on-resize.js");
/* harmony import */ var commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! commercial/modules/messenger */ "./static/src/javascripts/projects/commercial/modules/messenger.js");
/* harmony import */ var commercial_modules_messenger_background__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! commercial/modules/messenger/background */ "./static/src/javascripts/projects/commercial/modules/messenger/background.js");
/* harmony import */ var commercial_modules_messenger_click__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! commercial/modules/messenger/click */ "./static/src/javascripts/projects/commercial/modules/messenger/click.js");
/* harmony import */ var commercial_modules_messenger_disable_refresh__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! commercial/modules/messenger/disable-refresh */ "./static/src/javascripts/projects/commercial/modules/messenger/disable-refresh.js");
/* harmony import */ var commercial_modules_messenger_get_page_targeting__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! commercial/modules/messenger/get-page-targeting */ "./static/src/javascripts/projects/commercial/modules/messenger/get-page-targeting.js");
/* harmony import */ var commercial_modules_messenger_get_stylesheet__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! commercial/modules/messenger/get-stylesheet */ "./static/src/javascripts/projects/commercial/modules/messenger/get-stylesheet.js");
/* harmony import */ var commercial_modules_messenger_hide__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! commercial/modules/messenger/hide */ "./static/src/javascripts/projects/commercial/modules/messenger/hide.js");
/* harmony import */ var commercial_modules_messenger_resize__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! commercial/modules/messenger/resize */ "./static/src/javascripts/projects/commercial/modules/messenger/resize.js");
/* harmony import */ var commercial_modules_messenger_scroll__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! commercial/modules/messenger/scroll */ "./static/src/javascripts/projects/commercial/modules/messenger/scroll.js");
/* harmony import */ var commercial_modules_messenger_type__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! commercial/modules/messenger/type */ "./static/src/javascripts/projects/commercial/modules/messenger/type.js");
/* harmony import */ var commercial_modules_messenger_viewport__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! commercial/modules/messenger/viewport */ "./static/src/javascripts/projects/commercial/modules/messenger/viewport.js");






























Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_19__["init"])(commercial_modules_messenger_type__WEBPACK_IMPORTED_MODULE_28__["init"], commercial_modules_messenger_get_stylesheet__WEBPACK_IMPORTED_MODULE_24__["init"], commercial_modules_messenger_get_page_targeting__WEBPACK_IMPORTED_MODULE_23__["init"], commercial_modules_messenger_resize__WEBPACK_IMPORTED_MODULE_26__["init"], commercial_modules_messenger_hide__WEBPACK_IMPORTED_MODULE_25__["init"], commercial_modules_messenger_scroll__WEBPACK_IMPORTED_MODULE_27__["init"], commercial_modules_messenger_viewport__WEBPACK_IMPORTED_MODULE_29__["init"], commercial_modules_messenger_click__WEBPACK_IMPORTED_MODULE_21__["init"], commercial_modules_messenger_background__WEBPACK_IMPORTED_MODULE_20__["init"], commercial_modules_messenger_disable_refresh__WEBPACK_IMPORTED_MODULE_22__["init"]);

var setDfpListeners = function setDfpListeners() {
  var pubads = window.googletag.pubads();
  pubads.addEventListener('slotRenderEnded', lib_raven__WEBPACK_IMPORTED_MODULE_4__["default"].wrap(commercial_modules_dfp_on_slot_render__WEBPACK_IMPORTED_MODULE_15__["onSlotRender"]));
  pubads.addEventListener('slotOnload', lib_raven__WEBPACK_IMPORTED_MODULE_4__["default"].wrap(commercial_modules_dfp_on_slot_load__WEBPACK_IMPORTED_MODULE_14__["onSlotLoad"]));
  pubads.addEventListener('impressionViewable', Object(commercial_modules_dfp_on_slot_viewable__WEBPACK_IMPORTED_MODULE_16__["onSlotViewableFunction"])());
  pubads.addEventListener('slotVisibilityChanged', commercial_modules_dfp_on_slot_visibility_changed__WEBPACK_IMPORTED_MODULE_17__["onSlotVisibilityChanged"]);

  if (lib_storage__WEBPACK_IMPORTED_MODULE_6__["session"].isAvailable()) {
    var pageViews = lib_storage__WEBPACK_IMPORTED_MODULE_6__["session"].get('gu.commercial.pageViews') || 0;
    lib_storage__WEBPACK_IMPORTED_MODULE_6__["session"].set('gu.commercial.pageViews', pageViews + 1);
  }
};

var setPersonalisedAds = function setPersonalisedAds() {
  var wantPersonalisedAds = Object(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_7__["getAdConsentState"])(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_7__["thirdPartyTrackingAdConsent"]);

  switch (wantPersonalisedAds) {
    // personalised ads have been explicitly accepted
    case true:
      window.googletag.pubads().setRequestNonPersonalizedAds(0);
      break;
    // personalised ads have been explicitly rejected

    case false:
      window.googletag.pubads().setRequestNonPersonalizedAds(1);
      break;
    // no preference has been specified

    default:
      window.googletag.pubads();
  }
};

var setPageTargeting = function setPageTargeting() {
  var pubads = window.googletag.pubads(); // because commercialFeatures may export itself as {} in the event of an exception during construction

  var targeting = Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_8__["buildPageTargeting"])();
  Object.keys(targeting).forEach(function (key) {
    pubads.setTargeting(key, targeting[key]);
  });
}; // This is specifically a separate function to close-disabled-slots. One is for
// closing hidden/disabled slots, the other is for graceful recovery when prepare-googletag
// encounters an error. Here, slots are closed unconditionally.


var removeAdSlots = function removeAdSlots() {
  // Get all ad slots
  var adSlots = qwery__WEBPACK_IMPORTED_MODULE_0___default()(commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_11__["dfpEnv"].adSlotSelector);
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    return adSlots.forEach(function (adSlot) {
      return adSlot.remove();
    });
  });
};

var setPublisherProvidedId = function setPublisherProvidedId() {
  var user = Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_13__["getUserFromCookie"])();

  if (user) {
    var hashedId = lib_sha1__WEBPACK_IMPORTED_MODULE_5__["default"].hash(user.id);
    window.googletag.pubads().setPublisherProvidedId(hashedId);
  }
};

var init = function init(start, stop) {
  var setupAdvertising = function setupAdvertising() {
    start(); // note: fillAdvertSlots isn't synchronous like most buffered cmds, it's a promise. It's put in here to ensure
    // it strictly follows preceding prepare-googletag work (and the module itself ensures dependencies are
    // fulfilled), but don't assume fillAdvertSlots is complete when queueing subsequent work using cmd.push

    window.googletag.cmd.push(setDfpListeners, setPersonalisedAds, setPageTargeting, setPublisherProvidedId, commercial_modules_dfp_refresh_on_resize__WEBPACK_IMPORTED_MODULE_18__["refreshOnResize"], function () {
      Object(commercial_modules_dfp_fill_advert_slots__WEBPACK_IMPORTED_MODULE_12__["fillAdvertSlots"])().then(stop);
    }); // Just load googletag. Sonobi's wrapper will already be loaded, and googletag is already added to the window by sonobi.

    return Object(lib_load_script__WEBPACK_IMPORTED_MODULE_3__["loadScript"])(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].libs.googletag, {
      async: false
    });
  };

  if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_9__["commercialFeatures"].dfpAdvertising) {
    // A promise error here, from a failed module load,
    // could be a network problem or an intercepted request.
    // Abandon the init sequence.
    setupAdvertising().then(commercial_modules_ad_free_slot_remove__WEBPACK_IMPORTED_MODULE_10__["adFreeSlotRemove"]).catch(removeAdSlots);
    return Promise.resolve();
  }

  return removeAdSlots().then(stop);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/prepare-sonobi-tag.js":
/*!**************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/prepare-sonobi-tag.js ***!
  \**************************************************************************************/
/*! exports provided: setupSonobi, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupSonobi", function() { return setupSonobi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/build-page-targeting */ "./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var commercial_modules_prebid_prebid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/prebid/prebid */ "./static/src/javascripts/projects/commercial/modules/prebid/prebid.js");






 // Wrap the native implementation of getOwnPropertyNames in a try-catch. If any polyfill attempts
// to re-implement this function, and doesn't consider the "access permissions" issue that exists in IE11,
// then the resulting "Access Denied" error will be caught. Without this, the error is always delivered to Sentry,
// but does not pass through window.onerror. More info here: https://github.com/paulmillr/es6-shim/issues/333

var catchPolyfillErrors = function catchPolyfillErrors() {
  // Skip polyfill error-catch in dev environments.
  if (lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isDev) {
    return;
  }

  var nativeGetOwnPropertyNames = Object.getOwnPropertyNames; // Cast to any to workaround Flow warning:
  // covariant property incompatible with contravariant use in assignment of property.

  Object.getOwnPropertyNames = function (obj) {
    try {
      return nativeGetOwnPropertyNames(obj);
    } catch (e) {
      // continue regardless of error
      return [];
    }
  };
};

var setupSonobi = lodash_once__WEBPACK_IMPORTED_MODULE_5___default()(function () {
  if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__["dfpEnv"].externalDemand === 'none' || !common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_2__["commercialFeatures"].dfpAdvertising || common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_2__["commercialFeatures"].adFree) {
    return Promise.resolve();
  }

  if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__["dfpEnv"].externalDemand === 'sonobi') {
    Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_3__["buildPageTargeting"])(); // Setting the async property to false will _still_ load the script in
    // a non-blocking fashion but will ensure it is executed before googletag

    return Object(lib_load_script__WEBPACK_IMPORTED_MODULE_1__["loadScript"])(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].libs.sonobi, {
      async: false
    }).then(catchPolyfillErrors);
  } else if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_4__["dfpEnv"].externalDemand === 'prebid') {
    Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_3__["buildPageTargeting"])();
    commercial_modules_prebid_prebid__WEBPACK_IMPORTED_MODULE_6__["prebid"].initialise();
  }

  return Promise.resolve();
});

var init = function init(start, stop) {
  start();
  setupSonobi().then(stop);
  return Promise.resolve();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/queue-advert.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/queue-advert.js ***!
  \********************************************************************************/
/*! exports provided: queueAdvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueAdvert", function() { return queueAdvert; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");


var queueAdvert = function queueAdvert(advert) {
  commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToLoad.push(advert); // Add to the array of ads to be refreshed (when the breakpoint changes)
  // only if its `data-refresh` attribute isn't set to false.

  if (advert.node.getAttribute('data-refresh') !== 'false') {
    commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].advertsToRefresh.push(advert);
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/refresh-on-resize.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/refresh-on-resize.js ***!
  \*************************************************************************************/
/*! exports provided: refreshOnResize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refreshOnResize", function() { return refreshOnResize; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_dfp_breakpoint_name_to_attribute__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/breakpoint-name-to-attribute */ "./static/src/javascripts/projects/commercial/modules/dfp/breakpoint-name-to-attribute.js");
/* harmony import */ var commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/load-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/load-advert.js");






/* hasBreakpointChanged: ((string, string) -> undefined) -> undefined. Invokes the callback if a breakpoint has been crossed since last invocation */

var hasBreakpointChanged = Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["hasCrossedBreakpoint"])(true);
/* breakpointNames: array<string>. List of breakpoint names */

var breakpointNames = lib_detect__WEBPACK_IMPORTED_MODULE_1__["breakpoints"].map(function (_) {
  return _.name;
}); // TODO: reset advert flags

var refresh = function refresh(currentBreakpoint, previousBreakpoint) {
  var getBreakpointIndex = function getBreakpointIndex(breakpoint, slotBreakpoints) {
    var validBreakpointNames = breakpointNames.slice(0, breakpointNames.indexOf(breakpoint) + 1).map(commercial_modules_dfp_breakpoint_name_to_attribute__WEBPACK_IMPORTED_MODULE_4__["breakpointNameToAttribute"]);
    return Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(slotBreakpoints.map(function (_) {
      return validBreakpointNames.lastIndexOf(_);
    })));
  };

  var shouldRefresh = function shouldRefresh(advert) {
    // get the slot breakpoints
    var slotBreakpoints = Object.keys(advert.sizes); // find the currently matching breakpoint

    var currentSlotBreakpoint = getBreakpointIndex(currentBreakpoint, slotBreakpoints); // find the previously matching breakpoint

    var previousSlotBreakpoint = getBreakpointIndex(previousBreakpoint, slotBreakpoints);
    return currentSlotBreakpoint !== -1 && currentSlotBreakpoint !== previousSlotBreakpoint;
  }; // only refresh if the slot needs to


  var advertsToRefresh = commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_3__["dfpEnv"].advertsToRefresh.filter(shouldRefresh);
  advertsToRefresh.forEach(commercial_modules_dfp_load_advert__WEBPACK_IMPORTED_MODULE_5__["refreshAdvert"]);
};

var windowResize = function windowResize() {
  // refresh on resize
  hasBreakpointChanged(refresh);
};

var refreshOnResize = function refreshOnResize() {
  lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].on('window:throttledResize', windowResize);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/render-advert-label.js":
/*!***************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/render-advert-label.js ***!
  \***************************************************************************************/
/*! exports provided: renderAdvertLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderAdvertLabel", function() { return renderAdvertLabel; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");


var shouldRenderLabel = function shouldRenderLabel(adSlotNode) {
  return !(adSlotNode.classList.contains('ad-slot--fluid') || adSlotNode.classList.contains('ad-slot--frame') || adSlotNode.classList.contains('ad-slot--gc') || adSlotNode.getAttribute('data-label') === 'false' || adSlotNode.getElementsByClassName('ad-slot__label').length);
};

var renderAdvertLabel = function renderAdvertLabel(adSlotNode) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].read(function () {
    if (shouldRenderLabel(adSlotNode)) {
      var labelDiv = "<div class=\"ad-slot__label\">Advertisement</div>";
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
        adSlotNode.insertAdjacentHTML('afterbegin', labelDiv);
      });
    }
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/render-advert.js":
/*!*********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/render-advert.js ***!
  \*********************************************************************************/
/*! exports provided: renderAdvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderAdvert", function() { return renderAdvert; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/ad-sizes */ "./static/src/javascripts/projects/commercial/modules/ad-sizes.js");
/* harmony import */ var commercial_modules_sticky_mpu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/sticky-mpu */ "./static/src/javascripts/projects/commercial/modules/sticky-mpu.js");
/* harmony import */ var commercial_modules_dfp_apply_creative_template__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/apply-creative-template */ "./static/src/javascripts/projects/commercial/modules/dfp/apply-creative-template.js");
/* harmony import */ var commercial_modules_dfp_render_advert_label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/dfp/render-advert-label */ "./static/src/javascripts/projects/commercial/modules/dfp/render-advert-label.js");
/* harmony import */ var common_modules_onward_geo_most_popular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/onward/geo-most-popular */ "./static/src/javascripts/projects/common/modules/onward/geo-most-popular.js");










/**
 * ADVERT RENDERING
 * ----------------
 *
 * Most adverts come back from DFP ready to display as-is. But sometimes we need more: embedded components that can share
 * Guardian styles, for example, or behaviours like sticky-scrolling. This module helps 'finish' rendering any advert, and
 * decorates them with these behaviours.
 *
 */
var addClassIfHasClass = function addClassIfHasClass(newClassNames) {
  return function hasClass(classNames) {
    return function onAdvertRendered(_, advert) {
      if (classNames.some(function (className) {
        return advert.node.classList.contains(className);
      })) {
        return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
          newClassNames.forEach(function (className) {
            advert.node.classList.add(className);
          });
        });
      }

      return Promise.resolve();
    };
  };
};

var addFluid250 = addClassIfHasClass(['ad-slot--fluid250']);
var addFluid = addClassIfHasClass(['ad-slot--fluid']);

var removeStyleFromAdIframe = function removeStyleFromAdIframe(advert, style) {
  var adIframe = advert.node.querySelector('iframe');
  lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    if (adIframe) {
      adIframe.style.removeProperty(style);
    }
  });
};

var sizeCallbacks = {};
/**
 * DFP fluid ads should use existing fluid-250 styles in the top banner position
 * The vertical-align property found on DFP iframes affects the smoothness of
 * CSS transitions when expanding/collapsing various native style formats.
 */

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].fluid] = function (renderSlotEvent, advert) {
  return addFluid(['ad-slot'])(renderSlotEvent, advert).then(function () {
    return removeStyleFromAdIframe(advert, 'vertical-align');
  });
};
/**
 * Trigger sticky scrolling for MPUs in the right-hand article column
 */


sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].mpu] = function (_, advert) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    if (advert.node.classList.contains('js-sticky-mpu')) {
      if (advert.node.classList.contains('ad-slot--right')) {
        Object(commercial_modules_sticky_mpu__WEBPACK_IMPORTED_MODULE_5__["stickyMpu"])(advert.node);
      }

      if (advert.node.classList.contains('ad-slot--comments')) {
        Object(commercial_modules_sticky_mpu__WEBPACK_IMPORTED_MODULE_5__["stickyCommentsMpu"])(advert.node);
      }
    }

    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      return advert.updateExtraSlotClasses();
    });
  });
};
/**
 * Resolve the stickyMpu.whenRendered promise
 */


sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].halfPage] = function (_, advert) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    if (advert.node.classList.contains('ad-slot--right')) {
      Object(commercial_modules_sticky_mpu__WEBPACK_IMPORTED_MODULE_5__["stickyMpu"])(advert.node);
    }

    if (advert.node.classList.contains('ad-slot--comments')) {
      Object(commercial_modules_sticky_mpu__WEBPACK_IMPORTED_MODULE_5__["stickyCommentsMpu"])(advert.node);
    }

    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      return advert.updateExtraSlotClasses();
    });
  });
};

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].video] = function (_, advert) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    advert.updateExtraSlotClasses('u-h');
  });
};

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].video2] = function (_, advert) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    advert.updateExtraSlotClasses('ad-slot--outstream');
  });
};

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].googleCard] = function (_, advert) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    advert.updateExtraSlotClasses('ad-slot--gc');
  });
};
/**
 * Out of page adverts - creatives that aren't directly shown on the page - need to be hidden,
 * and their containers closed up.
 */


var outOfPageCallback = function outOfPageCallback(event, advert) {
  if (!event.slot.getOutOfPage()) {
    var parent = advert.node.parentNode;
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      advert.node.classList.add('u-h'); // if in a slice, add the 'no mpu' class

      if (parent.classList.contains('fc-slice__item--mpu-candidate')) {
        parent.classList.add('fc-slice__item--no-mpu');
      }
    });
  }

  return Promise.resolve();
};

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].outOfPage] = outOfPageCallback;
sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].empty] = outOfPageCallback;
/**
 * Portrait adverts exclude the locally-most-popular widget
 */

sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].portrait] = function () {
  return (// remove geo most popular
    common_modules_onward_geo_most_popular__WEBPACK_IMPORTED_MODULE_8__["geoMostPopular"].whenRendered.then(function (popular) {
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
        if (popular && popular.elem) {
          popular.elem.remove();
          popular.elem = null;
        }
      });
    })
  );
};
/**
 * Commercial components with merch sizing get fluid-250 styling
 */


sizeCallbacks[commercial_modules_ad_sizes__WEBPACK_IMPORTED_MODULE_4__["adSizes"].merchandising] = addFluid250(['ad-slot--commercial-component']);

var addContentClass = function addContentClass(adSlotNode) {
  var adSlotContent = qwery__WEBPACK_IMPORTED_MODULE_0___default()('> div:not(.ad-slot__label)', adSlotNode);

  if (adSlotContent.length) {
    lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      adSlotContent[0].classList.add('ad-slot__content');
    });
  }
};
/**
 * @param advert - as defined in commercial/modules/dfp/Advert
 * @param slotRenderEndedEvent - GPT slotRenderEndedEvent
 * @returns {Promise} - resolves once all necessary rendering is queued up
 */


var renderAdvert = function renderAdvert(advert, slotRenderEndedEvent) {
  addContentClass(advert.node);
  return Object(commercial_modules_dfp_apply_creative_template__WEBPACK_IMPORTED_MODULE_6__["applyCreativeTemplate"])(advert.node).then(function (isRendered) {
    var callSizeCallback = function callSizeCallback() {
      if (advert.size) {
        var size = advert.size.toString();

        if (size === '0,0') {
          size = 'fluid';
        }

        return Promise.resolve(sizeCallbacks[size] ? sizeCallbacks[size](slotRenderEndedEvent, advert) : lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
          advert.updateExtraSlotClasses();
        }));
      }

      return Promise.resolve(null);
    };

    var addRenderedClass = function addRenderedClass() {
      return isRendered ? lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
        advert.node.classList.add('ad-slot--rendered');
      }) : Promise.resolve();
    };

    return callSizeCallback().then(function () {
      return Object(commercial_modules_dfp_render_advert_label__WEBPACK_IMPORTED_MODULE_7__["renderAdvertLabel"])(advert.node);
    }).then(addRenderedClass).then(function () {
      return isRendered;
    });
  }).catch(lib_raven__WEBPACK_IMPORTED_MODULE_1__["default"].captureException);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js ***!
  \***********************************************************************************/
/*! exports provided: trackAdRender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackAdRender", function() { return trackAdRender; });
/* harmony import */ var commercial_modules_dfp_wait_for_advert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/wait-for-advert */ "./static/src/javascripts/projects/commercial/modules/dfp/wait-for-advert.js");

var trackAdRender = function trackAdRender(id) {
  return Object(commercial_modules_dfp_wait_for_advert__WEBPACK_IMPORTED_MODULE_0__["waitForAdvert"])(id).then(function (_) {
    return _.whenRendered;
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/dfp/wait-for-advert.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/dfp/wait-for-advert.js ***!
  \***********************************************************************************/
/*! exports provided: waitForAdvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "waitForAdvert", function() { return waitForAdvert; });
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");



var waitForAdvert = lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default()(function (id) {
  return new Promise(function (resolve) {
    var checkAdvert = function checkAdvert() {
      var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_1__["getAdvertById"])(id);

      if (!advert) {
        window.setTimeout(checkAdvert, 200);
      } else {
        resolve(advert);
      }
    };

    checkAdvert();
  });
});

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/hide-element.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/hide-element.js ***!
  \****************************************************************************/
/*! exports provided: hideElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideElement", function() { return hideElement; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");

var hideElement = function hideElement(element) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
    return element.classList.add('u-h');
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/high-merch.js":
/*!**************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/high-merch.js ***!
  \**************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/dfp/create-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");




var init = function init() {
  if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_3__["commercialFeatures"].highMerch) {
    var anchorSelector = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.commentable ? '#comments + *' : '.content-footer > :first-child';
    var anchor = document.querySelector(anchorSelector);
    var container = document.createElement('div');
    container.className = 'fc-container fc-container--commercial';
    var slots = Object(commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_2__["createSlots"])(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isPaidContent ? 'high-merch-paid' : 'high-merch');
    slots.forEach(function (slot) {
      container.appendChild(slot);
    });
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
      if (anchor && anchor.parentNode) {
        anchor.parentNode.insertBefore(container, anchor);
      }
    });
  }

  return Promise.resolve();
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/liveblog-adverts.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/liveblog-adverts.js ***!
  \********************************************************************************/
/*! exports provided: init, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/add-slot */ "./static/src/javascripts/projects/commercial/modules/dfp/add-slot.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/create-slots */ "./static/src/javascripts/projects/commercial/modules/dfp/create-slots.js");
/* harmony import */ var common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/article/space-filler */ "./static/src/javascripts/projects/common/modules/article/space-filler.js");







var OFFSET = 1.5; // ratio of the screen height from which ads are loaded

var MAX_ADS = 8; // maximum number of ads to display

var SLOTCOUNTER = 0;
var WINDOWHEIGHT;
var firstSlot;

var startListening = function startListening() {
  // eslint-disable-next-line no-use-before-define
  lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].on('modules:autoupdate:updates', onUpdate);
};

var stopListening = function stopListening() {
  // eslint-disable-next-line no-use-before-define
  lib_mediator__WEBPACK_IMPORTED_MODULE_2__["default"].off('modules:autoupdate:updates', onUpdate);
};

var getWindowHeight = function getWindowHeight() {
  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;

  if (doc.documentElement && doc.documentElement.clientHeight) {
    return doc.documentElement.clientHeight;
  }

  return 0; // #? zero, or throw an error?
};

var getSpaceFillerRules = function getSpaceFillerRules(windowHeight, update) {
  var prevSlot;
  var shouldUpdate = !!update; // Only use a slot if it is double the window height from the previous slot.

  var filterSlot = function filterSlot(slot) {
    if (!prevSlot) {
      prevSlot = slot;
      return !shouldUpdate;
    } else if (Math.abs(slot.top - prevSlot.top) > windowHeight * 2) {
      prevSlot = slot;
      return true;
    }

    return false;
  };

  return {
    bodySelector: '.js-liveblog-body',
    slotSelector: ' > .block',
    fromBottom: shouldUpdate,
    startAt: shouldUpdate ? firstSlot : null,
    absoluteMinAbove: shouldUpdate ? 0 : WINDOWHEIGHT * OFFSET,
    minAbove: 0,
    minBelow: 0,
    clearContentMeta: 0,
    selectors: {},
    filter: filterSlot
  };
};

var getSlotName = function getSlotName(isMobile, slotCounter) {
  if (isMobile && slotCounter === 0) {
    return 'top-above-nav';
  } else if (isMobile) {
    return "inline".concat(slotCounter);
  }

  return "inline".concat(slotCounter + 1);
};

var insertAds = function insertAds(slots) {
  var isMobile = Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["getBreakpoint"])() === 'mobile';

  var _loop = function _loop(i) {
    var slotName = getSlotName(isMobile, SLOTCOUNTER);
    var adSlots = Object(commercial_modules_dfp_create_slots__WEBPACK_IMPORTED_MODULE_5__["createSlots"])('inline', {
      name: slotName,
      classes: 'liveblog-inline'
    });
    adSlots.forEach(function (adSlot) {
      if (slots[i] && slots[i].parentNode) {
        slots[i].parentNode.insertBefore(adSlot, slots[i].nextSibling);
      }
    }); // Only add the first adSlot (the DFP one) in DFP/GTP

    if (slots[i] && slots[i].parentNode) {
      Object(commercial_modules_dfp_add_slot__WEBPACK_IMPORTED_MODULE_3__["addSlot"])(adSlots[0], false);
      SLOTCOUNTER += 1;
    }
  };

  for (var i = 0; i < slots.length && SLOTCOUNTER < MAX_ADS; i += 1) {
    _loop(i);
  }
};

var fill = function fill(rules) {
  return common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_6__["spaceFiller"].fillSpace(rules, insertAds).then(function (result) {
    if (result && SLOTCOUNTER < MAX_ADS) {
      var el = document.querySelector("".concat(rules.bodySelector, " > .ad-slot"));

      if (el && el.previousSibling instanceof HTMLElement) {
        firstSlot = el.previousSibling;
      } else {
        firstSlot = null;
      }

      startListening();
    } else {
      firstSlot = null;
    }
  });
};

var onUpdate = function onUpdate() {
  stopListening();
  Promise.resolve(getSpaceFillerRules(WINDOWHEIGHT, true)).then(fill);
};

var init = function init(start, stop) {
  start();

  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].liveblogAdverts) {
    stop();
    return Promise.resolve();
  }

  lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].read(function () {
    WINDOWHEIGHT = getWindowHeight();
    return WINDOWHEIGHT;
  }).then(getSpaceFillerRules).then(fill).then(stop);
  return Promise.resolve();
};
var _ = {
  getSlotName: getSlotName
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/lotame-data-extract.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/lotame-data-extract.js ***!
  \***********************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
//  strict



var errorHandler = function errorHandler(error) {
  // Lotame fails to load 0.04% of the time. We dont
  // want to pollute our sentry
  console.log('Failed to extract lotame data:', error);
};

var shouldLoadLotame = function shouldLoadLotame() {
  var edition = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.edition');
  return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches.lotame', false) && (edition === 'UK' || edition === 'INT');
}; // Fetches Lotame Data for the Ozone project
// and stores in in window.OzoneLotameData


var init = function init(start) {
  start();

  if (!shouldLoadLotame) {
    return Promise.resolve();
  }

  return Object(lib_load_script__WEBPACK_IMPORTED_MODULE_0__["loadScript"])('//ad.crwdcntrl.net/5/c=13271/pe=y/var=OzoneLotameData').then(function () {
    if ('LOTCC' in window && 'bcp' in window.LOTCC) {
      Promise.resolve(window.LOTCC.bcp());
    } else {
      return Promise.reject(Error('No LOTCC in window'));
    }
  }).catch(errorHandler);
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger.js":
/*!*************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger.js ***!
  \*************************************************************************/
/*! exports provided: register, unregister, init, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "register", function() { return register; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unregister", function() { return unregister; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var commercial_modules_messenger_dfp_origin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! commercial/modules/messenger/dfp-origin */ "./static/src/javascripts/projects/commercial/modules/messenger/dfp-origin.js");
/* harmony import */ var commercial_modules_messenger_post_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! commercial/modules/messenger/post-message */ "./static/src/javascripts/projects/commercial/modules/messenger/post-message.js");



var ALLOWED_HOSTS = [commercial_modules_messenger_dfp_origin__WEBPACK_IMPORTED_MODULE_1__["default"], "".concat(window.location.protocol, "//").concat(window.location.host)];
var LISTENERS = {};
var REGISTERED_LISTENERS = 0;
var error405 = {
  code: 405,
  message: 'Service %% not implemented'
};
var error500 = {
  code: 500,
  message: 'Internal server error\n\n%%'
};

var isProgrammaticMessage = function isProgrammaticMessage(payload) {
  return payload.type === 'set-ad-height' && ('id' in payload.value || 'slotId' in payload.value) && 'height' in payload.value;
};

var toStandardMessage = function toStandardMessage(payload) {
  return {
    id: 'aaaa0000-bb11-cc22-dd33-eeeeee444444',
    type: 'resize',
    iframeId: payload.value.id,
    slotId: payload.value.slotId,
    value: {
      height: +payload.value.height,
      width: +payload.value.width
    }
  };
}; // Incoming messages contain the ID of the iframe into which the
// source window is embedded.


var getIframe = function getIframe(data) {
  if (data.slotId) {
    var container = document.getElementById("dfp-ad--".concat(data.slotId));
    var iframes = container ? container.getElementsByTagName('iframe') : null;
    return iframes && iframes.length ? iframes[0] : null;
  } else if (data.iframeId) {
    return document.getElementById(data.iframeId);
  }
}; // Until DFP provides a way for us to identify with 100% certainty our
// in-house creatives, we are left with doing some basic tests
// such as validating the anatomy of the payload and whitelisting
// event type


var isValidPayload = function isValidPayload(payload) {
  return 'type' in payload && 'value' in payload && 'id' in payload && payload.type in LISTENERS && /^[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}$/.test(payload.id);
}; // Cheap string formatting function. It accepts as its first argument
// an object `{ code, message }`. `message` is a string where successive
// occurences of %% will be replaced by the following arguments. e.g.
// `formatError({ message: "%%, you are so %%" }, "Regis", "lovely")`
// returns `{ message: "Regis, you are so lovely" }`. Oh, thank you!


var formatError = function formatError(error) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return args.reduce(function (e, arg) {
    e.message = e.message.replace('%%', arg);
    return e;
  }, error);
};

var onMessage = function onMessage(event) {
  var data; // We only allow communication with ads created by DFP

  if (ALLOWED_HOSTS.indexOf(event.origin) < 0) {
    return;
  } // #? This try-catch is a good target for splitting out into a seperate function


  try {
    // Even though the postMessage API allows passing objects as-is, the
    // serialisation/deserialisation is slower than using JSON
    // Source: https://bugs.chromium.org/p/chromium/issues/detail?id=536620#c11
    data = JSON.parse(event.data);
  } catch (ex) {
    return;
  } // These legacy messages are converted into bona fide resize messages


  if (isProgrammaticMessage(data)) {
    data = toStandardMessage(data);
  }

  if (!isValidPayload(data)) {
    return;
  }

  var respond = function respond(error, result) {
    Object(commercial_modules_messenger_post_message__WEBPACK_IMPORTED_MODULE_2__["postMessage"])({
      id: data.id,
      error: error,
      result: result
    }, event.source, event.origin);
  };

  if (Array.isArray(LISTENERS[data.type]) && LISTENERS[data.type].length) {
    // Because any listener can have side-effects (by unregistering itself),
    // we run the promise chain on a copy of the `LISTENERS` array.
    // Hat tip @piuccio
    var promise = LISTENERS[data.type].slice() // We offer, but don't impose, the possibility that a listener returns
    // a value that must be sent back to the calling frame. To do this,
    // we pass the cumulated returned value as a second argument to each
    // listener. Notice we don't try some clever way to compose the result
    // value ourselves, this would only make the solution more complex.
    // That means a listener can ignore the cumulated return value and
    // return something else entirely—life is unfair.
    // We don't know what each callack will be made of, we don't want to.
    // And so we wrap each call in a promise chain, in case one drops the
    // occasional fastdom bomb in the middle.
    .reduce(function (func, listener) {
      return func.then(function (ret) {
        var thisRet = listener(data.value, ret, getIframe(data));
        return thisRet === undefined ? ret : thisRet;
      });
    }, Promise.resolve(true));
    return promise.then(function (response) {
      respond(null, response);
    }).catch(function (ex) {
      Object(lib_report_error__WEBPACK_IMPORTED_MODULE_0__["default"])(ex, {
        feature: 'native-ads'
      });
      respond(formatError(error500, ex), null);
    });
  } else if (typeof LISTENERS[data.type] === 'function') {
    // We found a persistent listener, to which we just delegate
    // responsibility to write something. Anything. Really.
    LISTENERS[data.type](respond, data.value, getIframe(data));
  } else {
    // If there is no routine attached to this event type, we just answer
    // with an error code
    respond(formatError(error405, data.type), null);
  }
};

var on = function on(window) {
  window.addEventListener('message', onMessage);
};

var off = function off(window) {
  window.removeEventListener('message', onMessage);
};

var register = function register(type, callback, options) {
  if (REGISTERED_LISTENERS === 0) {
    on(options && options.window || window);
  }
  /* Persistent LISTENERS are exclusive */


  if (options && options.persist) {
    LISTENERS[type] = callback;
    REGISTERED_LISTENERS += 1;
  } else {
    // set LISTENERS[type] to an empty array, if it is currently undefined or null
    LISTENERS[type] = LISTENERS[type] || [];

    if (LISTENERS[type].indexOf(callback) === -1) {
      LISTENERS[type].push(callback);
      REGISTERED_LISTENERS += 1;
    }
  }
};
var unregister = function unregister(type, callback) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (LISTENERS[type] === undefined) {
    throw new Error(formatError(error405, type));
  }

  if (callback === undefined) {
    REGISTERED_LISTENERS -= LISTENERS[type].length;
    LISTENERS[type].length = 0;
  } else if (LISTENERS[type] === callback) {
    LISTENERS[type] = null;
    REGISTERED_LISTENERS -= 1;
  } else {
    var idx = LISTENERS[type].indexOf(callback);

    if (idx > -1) {
      REGISTERED_LISTENERS -= 1;
      LISTENERS[type].splice(idx, 1);
    }
  }

  if (REGISTERED_LISTENERS === 0) {
    off(options.window || window);
  }
};
var init = function init() {
  for (var _len2 = arguments.length, modules = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    modules[_key2] = arguments[_key2];
  }

  modules.forEach(function (moduleInit) {
    return moduleInit(register);
  });
};
var _ = {
  onMessage: onMessage
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/background.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/background.js ***!
  \************************************************************************************/
/*! exports provided: _, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/events */ "./static/src/javascripts/lib/events.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");



var getStylesFromSpec = function getStylesFromSpec(specs) {
  return Object.keys(specs).reduce(function (result, key) {
    if (key !== 'scrollType') {
      result[key] = specs[key];
    } // Flow is love, Flow is Life! DFP has been passing us `backgroundColour`
    // all along, and the setting of this css prop has been silently failing


    if (key === 'backgroundColour') {
      result.backgroundColor = specs[key];
    }

    return result;
  }, {});
};

var setBackground = function setBackground(specs, adSlot) {
  if (!specs || !('backgroundImage' in specs) || !('backgroundRepeat' in specs) || !('backgroundPosition' in specs) || !('scrollType' in specs) || !(adSlot instanceof Element)) {
    return Promise.resolve();
  }

  var specStyles = getStylesFromSpec(specs); // check to see whether the parent div exists already, if so, jut alter the style

  var backgroundParentClass = 'creative__background-parent';
  var backgroundClass = 'creative__background';
  var maybeBackgroundParent = adSlot.getElementsByClassName(backgroundParentClass)[0];
  var maybeBackground = maybeBackgroundParent ? maybeBackgroundParent.getElementsByClassName(backgroundClass)[0] : null;
  var backgroundAlreadyExists = !!(maybeBackgroundParent && maybeBackground);

  var getBackground = function getBackground() {
    if (maybeBackground && maybeBackgroundParent && backgroundAlreadyExists) {
      return Promise.resolve({
        backgroundParent: maybeBackgroundParent,
        background: maybeBackground
      });
    } // Wrap the background image in a DIV for positioning. Also, we give
    // this DIV a background colour if it is provided. This is because
    // if we set the background colour in the creative itself, the background
    // image won't be visible (think z-indexed layers)


    var backgroundParent = document.createElement('div'); // Create an element to hold the background image

    var background = document.createElement('div');
    backgroundParent.appendChild(background);
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
      if (backgroundParent) {
        adSlot.insertBefore(backgroundParent, adSlot.firstChild);
      }
    }).then(function () {
      return {
        backgroundParent: backgroundParent,
        background: background
      };
    });
  };

  var updateStyles = function updateStyles(backgroundParent, background) {
    backgroundParent.className = backgroundParentClass;
    background.className = "".concat(backgroundClass, " creative__background--").concat(specs.scrollType);
    Object.assign(background.style, specStyles);

    if (specs.scrollType === 'fixed') {
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].read(function () {
        if (adSlot instanceof Element) {
          return adSlot.getBoundingClientRect();
        }
      }).then(function (rect) {
        return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].write(function () {
          if (specStyles.backgroundColor) {
            backgroundParent.style.backgroundColor = specStyles.backgroundColor;
          }

          if (rect) {
            background.style.left = "".concat(rect.left, "px");
            background.style.right = "".concat(rect.right, "px");
            background.style.width = "".concat(rect.width, "px");
          }
        });
      }).then(function () {
        return {
          backgroundParent: backgroundParent,
          background: background
        };
      });
    }

    return Promise.resolve({
      backgroundParent: backgroundParent,
      background: background
    });
  };

  var onScroll = function onScroll(backgroundParent, background) {
    lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].read(function () {
      // We update the style in a read batch because the DIV
      // has been promoted to its own layer and is also
      // strictly self-contained. Also, without doing that
      // the animation is extremely jittery.
      var rect = background.getBoundingClientRect();
      var backgroundHeight = rect.height;
      var windowHeight = window.innerHeight; // we should scroll at a rate such that we don't run out of background (when non-repeating)

      var parallaxBackgroundMovement = Math.floor(rect.bottom / (windowHeight + backgroundHeight) * 130); // #? Flow does not currently list backgroundPositionY in
      // CSSStyleDeclaration: https://github.com/facebook/flow/issues/396
      // ...So we have to use a more convoluted hack-around:

      background.style.backgroundPositionY = "".concat(parallaxBackgroundMovement, "%");
    });
  };

  var onIntersect = function onIntersect(entries) {
    entries.filter(function (entry) {
      return entry.isIntersecting;
    }).forEach(function (entry) {
      if (!backgroundAlreadyExists) {
        var backgroundParent = entry.target;
        var background = backgroundParent.firstChild;

        if (background && background instanceof HTMLElement) {
          Object(lib_events__WEBPACK_IMPORTED_MODULE_0__["addEventListener"])(window, 'scroll', function () {
            return onScroll(backgroundParent, background);
          }, {
            passive: true
          });
          onScroll(backgroundParent, background);
        }
      }
    });
  };

  var observer = new IntersectionObserver(onIntersect, {
    rootMargin: '10px'
  });
  return getBackground().then(function (_ref) {
    var backgroundParent = _ref.backgroundParent,
        background = _ref.background;
    return updateStyles(backgroundParent, background);
  }).then(function (_ref2) {
    var backgroundParent = _ref2.backgroundParent;
    return observer.observe(backgroundParent);
  });
};

var init = function init(register) {
  register('background', function (specs, ret, iframe) {
    if (iframe && specs) {
      return setBackground(specs, iframe.closest('.js-ad-slot'));
    }

    return Promise.resolve();
  });
};

var _ = {
  setBackground: setBackground,
  getStylesFromSpec: getStylesFromSpec
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/click.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/click.js ***!
  \*******************************************************************************/
/*! exports provided: init, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/analytics/google */ "./static/src/javascripts/projects/common/modules/analytics/google.js");


var sendClick = function sendClick(adSlot, linkName) {
  Object(common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_0__["trackNativeAdLinkClick"])(adSlot.id, linkName);
};

var init = function init(register) {
  register('click', function (linkName, ret) {
    var iframe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    return sendClick(iframe.closest('.js-ad-slot') || {
      id: 'unknown'
    }, linkName || '');
  });
};


var _ = {
  sendClick: sendClick
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/dfp-origin.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/dfp-origin.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// this HAS to be a default export; the scripts from DFP expect it to be there

/* eslint-disable guardian-frontend/no-default-export */
/* harmony default export */ __webpack_exports__["default"] = ("".concat(window.location.protocol, "//tpc.googlesyndication.com"));

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/disable-refresh.js":
/*!*****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/disable-refresh.js ***!
  \*****************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");


// This message is intended to be used with a DFP creative wrapper.
// For reference, the wrapper will post a message, with an iFrameId, like so:

/*
<script>
self.addEventListener('message', function onMessage(evt) {
    var json;
    try {
        json = JSON.parse(evt.data);
    } catch(_) { return; }

    var keys = Object.keys(json);
    if( keys.length < 2 || !keys.includes('id') || !keys.includes('host') ) return;

    window.parent.postMessage(JSON.stringify({
        type: 'disable-refresh',
        value: {},
        iframeId: json.id,
        id: 'aaaa0000-bb11-cc22-dd33-eeeeee444444'
    }), '*');

    self.removeEventListener('message', onMessage);
});
</script>
*/
var findAdvert = function findAdvert(adSlot) {
  return commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_0__["dfpEnv"].adverts.find(function (advert) {
    return advert.node.isSameNode(adSlot);
  });
};

var init = function init(register) {
  register('disable-refresh', function (specs, ret, iframe) {
    if (iframe) {
      var adSlot = iframe.closest('.js-ad-slot');

      if (adSlot instanceof HTMLElement) {
        var advert = findAdvert(adSlot);

        if (advert) {
          advert.shouldRefresh = false;
        }
      }
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/get-page-targeting.js":
/*!********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/get-page-targeting.js ***!
  \********************************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var init = function init(register) {
  register('get-page-targeting', function () {
    return lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.sharedAdTargeting');
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/get-stylesheet.js":
/*!****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/get-stylesheet.js ***!
  \****************************************************************************************/
/*! exports provided: _, init, getStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStyles", function() { return getStyles; });
var getStyles = function getStyles(specs, styleSheets) {
  if (!specs || typeof specs.selector !== 'string') {
    return null;
  }

  var result = [];

  for (var i = 0; i < styleSheets.length; i += 1) {
    var sheet = styleSheets[i];
    var ownerNode = sheet.ownerNode;

    if (ownerNode && ownerNode.matches && ownerNode.matches(specs.selector)) {
      if (ownerNode.tagName === 'STYLE') {
        result.push(ownerNode.textContent);
      } else {
        result.push(Array.prototype.reduce.call(sheet.cssRules || [], function (res, input) {
          return res + input.cssText;
        }, ''));
      }
    }
  }

  return result;
};

var init = function init(register) {
  register('get-styles', function (specs) {
    if (specs) {
      return getStyles(specs, document.styleSheets);
    }
  });
};

var _ = {
  getStyles: getStyles
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/hide.js":
/*!******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/hide.js ***!
  \******************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var commercial_modules_hide_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/hide-element */ "./static/src/javascripts/projects/commercial/modules/hide-element.js");


var init = function init(register) {
  register('hide', function (specs, ret, iframe) {
    if (iframe) {
      var adSlot = iframe.closest('.js-ad-slot');

      if (adSlot) {
        return Object(commercial_modules_hide_element__WEBPACK_IMPORTED_MODULE_0__["hideElement"])(adSlot);
      }
    }
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/post-message.js":
/*!**************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/post-message.js ***!
  \**************************************************************************************/
/*! exports provided: postMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postMessage", function() { return postMessage; });
/* harmony import */ var commercial_modules_messenger_dfp_origin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/messenger/dfp-origin */ "./static/src/javascripts/projects/commercial/modules/messenger/dfp-origin.js");

var postMessage = function postMessage(message, targetWindow, targetOrigin) {
  targetWindow.postMessage(JSON.stringify(message), targetOrigin || commercial_modules_messenger_dfp_origin__WEBPACK_IMPORTED_MODULE_0__["default"]);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/resize.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/resize.js ***!
  \********************************************************************************/
/*! exports provided: _, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");


var normalise = function normalise(length) {
  var lengthRegexp = /^(\d+)(%|px|em|ex|ch|rem|vh|vw|vmin|vmax)?/;
  var defaultUnit = 'px';
  var matches = String(length).match(lengthRegexp);

  if (!matches) {
    return '';
  }

  return matches[1] + (matches[2] === undefined ? defaultUnit : matches[2]);
};

var resize = function resize(specs, iframe, iframeContainer, adSlot) {
  if (!specs || !('height' in specs || 'width' in specs) || !iframe || !adSlot) {
    return null;
  }

  var styles = {};

  if (specs.width) {
    styles.width = normalise(specs.width);
  }

  if (specs.height) {
    styles.height = normalise(specs.height);
  }

  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
    Object.assign(adSlot.style, styles);
    Object.assign(iframe.style, styles);

    if (iframeContainer) {
      Object.assign(iframeContainer.style, styles);
    }
  });
};

var init = function init(register) {
  register('resize', function (specs, ret, iframe) {
    if (iframe && specs) {
      var adSlot = iframe && iframe.closest('.js-ad-slot');
      var iframeContainer = iframe && iframe.closest('.ad-slot__content');
      return resize(specs, iframe, iframeContainer, adSlot);
    }
  });
};

var _ = {
  resize: resize,
  normalise: normalise
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/scroll.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/scroll.js ***!
  \********************************************************************************/
/*! exports provided: _, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/events */ "./static/src/javascripts/lib/events.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");



// An intersection observer will allow us to efficiently send slot
// coordinates for only those that are in the viewport.
var w = window;
var useIO = 'IntersectionObserver' in w;
var taskQueued = false;
var iframes = {};
var iframeCounter = 0;
var observer;
var visibleIframeIds;

var reset = function reset(useIO_) {
  useIO = useIO_;
  taskQueued = false;
  iframes = {};
  iframeCounter = 0;
};

// Instances of classes bound to the current view are not serialised correctly
// by JSON.stringify. That's ok, we don't care if it's a DOMRect or some other
// object, as long as the calling view receives the frame coordinates.
var domRectToRect = function domRectToRect(rect) {
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    bottom: rect.bottom,
    left: rect.left,
    right: rect.right
  };
};

var sendCoordinates = function sendCoordinates(iframeId, domRect) {
  iframes[iframeId].respond(null, domRectToRect(domRect));
};

var getDimensions = function getDimensions(id) {
  return [id, iframes[id].node.getBoundingClientRect()];
};

var isIframeInViewport = function isIframeInViewport(item) {
  return item[1].bottom > 0 && item[1].top < this.height;
};

var onIntersect = function onIntersect(changes) {
  visibleIframeIds = changes.filter(function (_) {
    return _.intersectionRatio > 0;
  }).map(function (_) {
    return _.target.id;
  });
};

var onScroll = function onScroll() {
  if (!taskQueued) {
    var viewport = Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["getViewport"])();
    taskQueued = true;
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
      taskQueued = false;
      var iframeIds = Object.keys(iframes);

      if (useIO) {
        visibleIframeIds.map(getDimensions).forEach(function (data) {
          sendCoordinates(data[0], data[1]);
        });
      } else {
        iframeIds.map(getDimensions).filter(isIframeInViewport, viewport).forEach(function (data) {
          sendCoordinates(data[0], data[1]);
        });
      }
    });
  }
};

var addScrollListener = function addScrollListener(iframe, respond) {
  if (iframeCounter === 0) {
    Object(lib_events__WEBPACK_IMPORTED_MODULE_0__["addEventListener"])(w, 'scroll', onScroll, {
      passive: true
    });

    if (useIO) {
      observer = new w.IntersectionObserver(onIntersect);
    }
  }

  iframes[iframe.id] = {
    node: iframe,
    // When using IOs, a slot is hidden by default. When the IO starts
    // observing it, the onIntersect callback will be triggered if it
    // is already in the viewport
    visible: !useIO,
    respond: respond
  };
  iframeCounter += 1;

  if (useIO && observer) {
    observer.observe(iframe);
  }

  lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    return iframe.getBoundingClientRect();
  }).then(function (domRect) {
    sendCoordinates(iframe.id, domRect);
  });
};

var removeScrollListener = function removeScrollListener(iframe) {
  if (iframes[iframe.id]) {
    if (useIO && observer) {
      observer.unobserve(iframe);
    }

    iframes[iframe.id] = false;
    iframeCounter -= 1;
  }

  if (iframeCounter === 0) {
    w.removeEventListener('scroll', onScroll);

    if (useIO && observer) {
      observer.disconnect();
      observer = null;
    }
  }
};

var onMessage = function onMessage(respond, start, iframe) {
  if (!iframe) return;

  if (start) {
    addScrollListener(iframe, respond);
  } else {
    removeScrollListener(iframe);
  }
};

var init = function init(register) {
  register('scroll', onMessage, {
    persist: true
  });
};

var _ = {
  addScrollListener: addScrollListener,
  removeScrollListener: removeScrollListener,
  reset: reset,
  onMessage: onMessage
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/type.js":
/*!******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/type.js ***!
  \******************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");


var setType = function setType(type, adSlot) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].write(function () {
    adSlot.classList.add("ad-slot--".concat(type || ''));
  });
};

var init = function init(register) {
  register('type', function (specs, ret, iframe) {
    return setType(specs, iframe && iframe.closest('.js-ad-slot'));
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/messenger/viewport.js":
/*!**********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/messenger/viewport.js ***!
  \**********************************************************************************/
/*! exports provided: _, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");


var w = window;
var iframes = {};
var iframeCounter = 0;
var taskQueued = false;

var lastViewportRead = function lastViewportRead() {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_1__["default"].read(function () {
    return Object(lib_detect__WEBPACK_IMPORTED_MODULE_0__["getViewport"])();
  });
};

var reset = function reset(window_) {
  w = window_ || window;
  taskQueued = false;
  iframes = {};
  iframeCounter = 0;
};

var sendViewportDimensions = function sendViewportDimensions(iframeId, viewport) {
  if (iframes[iframeId] && iframes[iframeId].respond) {
    iframes[iframeId].respond(null, viewport);
  }
};

var onResize = function onResize() {
  if (!taskQueued) {
    taskQueued = true;
    return lastViewportRead().then(function (viewport) {
      Object.keys(iframes).forEach(function (iframeId) {
        sendViewportDimensions(iframeId, viewport);
      });
      taskQueued = false;
    });
  }
};

var addResizeListener = function addResizeListener(iframe, respond) {
  if (iframeCounter === 0) {
    w.addEventListener('resize', onResize);
  }

  iframes[iframe.id] = {
    node: iframe,
    respond: respond
  };
  iframeCounter += 1;
  return lastViewportRead().then(function (viewport) {
    sendViewportDimensions(iframe.id, viewport);
  });
};

var removeResizeListener = function removeResizeListener(iframe) {
  if (iframes[iframe.id]) {
    iframes[iframe.id] = false;
    iframeCounter -= 1;
  }

  if (iframeCounter === 0) {
    w.removeEventListener('resize', onResize);
  }
};

var onMessage = function onMessage(respond, start, iframe) {
  if (!iframe) return;

  if (start) {
    addResizeListener(iframe, respond);
  } else {
    removeResizeListener(iframe);
  }
};

var init = function init(register) {
  register('viewport', onMessage, {
    persist: true
  });
};

var _ = {
  addResizeListener: addResizeListener,
  removeResizeListener: removeResizeListener,
  reset: reset,
  onMessage: onMessage
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/paid-containers.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/paid-containers.js ***!
  \*******************************************************************************/
/*! exports provided: paidContainers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paidContainers", function() { return paidContainers; });
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_2__);




var onKeyPress = function onKeyPress(handler) {
  return function (event) {
    if (event.keyCode === 0x20 || event.keyCode === 0x0d) {
      handler(event);
    }
  };
};

var onOpenClick = function onOpenClick(event) {
  var summary = event.currentTarget;
  var details = summary.parentNode;
  var label = summary.querySelector('.js-button__label');

  if (details.hasAttribute('open')) {
    fastdom__WEBPACK_IMPORTED_MODULE_2___default.a.write(function () {
      label.textContent = "More ".concat(summary.getAttribute('data-text'));
    });
  } else {
    fastdom__WEBPACK_IMPORTED_MODULE_2___default.a.write(function () {
      label.textContent = 'Less';
    });
  }
};

var paidContainers = function paidContainers() {
  var showMores = qwery__WEBPACK_IMPORTED_MODULE_0___default()('.dumathoin-more > summary');
  bean__WEBPACK_IMPORTED_MODULE_1___default.a.on(document, 'click', showMores, onOpenClick);
  bean__WEBPACK_IMPORTED_MODULE_1___default.a.on(document, 'click', showMores, onKeyPress(onOpenClick));
  return Promise.resolve();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/paidfor-band.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/paidfor-band.js ***!
  \****************************************************************************/
/*! exports provided: init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var common_modules_ui_sticky__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/ui/sticky */ "./static/src/javascripts/projects/common/modules/ui/sticky.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");


var init = function init() {
  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_1__["commercialFeatures"].paidforBand) {
    return Promise.resolve(false);
  }

  var elem = document.querySelector('.paidfor-band');

  if (elem) {
    new common_modules_ui_sticky__WEBPACK_IMPORTED_MODULE_0__["Sticky"](elem).init();
  }

  return Promise.resolve(true);
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/appnexus.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/appnexus.js ***!
  \*******************************************************************************/
/*! exports provided: getAppNexusPlacementId, getAppNexusDirectPlacementId, getAppNexusDirectBidParams, getAppNexusServerSideBidParams, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAppNexusPlacementId", function() { return getAppNexusPlacementId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAppNexusDirectPlacementId", function() { return getAppNexusDirectPlacementId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAppNexusDirectBidParams", function() { return getAppNexusDirectBidParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAppNexusServerSideBidParams", function() { return getAppNexusServerSideBidParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/build-page-targeting */ "./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js");

//  strict




var getAppNexusInvCode = function getAppNexusInvCode(sizes) {
  var device = Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getBreakpointKey"])() === 'M' ? 'M' : 'D'; // section is optional and makes it through to the config object as an empty string... OTL

  var sectionName = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.section', '') || lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.sectionName', '').replace(/ /g, '-');
  var slotSize = Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getLargestSize"])(sizes);

  if (slotSize) {
    return "".concat(device).concat(sectionName.toLowerCase()).concat(slotSize.join('x'));
  }
};

var getAppNexusPlacementId = function getAppNexusPlacementId(sizes) {
  var defaultPlacementId = '13915593';

  if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["isInUsRegion"])() || Object(_utils__WEBPACK_IMPORTED_MODULE_3__["isInAuRegion"])()) {
    return defaultPlacementId;
  }

  switch (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getBreakpointKey"])()) {
    case 'D':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpuOrDmpu"])(sizes)) {
        return '13366606';
      }

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsLeaderboardOrBillboard"])(sizes)) {
        return '13366615';
      }

      return defaultPlacementId;

    case 'M':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpu"])(sizes)) {
        return '13366904';
      }

      return defaultPlacementId;

    case 'T':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpu"])(sizes)) {
        return '13366913';
      }

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsLeaderboard"])(sizes)) {
        return '13366916';
      }

      return defaultPlacementId;

    default:
      return defaultPlacementId;
  }
};
var getAppNexusDirectPlacementId = function getAppNexusDirectPlacementId(sizes, isAuRegion) {
  if (isAuRegion) {
    return '11016434';
  }

  var defaultPlacementId = '9251752';

  switch (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["getBreakpointKey"])()) {
    case 'D':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpuOrDmpu"])(sizes)) {
        return '9251752';
      }

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsLeaderboardOrBillboard"])(sizes)) {
        return '9926678';
      }

      return defaultPlacementId;

    case 'M':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpu"])(sizes)) {
        return '4298191';
      }

      return defaultPlacementId;

    case 'T':
      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsMpu"])(sizes)) {
        return '4371641';
      }

      if (Object(_utils__WEBPACK_IMPORTED_MODULE_3__["containsLeaderboard"])(sizes)) {
        return '4371640';
      }

      return defaultPlacementId;

    default:
      return defaultPlacementId;
  }
};
var getAppNexusDirectBidParams = function getAppNexusDirectBidParams(sizes, isAuRegion) {
  if (isAuRegion && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches.prebidAppnexusInvcode')) {
    var invCode = getAppNexusInvCode(sizes); // flowlint sketchy-null-string:warn

    if (invCode) {
      return {
        invCode: invCode,
        member: '7012',
        keywords: _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({
          invc: [invCode]
        }, Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildPageTargeting"])()))
      };
    }
  }

  return {
    placementId: getAppNexusDirectPlacementId(sizes, isAuRegion),
    keywords: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildPageTargeting"])())
  };
};
var getAppNexusServerSideBidParams = function getAppNexusServerSideBidParams(sizes) {
  return Object.assign({}, {
    placementId: getAppNexusPlacementId(sizes),
    keywords: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_2__["buildPageTargeting"])()) // Ok to duplicate call. Lodash 'once' is used.

  }, window.OzoneLotameData ? {
    lotame: window.OzoneLotameData
  } : {});
};
var _ = {
  getAppNexusPlacementId: getAppNexusPlacementId,
  getAppNexusInvCode: getAppNexusInvCode,
  getAppNexusDirectPlacementId: getAppNexusDirectPlacementId
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/bid-config.js":
/*!*********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/bid-config.js ***!
  \*********************************************************************************/
/*! exports provided: bids, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bids", function() { return bids; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEmpty */ "./node_modules/lodash/isEmpty.js");
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/build-page-targeting */ "./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js");
/* harmony import */ var common_modules_experiments_tests_commercial_prebid_safeframe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/experiments/tests/commercial-prebid-safeframe */ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-prebid-safeframe.js");
/* harmony import */ var common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/experiments/utils */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js");
/* harmony import */ var _appnexus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./appnexus */ "./static/src/javascripts/projects/commercial/modules/prebid/appnexus.js");

//  strict









var isInSafeframeTestVariant = function isInSafeframeTestVariant() {
  var variant = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_6__["getVariant"])(common_modules_experiments_tests_commercial_prebid_safeframe__WEBPACK_IMPORTED_MODULE_5__["commercialPrebidSafeframe"], 'variant');
  return variant ? Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_6__["isInVariant"])(common_modules_experiments_tests_commercial_prebid_safeframe__WEBPACK_IMPORTED_MODULE_5__["commercialPrebidSafeframe"], variant) : false;
};

var isDesktopAndArticle = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])() === 'D' && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.contentType') === 'Article';

var getTrustXAdUnitId = function getTrustXAdUnitId(slotId, isDesktopArticle) {
  switch (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["stripMobileSuffix"])(slotId)) {
    case 'dfp-ad--inline1':
      return '2960';

    case 'dfp-ad--inline2':
      if (isDesktopArticle) return '3826';
      return '3827';

    case 'dfp-ad--inline3':
      if (isDesktopArticle) return '3828';
      return '3829';

    case 'dfp-ad--inline4':
      if (isDesktopArticle) return '3830';
      return '3831';

    case 'dfp-ad--inline5':
      if (isDesktopArticle) return '3832';
      return '3833';

    case 'dfp-ad--inline6':
      if (isDesktopArticle) return '3834';
      return '3835';

    case 'dfp-ad--inline7':
      if (isDesktopArticle) return '3836';
      return '3837';

    case 'dfp-ad--inline8':
      if (isDesktopArticle) return '3838';
      return '3839';

    case 'dfp-ad--inline9':
      if (isDesktopArticle) return '3840';
      return '3841';

    case 'dfp-ad--mostpop':
      return '2961';

    case 'dfp-ad--right':
      return '2962';

    case 'dfp-ad--top-above-nav':
      return '2963';

    case 'dfp-ad--comments':
      return '3840';

    default:
      // for inline10 and onwards just use same IDs as inline9
      if (slotId.startsWith('dfp-ad--inline')) {
        if (isDesktopArticle) return '3840';
        return '3841';
      } // eslint-disable-next-line no-console


      console.log("PREBID: Failed to get TrustX ad unit for slot ".concat(slotId, "."));
      return '';
  }
};

var getIndexSiteId = function getIndexSiteId() {
  if (isInSafeframeTestVariant()) {
    switch (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])()) {
      case 'D':
        return '287246';

      case 'T':
        return '287247';

      case 'M':
        return '287248';

      default:
        return '-1';
    }
  } else {
    var site = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.pbIndexSites', []).find(function (s) {
      return s.bp === Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])();
    });
    return site && site.id ? site.id.toString() : '';
  }
};

var getImprovePlacementId = function getImprovePlacementId(sizes) {
  if (isInSafeframeTestVariant()) {
    switch (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])()) {
      case 'D':
        if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsDmpu"])(sizes)) {
          return 1116408;
        }

        if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpu"])(sizes)) {
          return 1116407;
        }

        if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) {
          return 1116409;
        }

        return -1;

      case 'T':
        if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpu"])(sizes)) {
          return 1116410;
        }

        if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboard"])(sizes)) {
          return 1116411;
        }

        return -1;

      case 'M':
        return 1116412;

      default:
        return -1;
    }
  } else {
    switch (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.edition')) {
      case 'UK':
        switch (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])()) {
          case 'D':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116396;
            }

            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) {
              return 1116397;
            }

            return -1;

          case 'M':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116400;
            }

            return -1;

          case 'T':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116398;
            }

            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) {
              return 1116399;
            }

            return -1;

          default:
            return -1;
        }

      case 'INT':
        switch (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])()) {
          case 'D':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116420;
            }

            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) {
              return 1116421;
            }

            return -1;

          case 'M':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116424;
            }

            return -1;

          case 'T':
            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) {
              return 1116422;
            }

            if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) {
              return 1116423;
            }

            return -1;

          default:
            return -1;
        }

      default:
        return -1;
    }
  }
}; // Improve has to have single size as parameter if slot doesn't accept multiple sizes,
// because it uses same placement ID for multiple slot sizes and has no other size information


var getImproveSizeParam = function getImproveSizeParam(slotId) {
  var key = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["stripTrailingNumbersAbove1"])(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["stripMobileSuffix"])(slotId));
  return key && (key.endsWith('mostpop') || key.endsWith('comments') || key.endsWith('inline1') || key.endsWith('inline') && !isDesktopAndArticle) ? {
    w: 300,
    h: 250
  } : {};
};

var getXaxisPlacementId = function getXaxisPlacementId(sizes) {
  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsDmpu"])(sizes)) return 13663297;
  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpu"])(sizes)) return 13663304;
  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsBillboard"])(sizes)) return 13663284;
  return 13663304;
};

var getPangaeaPlacementId = function getPangaeaPlacementId(sizes) {
  var pangaeaList = [{
    sections: ['business'],
    lb: 13892359,
    mmpu: 13892404,
    dmpu: 13892360
  }, {
    sections: ['culture'],
    lb: 13892361,
    mmpu: 13892405,
    dmpu: 13892362
  }, {
    sections: ['uk', 'us', 'au'],
    lb: 13892363,
    mmpu: 13892406,
    dmpu: 13892364
  }, {
    sections: ['news'],
    lb: 13892365,
    mmpu: 13892407,
    dmpu: 13892366
  }, {
    sections: ['money'],
    lb: 13892367,
    mmpu: 13892408,
    dmpu: 13892368
  }, {
    sections: ['sport'],
    lb: 13892372,
    mmpu: 13892410,
    dmpu: 13892373
  }, {
    sections: ['lifeandstyle', 'fashion'],
    lb: 13892411,
    mmpu: 13892436,
    dmpu: 13892437
  }, {
    sections: ['technology', 'environment'],
    lb: 13892376,
    mmpu: 13892414,
    dmpu: 13892377
  }, {
    sections: ['travel'],
    lb: 13892378,
    mmpu: 13892415,
    dmpu: 13892379
  }];
  var section = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.section', '').toLowerCase();
  var placementIdsForSection = pangaeaList.find(function (_ref) {
    var sections = _ref.sections;
    return sections.includes(section);
  }) || {
    sections: ['other'],
    lb: 13892369,
    mmpu: 13892409,
    dmpu: 13892370
  };
  var breakpointKey = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getBreakpointKey"])(); // Mobile MPU

  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpu"])(sizes) && breakpointKey === 'M') return placementIdsForSection.mmpu; // Double/Single MPU

  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsMpuOrDmpu"])(sizes)) return placementIdsForSection.dmpu; // Leaderboard/Billboard

  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["containsLeaderboardOrBillboard"])(sizes)) return placementIdsForSection.lb;
  return 13892409; // Other Section MPU as fallback
}; // Is pbtest being used?


var isPbTestOn = function isPbTestOn() {
  return !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default()(Object(lib_url__WEBPACK_IMPORTED_MODULE_2__["pbTestNameMap"])());
}; // Helper for conditions


var inPbTestOr = function inPbTestOr(liveClause) {
  return isPbTestOn() || liveClause;
};
/* Bidders */


var appNexusBidder = {
  name: 'and',
  switchName: 'prebidAppnexus',
  bidParams: function bidParams(slotId, sizes) {
    return Object(_appnexus__WEBPACK_IMPORTED_MODULE_8__["getAppNexusDirectBidParams"])(sizes, Object(_utils__WEBPACK_IMPORTED_MODULE_7__["isInAuRegion"])());
  }
};
var openxClientSideBidder = {
  name: 'oxd',
  switchName: 'prebidOpenx',
  bidParams: function bidParams() {
    switch (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.edition')) {
      case 'US':
        return {
          delDomain: 'guardian-us-d.openx.net',
          unit: '540279544',
          customParams: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])())
        };

      case 'AU':
        return {
          delDomain: 'guardian-aus-d.openx.net',
          unit: '540279542',
          customParams: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])())
        };

      default:
        // UK and ROW
        return {
          delDomain: 'guardian-d.openx.net',
          unit: '540279541',
          customParams: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])())
        };
    }
  }
};
var sonobiBidder = {
  name: 'sonobi',
  switchName: 'prebidSonobi',
  bidParams: function bidParams(slotId) {
    return Object.assign({}, {
      ad_unit: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.adUnit'),
      dom_id: slotId,
      appNexusTargeting: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargeting"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])()),
      pageViewId: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('ophan.pageViewId')
    }, isInSafeframeTestVariant() ? {
      render: 'safeframe'
    } : {});
  }
};

var getPubmaticPublisherId = function getPubmaticPublisherId() {
  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["isInUsRegion"])()) {
    return '157206';
  }

  if (Object(_utils__WEBPACK_IMPORTED_MODULE_7__["isInAuRegion"])()) {
    return '157203';
  }

  return '157207';
};

var pubmaticBidder = {
  name: 'pubmatic',
  switchName: 'prebidPubmatic',
  bidParams: function bidParams(slotId) {
    return Object.assign({}, {
      publisherId: getPubmaticPublisherId(),
      adSlot: Object(_utils__WEBPACK_IMPORTED_MODULE_7__["stripDfpAdPrefixFrom"])(slotId)
    });
  }
};
var trustXBidder = {
  name: 'trustx',
  switchName: 'prebidTrustx',
  bidParams: function bidParams(slotId) {
    return {
      uid: getTrustXAdUnitId(slotId, isDesktopAndArticle)
    };
  }
};
var improveDigitalBidder = {
  name: 'improvedigital',
  switchName: 'prebidImproveDigital',
  bidParams: function bidParams(slotId, sizes) {
    return {
      placementId: getImprovePlacementId(sizes),
      size: getImproveSizeParam(slotId)
    };
  }
};
var xaxisBidder = {
  name: 'xhb',
  switchName: 'prebidXaxis',
  bidParams: function bidParams(slotId, sizes) {
    return {
      placementId: getXaxisPlacementId(sizes)
    };
  }
};
var adYouLikeBidder = {
  name: 'adyoulike',
  switchName: 'prebidAdYouLike',
  bidParams: function bidParams() {
    return {
      placement: '2b4d757e0ec349583ce704699f1467dd'
    };
  }
}; // Dummy bidders for the whitehorse project (https://trello.com/c/KbeBLyYZ)

var getDummyServerSideBidders = function getDummyServerSideBidders() {
  var dummyServerSideBidders = [];
  var appnexusServerSideBidder = {
    name: 'appnexus',
    switchName: 'prebidS2sozone',
    bidParams: function bidParams(slotId, sizes) {
      return Object.assign({}, {
        placementId: Object(_appnexus__WEBPACK_IMPORTED_MODULE_8__["getAppNexusPlacementId"])(sizes),
        keywords: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])()) // Ok to duplicate call. Lodash 'once' is used.

      }, window.OzoneLotameData ? {
        lotame: window.OzoneLotameData
      } : {});
    }
  };
  var openxServerSideBidder = {
    name: 'openx',
    switchName: 'prebidS2sozone',
    bidParams: function bidParams() {
      return Object.assign({}, function () {
        return {
          delDomain: 'guardian-d.openx.net',
          unit: '539997090',
          customParams: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])())
        };
      }(), window.OzoneLotameData ? {
        lotame: window.OzoneLotameData
      } : {});
    }
  };
  var pangaeaServerSideBidder = {
    name: 'pangaea',
    switchName: 'prebidS2sozone',
    bidParams: function bidParams(slotId, sizes) {
      return Object.assign({}, {
        placementId: getPangaeaPlacementId(sizes).toString(),
        keywords: Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildAppNexusTargetingObject"])(Object(common_modules_commercial_build_page_targeting__WEBPACK_IMPORTED_MODULE_4__["buildPageTargeting"])()) // Ok to duplicate call. Lodash 'once' is used.

      }, window.OzoneLotameData ? {
        lotame: window.OzoneLotameData
      } : {});
    }
  };

  if (inPbTestOr(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches.prebidS2sozone') && Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeOzone"])())) {
    dummyServerSideBidders.push(openxServerSideBidder);
    dummyServerSideBidders.push(appnexusServerSideBidder);
    dummyServerSideBidders.push(pangaeaServerSideBidder);
  }

  return dummyServerSideBidders;
}; // There's an IX bidder for every size that the slot can take


var indexExchangeBidders = function indexExchangeBidders(slotSizes) {
  var indexSiteId = getIndexSiteId();
  return slotSizes.map(function (size) {
    return {
      name: 'ix',
      switchName: 'prebidIndexExchange',
      bidParams: function bidParams() {
        return {
          siteId: indexSiteId,
          size: size
        };
      }
    };
  });
};

var biddersBeingTested = function biddersBeingTested(allBidders) {
  return allBidders.filter(function (bidder) {
    return Object(lib_url__WEBPACK_IMPORTED_MODULE_2__["pbTestNameMap"])()[bidder.name];
  });
};

var biddersSwitchedOn = function biddersSwitchedOn(allBidders) {
  var isSwitchedOn = function isSwitchedOn(bidder) {
    return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get("switches.".concat(bidder.switchName));
  };

  return allBidders.filter(function (bidder) {
    return isSwitchedOn(bidder);
  });
};

var currentBidders = function currentBidders(slotSizes) {
  var otherBidders = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeSonobi"])()) ? [sonobiBidder] : []).concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeTrustX"])()) ? [trustXBidder] : []), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeAppNexus"])()) ? [appNexusBidder] : []), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeImproveDigital"])()) ? [improveDigitalBidder] : []), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeXaxis"])()) ? [xaxisBidder] : []), [pubmaticBidder], _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(inPbTestOr(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeAdYouLike"])(slotSizes)) ? [adYouLikeBidder] : []), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(_utils__WEBPACK_IMPORTED_MODULE_7__["shouldIncludeOpenx"])() ? [openxClientSideBidder] : []));

  var allBidders = indexExchangeBidders(slotSizes).concat(otherBidders).concat(getDummyServerSideBidders());
  return isPbTestOn() ? biddersBeingTested(allBidders) : biddersSwitchedOn(allBidders);
};

var bids = function bids(slotId, slotSizes) {
  return currentBidders(slotSizes).map(function (bidder) {
    return {
      bidder: bidder.name,
      params: bidder.bidParams(slotId, slotSizes)
    };
  });
};
var _ = {
  getDummyServerSideBidders: getDummyServerSideBidders,
  getIndexSiteId: getIndexSiteId,
  getImprovePlacementId: getImprovePlacementId,
  getTrustXAdUnitId: getTrustXAdUnitId,
  indexExchangeBidders: indexExchangeBidders
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/prebid.js":
/*!*****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/prebid.js ***!
  \*****************************************************************************/
/*! exports provided: prebid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prebid", function() { return prebid; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prebid_js_build_dist_prebid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prebid.js/build/dist/prebid */ "./node_modules/prebid.js/build/dist/prebid.js");
/* harmony import */ var prebid_js_build_dist_prebid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prebid_js_build_dist_prebid__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var commercial_modules_dfp_Advert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/Advert */ "./static/src/javascripts/projects/commercial/modules/dfp/Advert.js");
/* harmony import */ var commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/dfp/dfp-env */ "./static/src/javascripts/projects/commercial/modules/dfp/dfp-env.js");
/* harmony import */ var commercial_modules_prebid_bid_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/prebid/bid-config */ "./static/src/javascripts/projects/commercial/modules/prebid/bid-config.js");
/* harmony import */ var commercial_modules_prebid_slot_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/prebid/slot-config */ "./static/src/javascripts/projects/commercial/modules/prebid/slot-config.js");
/* harmony import */ var commercial_modules_prebid_price_config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/prebid/price-config */ "./static/src/javascripts/projects/commercial/modules/prebid/price-config.js");



//  strict







var bidderTimeout = 1500;
var consentManagement = {
  cmpApi: 'iab',
  timeout: 200,
  allowAuctionWithoutConsent: true
};
var s2sConfig = {
  accountId: '1',
  enabled: true,
  bidders: ['appnexus', 'openx', 'pangaea'],
  timeout: bidderTimeout,
  adapter: 'prebidServer',
  is_debug: 'false',
  endpoint: 'https://elb.the-ozone-project.com/openrtb2/auction',
  syncEndpoint: 'https://elb.the-ozone-project.com/cookie_sync',
  cookieSet: true,
  cookiesetUrl: 'https://acdn.adnxs.com/cookieset/cs.js'
};

var PrebidAdUnit =
/*#__PURE__*/
function () {
  function PrebidAdUnit(advert, slot) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, PrebidAdUnit);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "code", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "bids", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "mediaTypes", void 0);

    this.code = advert.id;
    this.bids = Object(commercial_modules_prebid_bid_config__WEBPACK_IMPORTED_MODULE_7__["bids"])(advert.id, slot.sizes);
    this.mediaTypes = {
      banner: {
        sizes: slot.sizes
      }
    };
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(PrebidAdUnit, [{
    key: "isEmpty",
    value: function isEmpty() {
      return this.code == null;
    }
  }]);

  return PrebidAdUnit;
}();

var PrebidService =
/*#__PURE__*/
function () {
  function PrebidService() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, PrebidService);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(PrebidService, null, [{
    key: "initialise",
    value: function initialise() {
      var userSync = lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.prebidUserSync', false) ? {
        // syncsPerBidder: 0, // allow all syncs - bug https://github.com/prebid/Prebid.js/issues/2781
        syncsPerBidder: 999,
        // temporarily until above bug fixed
        filterSettings: {
          all: {
            bidders: '*',
            // allow all bidders to sync by iframe or image beacons
            filter: 'include'
          }
        }
      } : {
        syncEnabled: false
      };
      var pbjsConfig = Object.assign({}, {
        bidderTimeout: bidderTimeout,
        priceGranularity: commercial_modules_prebid_price_config__WEBPACK_IMPORTED_MODULE_9__["priceGranularity"],
        userSync: userSync
      }, lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.enableConsentManagementService', false) ? {
        consentManagement: consentManagement
      } : {}, lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.prebidS2sozone', false) ? {
        s2sConfig: s2sConfig
      } : {});
      window.pbjs.setConfig(pbjsConfig);

      if (lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.prebidAnalytics', false)) {
        window.pbjs.enableAnalytics([{
          provider: 'gu',
          options: {
            ajaxUrl: lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('page.ajaxUrl'),
            pv: lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('ophan.pageViewId')
          }
        }]);
      } // This creates an 'unsealed' object. Flows
      // allows dynamic assignment.


      window.pbjs.bidderSettings = {};

      if (lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.prebidXaxis', false)) {
        window.pbjs.bidderSettings.xhb = {
          adserverTargeting: [{
            key: 'hb_buyer_id',
            val: function val(bidResponse) {
              return bidResponse.appnexus ? bidResponse.appnexus.buyerMemberId : '';
            }
          }]
        };
      }
    }
  }, {
    key: "requestBids",
    // slotFlatMap allows you to dynamically interfere with the PrebidSlot definition
    // for this given request for bids.
    value: function requestBids(advert, slotFlatMap) {
      var effectiveSlotFlatMap = slotFlatMap || function (s) {
        return [s];
      }; // default to identity


      if (commercial_modules_dfp_dfp_env__WEBPACK_IMPORTED_MODULE_6__["dfpEnv"].externalDemand !== 'prebid') {
        return PrebidService.requestQueue;
      }

      var isArticle = lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('page.contentType') === 'Article';
      var adUnits = Object(commercial_modules_prebid_slot_config__WEBPACK_IMPORTED_MODULE_8__["slots"])(advert.id, isArticle).map(effectiveSlotFlatMap).reduce(function (acc, elt) {
        return acc.concat(elt);
      }, []) // the "flat" in "flatMap"
      .map(function (slot) {
        return new PrebidAdUnit(advert, slot);
      }).filter(function (adUnit) {
        return !adUnit.isEmpty();
      });

      if (adUnits.length === 0) {
        return PrebidService.requestQueue;
      }

      PrebidService.requestQueue = PrebidService.requestQueue.then(function () {
        return new Promise(function (resolve) {
          window.pbjs.que.push(function () {
            window.pbjs.requestBids({
              adUnits: adUnits,
              bidsBackHandler: function bidsBackHandler() {
                window.pbjs.setTargetingForGPTAsync([adUnits[0].code]);
                resolve();
              }
            });
          });
        });
      }).catch(function () {});
      return PrebidService.requestQueue;
    }
  }]);

  return PrebidService;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(PrebidService, "requestQueue", Promise.resolve());

var prebid = PrebidService;

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/price-config.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/price-config.js ***!
  \***********************************************************************************/
/*! exports provided: priceGranularity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "priceGranularity", function() { return priceGranularity; });
//  strict
var priceGranularity = {
  buckets: [{
    min: 0,
    max: 100,
    increment: 0.01
  }, {
    min: 100,
    max: 500,
    increment: 1
  }]
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/slot-config.js":
/*!**********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/slot-config.js ***!
  \**********************************************************************************/
/*! exports provided: slots, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slots", function() { return slots; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! commercial/modules/prebid/utils */ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_2__);
//  strict




var filterByAdvertId = function filterByAdvertId(advertId, slots) {
  var adUnits = slots.filter(function (slot) {
    return Object(commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_0__["stripTrailingNumbersAbove1"])(Object(commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_0__["stripMobileSuffix"])(advertId)).endsWith(slot.key);
  });
  return adUnits;
};

var getMostPopularSizes = lodash_memoize__WEBPACK_IMPORTED_MODULE_2___default()(function (isArticle) {
  // Only works for articles for now.
  if (isArticle && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('switches.extendedMostPopular')) {
    return [[300, 600], [300, 250]];
  }

  return [[300, 250]];
});

var getSlots = function getSlots(isArticle) {
  var commonSlots = [{
    key: 'mostpop',
    sizes: getMostPopularSizes(isArticle)
  }, {
    key: 'right',
    sizes: [[300, 600], [300, 250]]
  }, {
    key: 'inline1',
    sizes: [[300, 250]]
  }];
  var desktopSlots = [{
    key: 'top-above-nav',
    sizes: [[970, 250], [728, 90]]
  }, {
    key: 'inline',
    sizes: isArticle ? [[300, 600], [300, 250]] : [[300, 250]]
  }, {
    key: 'comments',
    sizes: [[300, 250], [300, 600]]
  }];
  var tabletSlots = [{
    key: 'top-above-nav',
    sizes: [[728, 90]]
  }, {
    key: 'inline',
    sizes: [[300, 250]]
  }];
  var mobileSlots = [{
    key: 'top-above-nav',
    sizes: [[300, 250]]
  }, {
    key: 'inline',
    sizes: [[300, 250]]
  }];

  switch (Object(commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_0__["getBreakpointKey"])()) {
    case 'M':
      return commonSlots.concat(mobileSlots);

    case 'T':
      return commonSlots.concat(tabletSlots);

    default:
      return commonSlots.concat(desktopSlots);
  }
};

var slots = function slots(advertId, isArticle) {
  return filterByAdvertId(advertId, getSlots(isArticle));
};
var _ = {
  getSlots: getSlots
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/prebid/utils.js ***!
  \****************************************************************************/
/*! exports provided: removeFalseyValues, stripDfpAdPrefixFrom, isInUsRegion, isInAuRegion, containsMpu, containsDmpu, containsLeaderboard, containsBillboard, containsMpuOrDmpu, containsLeaderboardOrBillboard, getLargestSize, getBreakpointKey, getRandomIntInclusive, shouldIncludeSonobi, shouldIncludeOpenx, shouldIncludeTrustX, shouldIncludeAdYouLike, shouldIncludeOzone, shouldIncludeAppNexus, shouldIncludeXaxis, shouldIncludeImproveDigital, stripMobileSuffix, stripTrailingNumbersAbove1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFalseyValues", function() { return removeFalseyValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripDfpAdPrefixFrom", function() { return stripDfpAdPrefixFrom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInUsRegion", function() { return isInUsRegion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInAuRegion", function() { return isInAuRegion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsMpu", function() { return containsMpu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsDmpu", function() { return containsDmpu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsLeaderboard", function() { return containsLeaderboard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsBillboard", function() { return containsBillboard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsMpuOrDmpu", function() { return containsMpuOrDmpu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsLeaderboardOrBillboard", function() { return containsLeaderboardOrBillboard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLargestSize", function() { return getLargestSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBreakpointKey", function() { return getBreakpointKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRandomIntInclusive", function() { return getRandomIntInclusive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeSonobi", function() { return shouldIncludeSonobi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeOpenx", function() { return shouldIncludeOpenx; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeTrustX", function() { return shouldIncludeTrustX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeAdYouLike", function() { return shouldIncludeAdYouLike; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeOzone", function() { return shouldIncludeOzone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeAppNexus", function() { return shouldIncludeAppNexus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeXaxis", function() { return shouldIncludeXaxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldIncludeImproveDigital", function() { return shouldIncludeImproveDigital; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripMobileSuffix", function() { return stripMobileSuffix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stripTrailingNumbersAbove1", function() { return stripTrailingNumbersAbove1; });
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
//  strict






var stripSuffix = function stripSuffix(s, suffix) {
  var re = new RegExp("".concat(suffix, "$"));
  return s.replace(re, '');
};

var currentGeoLocation = lodash_once__WEBPACK_IMPORTED_MODULE_0___default()(function () {
  return Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_3__["getSync"])();
});

var contains = function contains(sizes, size) {
  return Boolean(sizes.find(function (s) {
    return s[0] === size[0] && s[1] === size[1];
  }));
};

var stripPrefix = function stripPrefix(s, prefix) {
  var re = new RegExp("^".concat(prefix));
  return s.replace(re, '');
};

var removeFalseyValues = function removeFalseyValues(o) {
  return Object.keys(o).reduce(function (m, k) {
    if (o[k]) {
      m[k] = o[k];
    }

    return m;
  }, {});
};
var stripDfpAdPrefixFrom = function stripDfpAdPrefixFrom(s) {
  return stripPrefix(s, 'dfp-ad--');
};
var isInUsRegion = function isInUsRegion() {
  return ['US', 'CA'].includes(currentGeoLocation());
};
var isInAuRegion = function isInAuRegion() {
  return ['AU', 'NZ'].includes(currentGeoLocation());
};
var containsMpu = function containsMpu(sizes) {
  return contains(sizes, [300, 250]);
};
var containsDmpu = function containsDmpu(sizes) {
  return contains(sizes, [300, 600]);
};
var containsLeaderboard = function containsLeaderboard(sizes) {
  return contains(sizes, [728, 90]);
};
var containsBillboard = function containsBillboard(sizes) {
  return contains(sizes, [970, 250]);
};
var containsMpuOrDmpu = function containsMpuOrDmpu(sizes) {
  return containsMpu(sizes) || containsDmpu(sizes);
};
var containsLeaderboardOrBillboard = function containsLeaderboardOrBillboard(sizes) {
  return containsLeaderboard(sizes) || containsBillboard(sizes);
};
var getLargestSize = function getLargestSize(sizes) {
  var reducer = function reducer(previous, current) {
    if (previous[0] >= current[0] && previous[1] >= current[1]) {
      return previous;
    }

    return current;
  };

  return sizes.length > 0 ? sizes.reduce(reducer) : null;
};
var getBreakpointKey = function getBreakpointKey() {
  switch (Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["getBreakpoint"])()) {
    case 'mobile':
    case 'mobileMedium':
    case 'mobileLandscape':
    case 'phablet':
      return 'M';

    case 'tablet':
      return 'T';

    case 'desktop':
    case 'leftCol':
    case 'wide':
      return 'D';

    default:
      return 'D';
  }
};
var getRandomIntInclusive = function getRandomIntInclusive(minimum, maximum) {
  var min = Math.ceil(minimum);
  var max = Math.floor(maximum);
  return Math.floor(Math.random() * (max - min + 1)) + min;
};
var shouldIncludeSonobi = function shouldIncludeSonobi() {
  return isInUsRegion();
};
var shouldIncludeOpenx = function shouldIncludeOpenx() {
  return !isInUsRegion();
};
var shouldIncludeTrustX = function shouldIncludeTrustX() {
  return isInUsRegion();
};
var shouldIncludeAdYouLike = function shouldIncludeAdYouLike(slotSizes) {
  return containsMpu(slotSizes);
};
var shouldIncludeOzone = function shouldIncludeOzone() {
  return !isInUsRegion() && !isInAuRegion();
};
var shouldIncludeAppNexus = function shouldIncludeAppNexus() {
  return isInAuRegion() || lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('switches.prebidAppnexusUkRow') && !isInUsRegion() || !!Object(lib_url__WEBPACK_IMPORTED_MODULE_2__["pbTestNameMap"])().and;
};
var shouldIncludeXaxis = function shouldIncludeXaxis() {
  // 50% of UK page views
  var hasFirstLook = lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('page.isDev') || getRandomIntInclusive(1, 2) === 1;

  if (lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('page.edition') === 'UK') {
    return hasFirstLook;
  }

  return false;
};
var shouldIncludeImproveDigital = function shouldIncludeImproveDigital() {
  var edition = lib_config__WEBPACK_IMPORTED_MODULE_4__["default"].get('page.edition');
  return edition === 'UK' || edition === 'INT';
};
var stripMobileSuffix = function stripMobileSuffix(s) {
  return stripSuffix(s, '--mobile');
};
var stripTrailingNumbersAbove1 = function stripTrailingNumbersAbove1(s) {
  return stripSuffix(s, '([2-9]|\\d{2,})');
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/sticky-mpu.js":
/*!**************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/sticky-mpu.js ***!
  \**************************************************************************/
/*! exports provided: stickyMpu, stickyCommentsMpu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stickyMpu", function() { return stickyMpu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stickyCommentsMpu", function() { return stickyCommentsMpu; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var common_modules_ui_sticky__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/ui/sticky */ "./static/src/javascripts/projects/common/modules/ui/sticky.js");
/* harmony import */ var commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/messenger */ "./static/src/javascripts/projects/commercial/modules/messenger.js");





var noSticky = !!(document.documentElement && document.documentElement.classList.contains('has-no-sticky'));
var stickyElement;
var stickySlot;

var onResize = function onResize(specs, _, iframe) {
  if (stickySlot.contains(iframe)) {
    Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_4__["unregister"])('resize', onResize);
    stickyElement.updatePosition();
  }
};

var isStickyMpuSlot = function isStickyMpuSlot(adSlot) {
  var dataName = adSlot.dataset.name;
  return dataName === 'comments' || dataName === 'right';
};

var stickyCommentsMpu = function stickyCommentsMpu(adSlot) {
  if (isStickyMpuSlot(adSlot)) {
    stickySlot = adSlot;
  }

  var referenceElement = document.querySelector('.js-comments');

  if (!referenceElement || !adSlot) {
    return;
  }

  lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    return referenceElement.offsetHeight - 600;
  }).then(function (newHeight) {
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      adSlot.parentNode.style.height = "".concat(newHeight, "px");
    });
  }).then(function () {
    if (noSticky) {
      stickyElement = new common_modules_ui_sticky__WEBPACK_IMPORTED_MODULE_3__["Sticky"](adSlot);
      stickyElement.init();
      Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_4__["register"])('resize', onResize);
    }

    lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].emit('page:commercial:sticky-comments-mpu');
  });
};

stickyCommentsMpu.whenRendered = new Promise(function (resolve) {
  lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].on('page:commercial:sticky-comments-mpu', resolve);
});

var stickyMpu = function stickyMpu(adSlot) {
  if (isStickyMpuSlot(adSlot)) {
    stickySlot = adSlot;
  }

  var referenceElement = document.querySelector('.js-article__body,.js-liveblog-body-content');
  var stickyPixelBoundary = 300;

  if (!referenceElement || !adSlot || lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.hasShowcaseMainElement')) {
    return;
  }

  lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    return referenceElement.offsetTop + stickyPixelBoundary;
  }).then(function (newHeight) {
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      adSlot.parentNode.style.height = "".concat(newHeight, "px");
    });
  }).then(function () {
    if (noSticky) {
      // if there is a sticky 'paid by' band move the sticky mpu down so it will be always visible
      var options = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.isPaidContent') ? {
        top: 43
      } : {};
      stickyElement = new common_modules_ui_sticky__WEBPACK_IMPORTED_MODULE_3__["Sticky"](adSlot, options);
      stickyElement.init();
      Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_4__["register"])('resize', onResize);
    }

    lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].emit('page:commercial:sticky-mpu');
  });
};

stickyMpu.whenRendered = new Promise(function (resolve) {
  lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].on('page:commercial:sticky-mpu', resolve);
});


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/sticky-top-banner.js":
/*!*********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/sticky-top-banner.js ***!
  \*********************************************************************************/
/*! exports provided: _, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var lib_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/events */ "./static/src/javascripts/lib/events.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! commercial/modules/dfp/track-ad-render */ "./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! commercial/modules/dfp/get-advert-by-id */ "./static/src/javascripts/projects/commercial/modules/dfp/get-advert-by-id.js");
/* harmony import */ var commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/messenger */ "./static/src/javascripts/projects/commercial/modules/messenger.js");







var topSlotId = 'dfp-ad--top-above-nav';
var updateQueued = false;
var header;
var headerHeight;
var topSlot;
var topSlotHeight;
var topSlotStyles;
var stickyBanner;
var scrollY; // Because the top banner is not in the document flow, resizing it requires
// that we also make space for it. This is done by adjusting the top margin
// of the header.
// This is also the best place to adjust the scrolling position in case the
// user has scrolled past the header.

var resizeStickyBanner = function resizeStickyBanner(newHeight) {
  if (topSlotHeight === newHeight) {
    return Promise.resolve(-1);
  }

  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    if (stickyBanner && header) {
      var newCSSHeight = "".concat(newHeight, "px");
      stickyBanner.classList.add('sticky-top-banner-ad');
      stickyBanner.style.height = newCSSHeight;
      header.style.marginTop = newCSSHeight;
    }

    if (topSlotHeight !== undefined && headerHeight <= scrollY) {
      window.scrollBy(0, newHeight - topSlotHeight);
    }

    topSlotHeight = newHeight;
    return newHeight;
  });
}; // Sudden changes in the layout can be jarring to the user, so we animate
// them for a better experience. We only do this if the slot is in view
// though.


var setupAnimation = function setupAnimation() {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
    if (stickyBanner && header) {
      if (scrollY <= headerHeight) {
        header.classList.add('l-header--animate');
        stickyBanner.classList.add('sticky-top-banner-ad--animate');
      } else {
        header.classList.remove('l-header--animate');
        stickyBanner.classList.remove('sticky-top-banner-ad--animate');
      }
    }
  });
};

var onScroll = function onScroll() {
  scrollY = window.pageYOffset;

  if (!updateQueued) {
    updateQueued = true;
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      updateQueued = false;

      if (stickyBanner) {
        if (headerHeight < scrollY) {
          stickyBanner.style.position = 'absolute';
          stickyBanner.style.top = "".concat(headerHeight, "px");
        } else {
          stickyBanner.style.position = '';
          stickyBanner.style.top = '';
        }
      }
    }).then(setupAnimation);
  }

  return Promise.resolve();
};

var update = function update(newHeight) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    topSlotStyles = topSlotStyles || window.getComputedStyle(topSlot);
    return newHeight + parseInt(topSlotStyles.paddingTop, 10) + parseInt(topSlotStyles.paddingBottom, 10);
  }).then(resizeStickyBanner);
};

var onResize = function onResize(specs, _, iframe) {
  if (topSlot && topSlot.contains(iframe)) {
    update(specs.height);
    Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_6__["unregister"])('resize', onResize);
  }
}; // Register a message listener for when the creative wants to resize
// its container
// We also listen for scroll events if we need to, to snap the slot in
// place when it reaches the end of the header.


var setupListeners = function setupListeners() {
  Object(commercial_modules_messenger__WEBPACK_IMPORTED_MODULE_6__["register"])('resize', onResize);
  Object(lib_events__WEBPACK_IMPORTED_MODULE_0__["addEventListener"])(window, 'scroll', onScroll, {
    passive: true
  });
};

var getAdvertSizeByIndex = function getAdvertSizeByIndex(advert, index) {
  if (advert && advert.size && typeof advert.size !== 'string') {
    return advert.size[index];
  }
};

var onFirstRender = function onFirstRender() {
  /* eslint-disable no-use-before-define */
  // $FlowFixMe
  _.whenFirstRendered = Object(commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_3__["trackAdRender"])(topSlotId).then(function (isRendered) {
    if (isRendered) {
      var advert = Object(commercial_modules_dfp_get_advert_by_id__WEBPACK_IMPORTED_MODULE_5__["getAdvertById"])(topSlotId);
      var adSize0 = getAdvertSizeByIndex(advert, 0);
      var adSize1 = getAdvertSizeByIndex(advert, 1);

      if ( // skip for Fabric creatives
      adSize0 !== 88 && // skip for native ads
      adSize1 && adSize1 > 0) {
        return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
          var styles = window.getComputedStyle(topSlot);
          return parseInt(styles.paddingTop, 10) + parseInt(styles.paddingBottom, 10) + adSize1 || 0;
        }).then(resizeStickyBanner);
      }

      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
        return topSlot && topSlot.getBoundingClientRect().height || 0;
      }).then(resizeStickyBanner);
    }
  });
  /* eslint-enable no-use-before-define */
};

var initState = function initState() {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].read(function () {
    if (header) {
      headerHeight = header.getBoundingClientRect().height;
    }

    return topSlot && topSlot.getBoundingClientRect().height || 0;
  }).then(function (currentHeight) {
    return Promise.all([resizeStickyBanner(currentHeight), onScroll()]);
  });
};

var init = function init() {
  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].stickyTopBannerAd) {
    return Promise.resolve();
  }

  topSlot = document.getElementById(topSlotId);

  if (topSlot && Object(lib_detect__WEBPACK_IMPORTED_MODULE_1__["isBreakpoint"])({
    min: 'desktop'
  })) {
    header = document.getElementById('header');
    stickyBanner = topSlot.parentNode; // First, let's assign some default values so that everything
    // is in good order before we start animating changes in height

    return initState() // Second, start listening for height and scroll changes
    .then(setupListeners).then(onFirstRender);
  }

  topSlot = null;
  return Promise.resolve();
};

var _ = {
  update: update,
  resizeStickyBanner: resizeStickyBanner,
  onScroll: onScroll,
  whenFirstRendered: null
};


/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags.js ***!
  \********************************************************************************/
/*! exports provided: init, _ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var raw_loader_common_views_commercial_external_content_html__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! raw-loader!common/views/commercial/external-content.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/common/views/commercial/external-content.html");
/* harmony import */ var raw_loader_common_views_commercial_external_content_html__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(raw_loader_common_views_commercial_external_content_html__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var commercial_modules_third_party_tags_imr_worldwide__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! commercial/modules/third-party-tags/imr-worldwide */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide.js");
/* harmony import */ var commercial_modules_third_party_tags_imr_worldwide_legacy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! commercial/modules/third-party-tags/imr-worldwide-legacy */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide-legacy.js");
/* harmony import */ var commercial_modules_third_party_tags_remarketing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! commercial/modules/third-party-tags/remarketing */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/remarketing.js");
/* harmony import */ var commercial_modules_third_party_tags_simple_reach__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! commercial/modules/third-party-tags/simple-reach */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/simple-reach.js");
/* harmony import */ var commercial_modules_third_party_tags_tourism_australia__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! commercial/modules/third-party-tags/tourism-australia */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/tourism-australia.js");
/* harmony import */ var common_modules_commercial_krux__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/modules/commercial/krux */ "./static/src/javascripts/projects/common/modules/commercial/krux.js");
/* harmony import */ var commercial_modules_third_party_tags_ias__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! commercial/modules/third-party-tags/ias */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/ias.js");
/* harmony import */ var commercial_modules_third_party_tags_inizio__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! commercial/modules/third-party-tags/inizio */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/inizio.js");
/* harmony import */ var commercial_modules_third_party_tags_outbrain__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! commercial/modules/third-party-tags/outbrain */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain.js");
/* harmony import */ var commercial_modules_third_party_tags_doubleclick_ad_free__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! commercial/modules/third-party-tags/doubleclick-ad-free */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/doubleclick-ad-free.js");
/* harmony import */ var commercial_modules_third_party_tags_plista__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! commercial/modules/third-party-tags/plista */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/plista.js");
/* A regionalised container for all the commercial tags. */


















var loadExternalContentWidget = function loadExternalContentWidget() {
  var externalTpl = lodash_template__WEBPACK_IMPORTED_MODULE_3___default()(raw_loader_common_views_commercial_external_content_html__WEBPACK_IMPORTED_MODULE_5___default.a);

  var findAnchor = function findAnchor() {
    var selector = !(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.seriesId || lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.blogIds) ? '.js-related, .js-outbrain-anchor' : '.js-outbrain-anchor';
    return Promise.resolve(document.querySelector(selector));
  };

  var renderWidget = function renderWidget(widgetType, init) {
    findAnchor().then(function (anchorNode) {
      return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])(anchorNode).after(externalTpl({
          widgetType: widgetType
        }));
      });
    }).then(init);
  };

  var shouldServePlista = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].switches.plistaForOutbrainAu && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.edition.toLowerCase() === 'au';

  if (shouldServePlista) {
    renderWidget('plista', commercial_modules_third_party_tags_plista__WEBPACK_IMPORTED_MODULE_16__["plista"].init);
  } else {
    renderWidget('outbrain', commercial_modules_third_party_tags_outbrain__WEBPACK_IMPORTED_MODULE_14__["initOutbrain"]);
  }
};

var insertScripts = function insertScripts(services) {
  var ref = document.scripts[0];
  var frag = document.createDocumentFragment();

  while (services.length) {
    var service = services.shift();

    if (service.useImage) {
      new Image().src = service.url;
    } else {
      var script = document.createElement('script');
      script.src = service.url;
      script.onload = service.onLoad;
      frag.appendChild(script);
    }
  }

  if (ref && ref.parentNode) {
    ref.parentNode.insertBefore(frag, ref);
  }
};

var loadOther = function loadOther() {
  var services = [commercial_modules_third_party_tags_imr_worldwide__WEBPACK_IMPORTED_MODULE_6__["imrWorldwide"], commercial_modules_third_party_tags_imr_worldwide_legacy__WEBPACK_IMPORTED_MODULE_7__["imrWorldwideLegacy"], commercial_modules_third_party_tags_remarketing__WEBPACK_IMPORTED_MODULE_8__["remarketing"], commercial_modules_third_party_tags_simple_reach__WEBPACK_IMPORTED_MODULE_9__["simpleReach"], commercial_modules_third_party_tags_tourism_australia__WEBPACK_IMPORTED_MODULE_10__["tourismAustralia"], common_modules_commercial_krux__WEBPACK_IMPORTED_MODULE_11__["krux"], commercial_modules_third_party_tags_ias__WEBPACK_IMPORTED_MODULE_12__["ias"], commercial_modules_third_party_tags_inizio__WEBPACK_IMPORTED_MODULE_13__["inizio"], commercial_modules_third_party_tags_doubleclick_ad_free__WEBPACK_IMPORTED_MODULE_15__["doubleClickAdFree"]].filter(function (_) {
    return _.shouldRun;
  });

  if (services.length) {
    insertScripts(services);
  }
};

var init = function init() {
  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].thirdPartyTags) {
    return Promise.resolve(false);
  } // Outbrain/Plista needs to be loaded before the first ad as it is checking
  // for the presence of high relevance component on page


  if (!common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_4__["commercialFeatures"].adFree) {
    loadExternalContentWidget();
  }

  loadOther();
  return Promise.resolve(true);
};


var _ = {
  insertScripts: insertScripts,
  loadOther: loadOther
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/doubleclick-ad-free.js":
/*!****************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/doubleclick-ad-free.js ***!
  \****************************************************************************************************/
/*! exports provided: doubleClickAdFree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "doubleClickAdFree", function() { return doubleClickAdFree; });
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");



var doubleClickRandom = function doubleClickRandom() {
  var axel = Math.random();
  var a = axel * 10000000000000;
  return a.toString();
};

var doubleClickAdFree = {
  shouldRun: common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_0__["commercialFeatures"].adFree && lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].switches.doubleclickYoutubeAdFree,
  useImage: true,
  url: "//pubads.g.doubleclick.net/activity;dc_iu=/".concat(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.dfpAccountId, "/DFPAudiencePixel;ord=").concat(doubleClickRandom(), ";dc_seg=482549580;af=T?")
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/ias.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/ias.js ***!
  \************************************************************************************/
/*! exports provided: ias */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ias", function() { return ias; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");

var ias = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('switches.iasAdTargeting', false),
  url: '//cdn.adsafeprotected.com/iasPET.1.js'
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide-legacy.js":
/*!*****************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide-legacy.js ***!
  \*****************************************************************************************************/
/*! exports provided: imrWorldwideLegacy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imrWorldwideLegacy", function() { return imrWorldwideLegacy; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
 // nol_t is a global function defined by the IMR worldwide library
// eslint-disable-next-line camelcase

var onLoad = function onLoad() {
  var pvar = {
    cid: 'au-guardian',
    content: '0',
    server: 'secure-gl'
  };
  var trac = nol_t(pvar);
  trac.record().post();
};

var imrWorldwideLegacy = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.imrWorldwide,
  url: '//secure-au.imrworldwide.com/v60.js',
  onLoad: onLoad
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide.js":
/*!**********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/imr-worldwide.js ***!
  \**********************************************************************************************/
/*! exports provided: imrWorldwide */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "imrWorldwide", function() { return imrWorldwide; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
 // NOLCMB is a global function defined by the IMR worldwide library

var guMetadata = {
  books: 'P5033A084-E9BF-453A-91D3-C558751D9A85',
  business: 'P5B109609-6223-45BA-B052-55F34A79D7AD',
  commentisfree: 'PA878EFC7-93C8-4352-905E-9E03883FD6BD',
  artanddesign: 'PE5076E6F-B85D-4B45-9536-F150EF3FC853',
  culture: 'PE5076E6F-B85D-4B45-9536-F150EF3FC853',
  stage: 'PE5076E6F-B85D-4B45-9536-F150EF3FC853',
  education: 'P4A01DB74-5B97-435A-89F0-C07EA2C739EC',
  environment: 'P2F34A388-A280-4C3F-AF43-FAF16EFCB7B1',
  cities: 'P2F34A388-A280-4C3F-AF43-FAF16EFCB7B1',
  'global-development': 'P2F34A388-A280-4C3F-AF43-FAF16EFCB7B1',
  'sustainable-business': 'P2F34A388-A280-4C3F-AF43-FAF16EFCB7B1',
  fashion: 'PCF345621-F34D-40B2-852C-6223C9C8F1E2',
  film: 'P878ECFA5-14A7-4038-9924-3696C93706FC',
  law: 'P1FA129DD-9B9E-49BB-98A4-AA7ED8523DFD',
  lifeandstyle: 'PCFE04250-E5F6-48C7-91DB-5CED6854818C',
  media: 'P1434DC6D-6585-4932-AE17-2864CD0AAE99',
  money: 'PB71E7F1E-F231-4F73-9CC8-BE8822ADD0C2',
  music: 'P78382DEE-CC9B-4B36-BD27-809007BFF300',
  international: 'P505182AA-1D71-49D8-8287-AA222CD05424',
  au: 'P505182AA-1D71-49D8-8287-AA222CD05424',
  'australia-news': 'P505182AA-1D71-49D8-8287-AA222CD05424',
  uk: 'P505182AA-1D71-49D8-8287-AA222CD05424',
  'uk-news': 'P505182AA-1D71-49D8-8287-AA222CD05424',
  us: 'P505182AA-1D71-49D8-8287-AA222CD05424',
  'us-news': 'P505182AA-1D71-49D8-8287-AA222CD05424',
  world: 'P505182AA-1D71-49D8-8287-AA222CD05424',
  politics: 'P5B7468E3-CE04-40FD-9444-22FB872FE83E',
  careers: 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'culture-professionals-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'global-development-professionals-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'government-computing-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'guardian-professional': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'healthcare-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'higher-education-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'housing-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'local-government-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'local-leaders-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'public-leaders-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'small-business-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'social-care-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'teacher-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'voluntary-sector-network': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  'women-in-leadership': 'P3637DC6B-E43C-4E92-B22C-3F255CC573DA',
  science: 'PDAD6BC22-C97B-4151-956B-7F069B2C56E9',
  society: 'P7AF4A592-96FB-4255-B33F-352406F4C7D2',
  sport: 'PCC1AEBB6-7D1A-4F34-8256-EFC314E5D0C3',
  football: 'PCC1AEBB6-7D1A-4F34-8256-EFC314E5D0C3',
  technology: 'P29EF991A-3FEE-4215-9F03-58EACA8286B9',
  travel: 'PD1CEDC3E-2653-4CB6-A4FD-8A315DE07548',
  'tv-and-radio': 'P66E48909-8FC9-49E8-A7E6-0D31C61805AD',
  'brand-only': 'P0EE0F4F4-8D7C-4082-A2A4-82C84728DC59'
};

var onLoad = function onLoad() {
  var sectionFromMeta = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.section.toLowerCase();
  var subBrandApId = guMetadata[sectionFromMeta] || guMetadata['brand-only'];
  var sectionRef = sectionFromMeta in guMetadata ? sectionFromMeta : 'The Guardian - brand only';
  var nolggGlobalParams = {
    sfcode: 'dcr',
    apid: subBrandApId,
    apn: 'theguardian'
  };
  var nSdkInstance = NOLCMB.getInstance(nolggGlobalParams.apid);
  nSdkInstance.ggInitialize(nolggGlobalParams);
  var dcrStaticMetadata = {
    type: 'static',
    assetid: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.pageId,
    section: sectionRef
  };
  nSdkInstance.ggPM('staticstart', dcrStaticMetadata);
};

var imrWorldwide = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.imrWorldwide,
  url: '//secure-dcr.imrworldwide.com/novms/js/2/ggcmb510.js',
  onLoad: onLoad
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/inizio.js":
/*!***************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/inizio.js ***!
  \***************************************************************************************/
/*! exports provided: inizio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inizio", function() { return inizio; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
//  strict


var onLoad = function onLoad() {
  var handleQuerySurveyDone = function handleQuerySurveyDone(surveyAvailable, survey) {
    if (surveyAvailable) {
      if (window && window.googletag) {
        window.googletag.cmd.push(function () {
          window.googletag.pubads().setTargeting('inizio', 't');
        });
      }

      console.log("surveyAvailable: ".concat(survey.measurementId));
    }
  }; // eslint-disable-next-line no-underscore-dangle


  window._brandmetrics = window._brandmetrics || []; // eslint-disable-next-line no-underscore-dangle

  window._brandmetrics.push({
    cmd: '_querySurvey',
    val: {
      callback: handleQuerySurveyDone
    }
  });
};

var inizio = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('switches.inizio', false),
  url: '//cdn.brandmetrics.com/survey/script/e96d04c832084488a841a06b49b8fb2d.js',
  onLoad: onLoad
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes-new.js":
/*!***************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes-new.js ***!
  \***************************************************************************************************/
/*! exports provided: getCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCode", function() { return getCode; });
/*
  Implements outbrain codes according to the new structure defined
  here: https://trello.com/c/r1TDqVKP
*/
var normalizedTypes = {
  defaults: 'defaults',
  merchandising: 'nonCompliant',
  nonCompliant: 'nonCompliant'
};
var outbrainCodes = {
  defaults: {
    desktop: {
      code: 'AR_12'
    },
    tablet: {
      code: 'MB_6'
    },
    mobile: {
      code: 'MB_4'
    }
  },
  epic: {
    desktop: {
      code: 'AR_13'
    },
    tablet: {
      code: 'MB_7'
    },
    mobile: {
      code: 'MB_5'
    }
  },
  nonCompliant: {
    desktop: {
      code: 'AR_14'
    },
    tablet: {
      code: 'MB_8'
    },
    mobile: {
      code: 'MB_10'
    }
  }
};

var outbrainCode = function outbrainCode(paramSet, breakpoint) {
  var byParamSet = outbrainCodes[paramSet];

  if (!byParamSet) {
    throw new Error("Unknown outbrain param set  (".concat(paramSet, ")"));
  }

  var byBreakpoint = byParamSet[breakpoint];

  if (!byBreakpoint) {
    throw new Error("Unknown outbrain breakpoint (".concat(breakpoint, ")"));
  }

  return {
    code: byBreakpoint.code
  };
};

var getCode = function getCode(args) {
  console.log('OUTBRAIN -NEW getCode arguments', args);
  var normalizedType = normalizedTypes[args.outbrainType];

  if (!normalizedType) {
    throw new Error("Unknown outbrainType (".concat(args.outbrainType, ")"));
  }

  var normalizedBreakpoint = args.breakpoint === 'wide' ? 'desktop' : args.breakpoint;

  if (normalizedType === 'defaults') {
    return outbrainCode('defaults', normalizedBreakpoint);
  }

  if (normalizedType === 'nonCompliant') {
    if (args.contributionEpicVisible) {
      return outbrainCode('epic', normalizedBreakpoint);
    }

    return outbrainCode('nonCompliant', normalizedBreakpoint);
  } // No other possibility as normalizedType can only have this set of values.
  // note that for flow, we still need to return something


  return outbrainCode('nonCompliant', normalizedBreakpoint);
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes.js":
/*!***********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes.js ***!
  \***********************************************************************************************/
/*! exports provided: getCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCode", function() { return getCode; });
/* harmony import */ var _outbrain_sections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./outbrain-sections */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-sections.js");

/* These codes are given to us directly by Outbrain. They will eventually
   be sent back to them via a data- attribute, in order for them to return
   contextually-relevant links. The codes differ whether on a smartphone,
   tablet or desktop. Also, except on mobile, we will request two sets of
   links from Outbrain, hence the two codes in some contexts.
   Currently, there are two categories of codes:
   1. defaults: these are the codes used by default for the Outbrain widget
   2. merchandising: these are the codes when the widget replaces the low-
    priority merchandising component
*/

var outbrainCodes = {
  defaults: {
    news: {
      mobile: {
        code: 'MB_4'
      },
      desktop: {
        image: 'AR_12',
        text: 'AR_14'
      },
      tablet: {
        image: 'MB_6',
        text: 'MB_8'
      }
    },
    defaults: {
      mobile: {
        code: 'MB_5'
      },
      desktop: {
        image: 'AR_13',
        text: 'AR_15'
      },
      tablet: {
        image: 'MB_7',
        text: 'MB_9'
      }
    }
  },
  // This is the same as 'nonCompliant'
  merchandising: {
    mobile: {
      code: 'MB_10'
    },
    desktop: {
      code: 'AR_28'
    },
    tablet: {
      code: 'MB_11'
    }
  },
  nonCompliant: {
    mobile: {
      code: 'MB_10'
    },
    desktop: {
      code: 'AR_28'
    },
    tablet: {
      code: 'MB_11'
    }
  }
};

var getCode = function getCode(args) {
  var normalizedBreakpoint = args.breakpoint === 'wide' ? 'desktop' : args.breakpoint;

  if (!(args.outbrainType in outbrainCodes) || args.outbrainType === 'defaults') {
    return outbrainCodes.defaults[Object(_outbrain_sections__WEBPACK_IMPORTED_MODULE_0__["getSection"])(args.section)][normalizedBreakpoint];
  } else if (args.outbrainType === 'nonCompliant') {
    return outbrainCodes.nonCompliant[normalizedBreakpoint];
  }

  return outbrainCodes.merchandising[normalizedBreakpoint];
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-load.js":
/*!**********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-load.js ***!
  \**********************************************************************************************/
/*! exports provided: load */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");
/* harmony import */ var common_modules_experiments_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/experiments/utils.js */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var _outbrain_codes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./outbrain-codes */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes.js");
/* harmony import */ var _outbrain_codes_new__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./outbrain-codes-new */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-codes-new.js");
/* harmony import */ var _outbrain_tracking__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./outbrain-tracking */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-tracking.js");









var outbrainUrl = '//widgets.outbrain.com/outbrain.js';

var outbrainTpl = function outbrainTpl(_ref) {
  var widgetCode = _ref.widgetCode;
  return "\n    <div class=\"OUTBRAIN\" data-widget-id=\"".concat(widgetCode, "\" data-ob-template=\"guardian\" aria-hidden=\"true\"></div>\n    ");
};

var selectors = {
  outbrain: {
    widget: '.js-outbrain',
    container: '.js-outbrain-container'
  },
  merchandising: {
    widget: '.js-container--commercial',
    container: '.js-outbrain-container'
  },
  nonCompliant: {
    widget: '.js-outbrain',
    container: '.js-outbrain-container'
  }
};

var build = function build(codes, breakpoint) {
  var html = outbrainTpl({
    widgetCode: codes.code || codes.image || ''
  }); // Add another line containing text only

  if (breakpoint !== 'mobile' && codes.text) {
    html += outbrainTpl({
      widgetCode: codes.text
    });
  }

  return html;
};
/*
  Load the outbrain widget according to target and to the visibility of
  the contribution epic

  Valid values for target are 'defaults', 'merchandising', 'nonCompliant'
  
  When the target is nonCompliant, you are encouraged to pass the contributionEpicVisible
  parameter as this will have an effect on the new outbrain ID mapping (as of end 2018).

 */


var load = function load(target) {
  var contributionEpicVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var outbrainType = target && target in selectors ? target : 'defaults';
  var $outbrain = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])(selectors.outbrain.widget);
  var $container = Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])(selectors.outbrain.container, $outbrain[0]);
  var breakpoint = Object(lib_detect__WEBPACK_IMPORTED_MODULE_3__["getBreakpoint"])();
  var shouldUseNewOutbrainCodes = Object(common_modules_experiments_utils_js__WEBPACK_IMPORTED_MODULE_5__["getTestVariantId"])('CommercialOutbrainNewids') === 'variant';

  var widgetCodes = function () {
    if (shouldUseNewOutbrainCodes) {
      return Object(_outbrain_codes_new__WEBPACK_IMPORTED_MODULE_7__["getCode"])({
        outbrainType: outbrainType,
        contributionEpicVisible: contributionEpicVisible,
        section: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.section', ''),
        breakpoint: breakpoint
      });
    }

    return Object(_outbrain_codes__WEBPACK_IMPORTED_MODULE_6__["getCode"])({
      outbrainType: outbrainType,
      section: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.section', ''),
      breakpoint: breakpoint
    });
  }();

  if (shouldUseNewOutbrainCodes) {
    console.log('OUTBRAIN -NEW widget code is ', widgetCodes);
  }

  var widgetHtml = build(widgetCodes, breakpoint);

  if ($container.length) {
    return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_2__["default"].write(function () {
      if (outbrainType === 'merchandising') {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_0__["default"])(selectors.merchandising.widget).replaceWith($outbrain[0]);
      }

      $container.append(widgetHtml);
      $outbrain.css('display', 'block');
    }).then(function () {
      Object(_outbrain_tracking__WEBPACK_IMPORTED_MODULE_8__["tracking"])({
        widgetId: widgetCodes.code || widgetCodes.image
      });
      Object(lib_load_script__WEBPACK_IMPORTED_MODULE_4__["loadScript"])(outbrainUrl);
    });
  }

  return Promise.resolve();
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-sections.js":
/*!**************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-sections.js ***!
  \**************************************************************************************************/
/*! exports provided: getSection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSection", function() { return getSection; });
// these are considered as 'news' section for outbrain purpose.
var newsSections = ['politics', 'world', 'business', 'commentisfree'];
/* 
   Returns the 'outbrain' section ('news' or 'default') according
   to the given Guardian section (could be any guardian section)
*/

var getSection = function getSection(guardianSection) {
  // Make things case insensitive
  var lcGuardianSection = guardianSection.toLowerCase(); // Section matches regex '/news/' or is an outbrain purpose 'news section'

  return /news/.test(lcGuardianSection) || newsSections.includes(lcGuardianSection) ? 'news' : 'defaults';
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-tracking.js":
/*!**************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-tracking.js ***!
  \**************************************************************************************************/
/*! exports provided: tracking */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tracking", function() { return tracking; });
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ophan/ng */ "./node_modules/ophan-tracker-js/build/ophan.ng.js");
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ophan_ng__WEBPACK_IMPORTED_MODULE_0__);


var tracking = function tracking(trackingObj) {
  ophan_ng__WEBPACK_IMPORTED_MODULE_0___default.a.record({
    outbrain: trackingObj
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain.js":
/*!*****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain.js ***!
  \*****************************************************************************************/
/*! exports provided: getOutbrainComplianceTargeting, initOutbrain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOutbrainComplianceTargeting", function() { return getOutbrainComplianceTargeting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initOutbrain", function() { return initOutbrain; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/check-mediator */ "./static/src/javascripts/projects/common/modules/check-mediator.js");
/* harmony import */ var _outbrain_load__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./outbrain-load */ "./static/src/javascripts/projects/commercial/modules/third-party-tags/outbrain-load.js");





var noMerchSlotsExpected = function noMerchSlotsExpected() {
  return (// Loading Outbrain is dependent on successful return of high relevance component
    // from DFP. AdBlock is blocking DFP calls so we are not getting any response and thus
    // not loading Outbrain. As Outbrain is being partially loaded behind the adblock we can
    // make the call instantly when we detect adBlock in use.
    lib_detect__WEBPACK_IMPORTED_MODULE_1__["adblockInUse"].then(function (isUse) {
      return !document.getElementById('dfp-ad--merchandising-high') || !!isUse;
    })
  );
}; // These are the on-page conditions which influence the outbrain load. We don't need to wait for DFP to find the value of these.


var getOutbrainPageConditions = function getOutbrainPageConditions() {
  return Promise.all([Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__["waitForCheck"])('isOutbrainDisabled'), noMerchSlotsExpected(), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__["waitForCheck"])('isUserInContributionsAbTest'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__["waitForCheck"])('isStoryQuestionsOnPage')]).then(function (_ref) {
    var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 5),
        outbrainDisabled = _ref2[0],
        noMerchSlots = _ref2[1],
        contributions = _ref2[2],
        email = _ref2[3],
        story = _ref2[4];

    return {
      outbrainEnabled: !outbrainDisabled,
      noMerchSlotsExpected: noMerchSlots,
      contributionsTestVisible: contributions,
      emailTestVisible: email,
      storyQuestionsVisible: story
    };
  });
};

var getOutbrainDfpConditions = function getOutbrainDfpConditions() {
  return Promise.all([Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__["waitForCheck"])('isOutbrainBlockedByAds'), Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_2__["waitForCheck"])('isOutbrainMerchandiseCompliant')]).then(function (_ref3) {
    var _ref4 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref3, 2),
        blockedByAds = _ref4[0],
        merchandiseCompliant = _ref4[1];

    return {
      blockedByAds: blockedByAds,
      useMerchandiseAdSlot: merchandiseCompliant
    };
  });
};

var getOutbrainComplianceTargeting = function getOutbrainComplianceTargeting() {
  return getOutbrainPageConditions().then(function (pageConditions) {
    if (pageConditions.contributionsTestVisible || pageConditions.emailTestVisible || pageConditions.storyQuestionsVisible || !pageConditions.outbrainEnabled) {
      // This key value should be read as "the outbrain load cannot be compliant"
      // (it could be non-compliant, or not loaded at all).
      return new Map([['outbrain-compliant', 'false']]);
    }

    return new Map();
  });
};
/*
 Outbrain loading behaviour follows the truth table below. This module uses a number of checks
 to determine what kind of outbrain component to show, if any.

 outbrain | no high-merch slot OR | high priority ad | low priority ad | contributions | email   | story     |  outbrain
 enabled  | ad blocker enabled    | loaded           | loaded          | ab test       | ab test | question  |  decision
---------------------------------------------------------------------------------------------------------------------------
  false             n/a                 n/a               n/a              n/a           n/a        n/a       no-outbrain
  true              true                n/a               n/a              false         false      false     compliant
  true              true                n/a               n/a              true          n/a        n/a       non-compliant
  true              true                n/a               n/a              false         true       n/a       non-compliant
  true              true                n/a               n/a              false         false      true      non-compliant
  true              false               true              true             n/a           n/a        n/a       no-outbrain
  true              false               true              false            n/a           n/a        n/a       merchandising
  true              false               false             n/a              true          n/a        n/a       non-compliant
  true              false               false             n/a              false         true       n/a       non-compliant
  true              false               false             n/a              false         false      true      non-compliant
  true              false               false             n/a              false         false      false     compliant
*/

var initOutbrain = function initOutbrain() {
  return getOutbrainPageConditions().then(function (pageConditions) {
    if (!pageConditions.outbrainEnabled) {
      return;
    }

    var contributionVisible = pageConditions.contributionsTestVisible;
    var editorialTests = contributionVisible || pageConditions.emailTestVisible || pageConditions.storyQuestionsVisible;

    if (pageConditions.noMerchSlotsExpected) {
      if (editorialTests) {
        Object(_outbrain_load__WEBPACK_IMPORTED_MODULE_3__["load"])('nonCompliant', contributionVisible);
      } else {
        Object(_outbrain_load__WEBPACK_IMPORTED_MODULE_3__["load"])('defaults');
      }
    } else {
      // only wait for dfp conditions if we really have to.
      return getOutbrainDfpConditions().then(function (dfpConditions) {
        if (dfpConditions.blockedByAds) {
          return;
        }

        if (dfpConditions.useMerchandiseAdSlot) {
          Object(_outbrain_load__WEBPACK_IMPORTED_MODULE_3__["load"])('merchandising');
        } else if (editorialTests) {
          Object(_outbrain_load__WEBPACK_IMPORTED_MODULE_3__["load"])('nonCompliant', contributionVisible);
        } else {
          Object(_outbrain_load__WEBPACK_IMPORTED_MODULE_3__["load"])('defaults');
        }
      });
    }
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/plista.js":
/*!***************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/plista.js ***!
  \***************************************************************************************/
/*! exports provided: plista */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plista", function() { return module; });
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! commercial/modules/dfp/track-ad-render */ "./static/src/javascripts/projects/commercial/modules/dfp/track-ad-render.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var lib_load_script__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/load-script */ "./static/src/javascripts/lib/load-script.js");







var adblockInUse = lib_detect__WEBPACK_IMPORTED_MODULE_3__["adblockInUse"];

var plistaTpl = function plistaTpl(_ref) {
  var widgetName = _ref.widgetName;
  return "\n    <div class=\"PLISTA\" data-ob-template=\"guardian\">\n        <div data-display=\"plista_widget_".concat(widgetName, "\"></div>\n    </div>\n");
};

var selectors = {
  container: '.js-plista-container'
};
var module = {};

var loadInstantly = function loadInstantly() {
  return adblockInUse.then(function (inUse) {
    return !document.getElementById('dfp-ad--merchandising-high') || inUse;
  });
}; // a modification of the code provided by Plista; altered to be a lazy load rather than during DOM construction


var embed = function embed(publickey, widgetName, geo, u, categories) {
  var name = "PLISTA_".concat(publickey);
  var lib = window[name];
  var $container = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])(selectors.container);
  $container.append(plistaTpl({
    widgetName: widgetName
  }));
  $container.css('display', 'block');

  if (!lib || !lib.publickey) {
    window[name] = {
      publickey: publickey,
      widgets: [{
        name: widgetName,
        pre: u
      }],
      geo: geo,
      categories: categories,
      dataMode: 'data-display'
    };
    Object(lib_load_script__WEBPACK_IMPORTED_MODULE_6__["loadScript"])("//static-au.plista.com/async/".concat(name, ".js"));
  } else {
    lib.widgets.push({
      name: widgetName,
      pre: u
    });
  }
};

module.load = function () {
  fastdom__WEBPACK_IMPORTED_MODULE_0___default.a.write(function () {
    embed(lib_config__WEBPACK_IMPORTED_MODULE_2__["default"].page.plistaPublicApiKey, 'innerArticle', 'au');
  });
};

module.init = function () {
  if (common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_5__["commercialFeatures"].outbrain) {
    return loadInstantly().then(function (inUse) {
      if (inUse) {
        module.load();
      } else {
        return Object(commercial_modules_dfp_track_ad_render__WEBPACK_IMPORTED_MODULE_4__["trackAdRender"])('dfp-ad--merchandising-high').then(function (isLoaded) {
          if (!isLoaded) {
            module.load();
          }
        });
      }
    });
  }

  return Promise.resolve(false);
};



/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/remarketing.js":
/*!********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/remarketing.js ***!
  \********************************************************************************************/
/*! exports provided: remarketing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remarketing", function() { return remarketing; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var onLoad = function onLoad() {
  window.google_trackConversion({
    google_conversion_id: 971225648,
    google_custom_params: window.google_tag_params,
    google_remarketing_only: true
  });
};

var remarketing = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.remarketing,
  url: '//www.googleadservices.com/pagead/conversion_async.js',
  onLoad: onLoad
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/simple-reach.js":
/*!*********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/simple-reach.js ***!
  \*********************************************************************************************/
/*! exports provided: simpleReach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simpleReach", function() { return simpleReach; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");

var shouldRun = !lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isFront && lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.simpleReach && lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isPaidContent;
var simpleReachUrl = '';

if (shouldRun) {
  var authors = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.author.split(',');
  var channels = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.sectionName.split(',');
  var keywords = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.keywords.split(','); // We can't ditch the dangling underscores as SimpleReach needs this parameter, see:
  // http://docs.simplereach.com/implementation-1/standard-implementation
  // eslint-disable-next-line no-underscore-dangle

  window.__reach_config = {
    pid: '58ff7f3a736b795c10004930',
    title: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.headline,
    date: new Date(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.webPublicationDate),
    authors: authors,
    channels: channels,
    tags: keywords,
    article_id: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.pageId,
    ignore_errors: false
  };
  simpleReachUrl = '//d8rk54i4mohrb.cloudfront.net/js/reach.js';
}

var simpleReach = {
  shouldRun: shouldRun,
  url: simpleReachUrl
};

/***/ }),

/***/ "./static/src/javascripts/projects/commercial/modules/third-party-tags/tourism-australia.js":
/*!**************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/commercial/modules/third-party-tags/tourism-australia.js ***!
  \**************************************************************************************************/
/*! exports provided: tourismAustralia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tourismAustralia", function() { return tourismAustralia; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var getUrl = function getUrl(location) {
  var taPartner = 'partner:guardian-uk';
  var taAccount = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isDev ? 'tuata-dev-internal' : 'tuatourism-australia-global';
  var taPageName = "".concat(taPartner, ":").concat(location.pathname);
  var taServer = location.hostname;
  var taUrl = location.href;
  var taCachebreak = new Date().getTime();
  return "//tourismaustralia.sc.omtrdc.net/b/ss/".concat(taAccount, "/1/H.26.2/s").concat(taCachebreak, "?AQB=1&ndh=0&ns=tourismaustralia&pageName=").concat(encodeURIComponent(taPageName), "&g= ").concat(encodeURIComponent(taUrl), "&server=").concat(encodeURIComponent(taServer), "&v11=").concat(encodeURIComponent(taPartner), "&AQE=1");
};

var shouldRun = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.section === 'ashes-australia-travel' && lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.tourismAustralia;
var url = getUrl(window.location);
var tourismAustralia = {
  shouldRun: shouldRun,
  url: url,
  useImage: true
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/analytics/beacon.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/analytics/beacon.js ***!
  \****************************************************************************/
/*! exports provided: fire, postJson */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fire", function() { return fire; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postJson", function() { return postJson; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fetch */ "./static/src/javascripts/lib/fetch.js");



var fire = function fire(path) {
  var img = new Image();
  img.src = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.beaconUrl') + path;
  return img;
};

var postJson = function postJson(path, jsonString) {
  var url = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('page.beaconUrl', '').replace(/^\/\//, "".concat(window.location.protocol, "//")) + path;
  Object(lib_fetch__WEBPACK_IMPORTED_MODULE_1__["default"])(url, {
    method: 'post',
    header: {
      'Content-Type': 'application/json'
    },
    body: jsonString,
    mode: 'cors'
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/analytics/google.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/analytics/google.js ***!
  \****************************************************************************/
/*! exports provided: trackNonClickInteraction, trackSamePageLinkClick, trackExternalLinkClick, trackSponsorLogoLinkClick, trackNativeAdLinkClick, trackPerformance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackNonClickInteraction", function() { return trackNonClickInteraction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackSamePageLinkClick", function() { return trackSamePageLinkClick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackExternalLinkClick", function() { return trackExternalLinkClick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackSponsorLogoLinkClick", function() { return trackSponsorLogoLinkClick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackNativeAdLinkClick", function() { return trackNativeAdLinkClick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackPerformance", function() { return trackPerformance; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");


var trackerName = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('googleAnalytics.trackers.editorial');
var send = "".concat(trackerName, ".send");

var getTextContent = function getTextContent(el) {
  return (el.textContent || '').trim();
};

var trackNonClickInteraction = function trackNonClickInteraction(actionName) {
  window.ga(send, 'event', 'Interaction', actionName, {
    nonInteraction: true // to avoid affecting bounce rate

  });
};

var trackSamePageLinkClick = function trackSamePageLinkClick(target, tag) {
  window.ga(send, 'event', 'click', 'in page', tag, {
    nonInteraction: true,
    // to avoid affecting bounce rate
    dimension13: getTextContent(target)
  });
};

var trackExternalLinkClick = function trackExternalLinkClick(target, tag) {
  var data = {
    dimension13: getTextContent(target)
  };
  var targetURL = target.getAttribute('href');

  if (targetURL) {
    data.dimension48 = targetURL;
  }

  window.ga(send, 'event', 'click', 'external', tag, data);
};

var trackSponsorLogoLinkClick = function trackSponsorLogoLinkClick(target) {
  var sponsorName = target.dataset.sponsor;
  window.ga(send, 'event', 'click', 'sponsor logo', sponsorName, {
    nonInteraction: true
  });
};

var trackNativeAdLinkClick = function trackNativeAdLinkClick(slotName, tag) {
  window.ga(send, 'event', 'click', 'native ad', tag, {
    nonInteraction: true,
    dimension25: slotName
  });
};

var sendPerformanceEvent = function sendPerformanceEvent(event) {
  var boostGaUserTimingFidelityMetrics = {
    standardStart: 'metric18',
    standardEnd: 'metric19',
    commercialStart: 'metric20',
    commercialEnd: 'metric21',
    enhancedStart: 'metric22',
    enhancedEnd: 'metric23'
  };
  window.ga(send, 'timing', event.timingCategory, event.timingVar, event.timeSincePageLoad, event.timingLabel);
  /*
     send performance events as normal events too,
     so we can avoid the 0.1% sampling that affects timing events
  */

  if (lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('switches.boostGaUserTimingFidelity')) {
    // these are our own metrics that map to our timing events
    var metric = boostGaUserTimingFidelityMetrics[event.timingVar];
    var fields = {
      nonInteraction: true,
      dimension44: metric // dimension44 is dotcomPerformance

    };
    fields[metric] = event.timeSincePageLoad;
    window.ga(send, 'event', event.timingCategory, event.timingVar, event.timingLabel, event.timeSincePageLoad, fields);
  }
};
/*
   Track important user timing metrics so that we can be notified and measure
   over time in GA
   https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings
   Tracks into Behaviour > Site Speed > User Timings in GA
*/


var trackPerformance = function trackPerformance(timingCategory, timingVar, timingLabel) {
  if (window.performance && window.performance.now && window.ga) {
    var sendDeferredEventQueue = function sendDeferredEventQueue() {
      lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].googleAnalytics.timingEvents.map(sendPerformanceEvent);
      lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].off('modules:ga:ready', sendDeferredEventQueue);
    };

    var timeSincePageLoad = Math.round(window.performance.now());
    var event = {
      timingCategory: timingCategory,
      timingVar: timingVar,
      timeSincePageLoad: timeSincePageLoad,
      timingLabel: timingLabel
    };

    if (window.ga) {
      sendPerformanceEvent(event);
    } else {
      lib_mediator__WEBPACK_IMPORTED_MODULE_1__["default"].on('modules:ga:ready', sendDeferredEventQueue);
      lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('googleAnalytics.timingEvents').push(event);
    }
  }
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/analytics/mvt-cookie.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/analytics/mvt-cookie.js ***!
  \********************************************************************************/
/*! exports provided: overwriteMvtCookie, getMvtValue, initMvtCookie, incrementMvtCookie, decrementMvtCookie, getMvtNumValues */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "overwriteMvtCookie", function() { return overwriteMvtCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMvtValue", function() { return getMvtValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMvtCookie", function() { return initMvtCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "incrementMvtCookie", function() { return incrementMvtCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decrementMvtCookie", function() { return decrementMvtCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMvtNumValues", function() { return getMvtNumValues; });
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");

var MULTIVARIATE_ID_COOKIE = 'GU_mvt_id'; // The full mvt ID interval is [1, 1000000]

var MAX_CLIENT_MVT_ID = 1000000; // For test purposes only.

var overwriteMvtCookie = function overwriteMvtCookie(testId) {
  return Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(MULTIVARIATE_ID_COOKIE, String(testId), 365);
};
var getMvtValue = function getMvtValue() {
  return Number(Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(MULTIVARIATE_ID_COOKIE));
}; // For test purposes only.
// Since it's set by Fastly, sometimes it's not set in dev,
// but it's needed for certain A/B tests to work properly.

var initMvtCookie = function initMvtCookie() {
  if (!Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(MULTIVARIATE_ID_COOKIE)) {
    Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(MULTIVARIATE_ID_COOKIE, '1');
  }
};
var incrementMvtCookie = function incrementMvtCookie() {
  var mvtId = parseInt(Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])('GU_mvt_id'), 10);

  if (mvtId) {
    if (mvtId === MAX_CLIENT_MVT_ID) {
      // Wrap back to 1 if it would exceed the max
      overwriteMvtCookie(1);
    } else {
      overwriteMvtCookie(mvtId + 1);
    }
  }
};
var decrementMvtCookie = function decrementMvtCookie() {
  var mvtId = parseInt(Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])('GU_mvt_id'), 10);

  if (mvtId) {
    if (mvtId === 0) {
      // Wrap back to max if it would be less than 0
      overwriteMvtCookie(MAX_CLIENT_MVT_ID);
    } else {
      overwriteMvtCookie(mvtId - 1);
    }
  }
};
var getMvtNumValues = function getMvtNumValues() {
  return Number(MAX_CLIENT_MVT_ID);
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/analytics/send-privacy-prefs.js":
/*!****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/analytics/send-privacy-prefs.js ***!
  \****************************************************************************************/
/*! exports provided: onConsentSet, trackConsentCookies, upAlertViewCount, getAlertViewCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onConsentSet", function() { return onConsentSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackConsentCookies", function() { return trackConsentCookies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "upAlertViewCount", function() { return upAlertViewCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAlertViewCount", function() { return getAlertViewCount; });
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ophan/ng */ "./node_modules/ophan-tracker-js/build/ophan.ng.js");
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ophan_ng__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/user-prefs */ "./static/src/javascripts/projects/common/modules/user-prefs.js");


var alertViewCount = 'first-pv-consent.lifetime-views';

var getAlertViewCount = function getAlertViewCount() {
  return parseInt(common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_1__["default"].get(alertViewCount) || 0, 10);
};

var upAlertViewCount = function upAlertViewCount() {
  common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_1__["default"].set(alertViewCount, getAlertViewCount() + 1);
  ophan_ng__WEBPACK_IMPORTED_MODULE_0___default.a.record({
    component: "privacy-prefs",
    value: "lifetime-alert-views : ".concat(getAlertViewCount())
  });
};

var resetAlertViewCount = function resetAlertViewCount() {
  common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_1__["default"].set(alertViewCount, 0);
};

var onConsentSet = function onConsentSet(consent, status) {
  ophan_ng__WEBPACK_IMPORTED_MODULE_0___default.a.record({
    component: "privacy-prefs",
    value: "set : ".concat(String(status), " : ").concat(consent.cookie.toLowerCase())
  });
  resetAlertViewCount();
};

var trackConsentCookies = function trackConsentCookies(allConsentsWithState) {
  allConsentsWithState.forEach(function (consentWithState) {
    ophan_ng__WEBPACK_IMPORTED_MODULE_0___default.a.record({
      component: "privacy-prefs",
      value: "pv : ".concat(String(consentWithState.state), " : ").concat(consentWithState.consent.cookie.toLowerCase())
    });
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/article/space-filler.js":
/*!********************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/article/space-filler.js ***!
  \********************************************************************************/
/*! exports provided: spaceFiller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spaceFiller", function() { return spaceFiller; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lib_raven__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/raven */ "./static/src/javascripts/lib/raven.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var common_modules_spacefinder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/spacefinder */ "./static/src/javascripts/projects/common/modules/spacefinder.js");







var onError = function onError(e) {
  // e.g. if writer fails
  lib_raven__WEBPACK_IMPORTED_MODULE_3__["default"].captureException(e);
  return false;
};

var SpaceFiller =
/*#__PURE__*/
function () {
  function SpaceFiller() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SpaceFiller);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "queue", void 0);

    this.queue = Promise.resolve();
  }
  /**
   * A safer way of using spacefinder.
   * Given a set of spacefinder rules, applies a writer to the first matching paragraph.
   * Uses fastdom to avoid layout-thrashing, but queues up asynchronous writes to avoid race conditions. We don't
   * seek a slot for a new component until all the other component writes have finished.
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SpaceFiller, [{
    key: "fillSpace",
    value: function fillSpace(rules, writer, options) {
      var onSpacesFound = function onSpacesFound(paragraphs) {
        return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_4__["default"].write(function () {
          return writer(paragraphs);
        });
      };

      var onNoSpacesFound = function onNoSpacesFound(ex) {
        if (ex instanceof common_modules_spacefinder__WEBPACK_IMPORTED_MODULE_5__["SpaceError"]) {
          return false;
        }

        throw ex;
      };

      var insertNextContent = function insertNextContent() {
        return Object(common_modules_spacefinder__WEBPACK_IMPORTED_MODULE_5__["findSpace"])(rules, options).then(onSpacesFound, onNoSpacesFound);
      };

      this.queue = this.queue.then(insertNextContent).catch(onError);
      return this.queue;
    }
  }]);

  return SpaceFiller;
}();

var spaceFiller = new SpaceFiller();


/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/async-call-merger.js":
/*!*****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/async-call-merger.js ***!
  \*****************************************************************************/
/*! exports provided: mergeCalls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeCalls", function() { return mergeCalls; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);


/**
 * This module is used to merge calls to async functions that use callbacks. Ensuring the target function is
 * called once only but the result is passed to all the call backs that require it.
 */

/**
 * Creates a function that will merge calls to the supplied target function
 */
var mergeCalls = function mergeCalls(targetFunction) {
  var callbacks;
  var callbackArguments;
  var status;

  var reset = function reset() {
    callbacks = [];
    status = 'init';
    callbackArguments = [];
  };

  var targetCallbackHandler = function targetCallbackHandler() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callbackArguments = args;
    status = 'complete';
    callbacks.forEach(function (callback) {
      callback.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(callbackArguments));
    });
  };

  var callMergingFunction = function callMergingFunction(callback) {
    if (status === 'init') {
      status = 'waiting';
      callbacks.push(callback);
      targetFunction(targetCallbackHandler);
    } else if (status === 'waiting') {
      callbacks.push(callback);
    } else {
      callback.apply(void 0, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(callbackArguments));
    }
  };

  reset();
  callMergingFunction.reset = reset;
  return callMergingFunction;
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/check-mediator-checks.js":
/*!*********************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/check-mediator-checks.js ***!
  \*********************************************************************************/
/*! exports provided: checks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checks", function() { return checks; });
var checks = ['isOutbrainDisabled', 'isUserInContributionsAbTest', 'isUserNotInContributionsAbTest', 'isUserInEmailAbTest', 'emailCanRunPreCheck', 'listCanRun', 'emailInArticleOutbrainEnabled', 'hasHighPriorityAdLoaded', 'hasLowPriorityAdLoaded', 'hasLowPriorityAdNotLoaded', 'isStoryQuestionsOnPage', 'isOutbrainBlockedByAds', 'isOutbrainMerchandiseCompliant', 'isOutbrainMerchandiseCompliantOrBlockedByAds', 'emailCanRun', 'emailCanRunPostCheck'];

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/check-mediator.js":
/*!**************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/check-mediator.js ***!
  \**************************************************************************/
/*! exports provided: initCheckMediator, resolveCheck, rejectCheck, waitForCheck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCheckMediator", function() { return initCheckMediator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveCheck", function() { return resolveCheck; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rejectCheck", function() { return rejectCheck; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "waitForCheck", function() { return waitForCheck; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _check_mediator_checks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check-mediator-checks */ "./static/src/javascripts/projects/common/modules/check-mediator-checks.js");


 // registeredChecks will store references to instances of DefferedCheck

var registeredChecks = {};

var DeferredCheck = function DeferredCheck() {
  var _this = this;

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, DeferredCheck);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "complete", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "resolve", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "reject", void 0);

  this.complete = new Promise(function (resolve, reject) {
    _this.resolve = resolve;
    _this.reject = reject;
  });
};

var registerCheck = function registerCheck(id) {
  if (!registeredChecks[id]) {
    registeredChecks[id] = new DeferredCheck();
  }

  return registeredChecks[id];
};

var resolveCheck = function resolveCheck(id, result) {
  var check = registeredChecks[id];

  if (check) {
    check.resolve(result);
  }
};

var rejectCheck = function rejectCheck(id, reason) {
  var check = registeredChecks[id];

  if (check) {
    check.reject(reason);
  }
};

var waitForCheck = function waitForCheck(id) {
  var check = registeredChecks[id];

  if (check) {
    return check.complete;
  }

  return Promise.reject(new Error("No deferred check with id ".concat(id)));
};

var initCheckMediator = function initCheckMediator() {
  registeredChecks = {};
  _check_mediator_checks__WEBPACK_IMPORTED_MODULE_2__["checks"].forEach(registerCheck);
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-copy.js":
/*!****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/acquisitions-copy.js ***!
  \****************************************************************************************/
/*! exports provided: articleCopy, liveblogCopy, getEpicParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "articleCopy", function() { return articleCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "liveblogCopy", function() { return liveblogCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEpicParams", function() { return getEpicParams; });
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");


var controlCopyParagraphOne = '&hellip; we have a small favour to ask. More people are reading the Guardian than ever but advertising revenues across the media are falling fast. And unlike many news organisations, we haven’t put up a paywall &ndash; we want to keep our journalism as open as we can. So you can see why we need to ask for your help.';
var controlCopyParagraphTwo = 'The Guardian is editorially independent, meaning we set our own agenda. Our journalism is free from commercial bias and not influenced by billionaire owners, politicians or shareholders. No one edits our Editor. No one steers our opinion. This is important because it enables us to give a voice to the voiceless, challenge the powerful and hold them to account. It’s what makes us different to so many others in the media, at a time when factual, honest reporting is critical.';
var controlCopyParagraphThree = 'If everyone who reads our reporting, who likes it, helps to support it, our future would be much more secure.'; // used when Google Doc control cannot be fetched

var articleCopy = {
  heading: 'Since you’re here &hellip;',
  paragraphs: [controlCopyParagraphOne, controlCopyParagraphTwo, controlCopyParagraphThree],
  highlightedText: "For as little as ".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])(), "1, you can support the Guardian &ndash; and it only takes a minute. Thank you.")
};
var liveblogCopy = {
  paragraphs: ['Since you’re here &hellip; we have a small favour to ask. Three years ago we set out to make The Guardian sustainable by deepening our relationship with our readers. We decided to seek an approach that would allow us to keep our journalism open and accessible to everyone, regardless of where they live or what they can afford.', 'More than one million readers have now supported our independent, investigative journalism through contributions, membership or subscriptions. We want to thank you for all of your support. But we have to maintain and build on that support for every year to come.', 'The Guardian is editorially independent – our journalism is free from commercial bias and not influenced by billionaire owners, politicians or shareholders. No one edits our editor. No one steers our opinion.', 'If everyone who reads our reporting, who likes it, helps to support it, our future would be much more secure.'],
  highlightedText: "For as little as ".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])(), "1, you can support the Guardian \u2013 and it only takes a minute. Thank you.")
};
var getEpicParams = function getEpicParams(googleDocJson, sheetName) {
  var rows = googleDocJson && googleDocJson.sheets && googleDocJson.sheets[sheetName];
  var firstRow = rows && rows[0];

  if (!(firstRow && firstRow.heading && firstRow.paragraphs && firstRow.highlightedText)) {
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(new Error("Could not find epic properties for sheetName=".concat(sheetName)), {
      feature: 'epic-test'
    });
    return articleCopy;
  }

  return {
    heading: firstRow.heading,
    paragraphs: rows.map(function (row) {
      return row.paragraphs;
    }),
    highlightedText: firstRow.highlightedText.replace(/%%CURRENCY_SYMBOL%%/g, Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])())
  };
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-ophan.js":
/*!*****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/acquisitions-ophan.js ***!
  \*****************************************************************************************/
/*! exports provided: submitComponentEvent, submitInsertEvent, submitViewEvent, submitClickEvent, updateAcquisitionData, addReferrerData, addTrackingCodesToUrl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitComponentEvent", function() { return submitComponentEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitInsertEvent", function() { return submitInsertEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitViewEvent", function() { return submitViewEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitClickEvent", function() { return submitClickEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateAcquisitionData", function() { return updateAcquisitionData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addReferrerData", function() { return addReferrerData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addTrackingCodesToUrl", function() { return addTrackingCodesToUrl; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ophan/ng */ "./node_modules/ophan-tracker-js/build/ophan.ng.js");
/* harmony import */ var ophan_ng__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ophan_ng__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");




var ACQUISITION_DATA_FIELD = 'acquisitionData';
var submitComponentEvent = function submitComponentEvent(componentEvent) {
  ophan_ng__WEBPACK_IMPORTED_MODULE_1___default.a.record({
    componentEvent: componentEvent
  });
};
var submitInsertEvent = function submitInsertEvent(componentEvent) {
  return submitComponentEvent(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, componentEvent, {
    action: 'INSERT'
  }));
};
var submitViewEvent = function submitViewEvent(componentEvent) {
  return submitComponentEvent(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, componentEvent, {
    action: 'VIEW'
  }));
};
var submitClickEvent = function submitClickEvent(componentEvent) {
  return submitComponentEvent(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, componentEvent, {
    action: 'CLICK'
  }));
}; // Treats url as immutable, i.e. returns a new object
// rather than modifying the existing one in place.
// If the url already has an acquisitionData JSON parameter,
// it will add or overwrite individual properties rather than
// replacing the entire param.

var updateAcquisitionData = function updateAcquisitionData(url, acquisitionData) {
  var existingAcquisitionData;

  try {
    var existingAcquisitionJsonString = url.searchParams.get(ACQUISITION_DATA_FIELD);
    if (!existingAcquisitionJsonString) return url;
    existingAcquisitionData = JSON.parse(existingAcquisitionJsonString);
  } catch (e) {
    return url;
  } // make a copy


  var newUrl = new URL(url.toString());
  newUrl.searchParams.set(ACQUISITION_DATA_FIELD, JSON.stringify(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, existingAcquisitionData, acquisitionData)));
  return newUrl;
};
var addReferrerData = function addReferrerData(acquisitionData // Note: the current page is the referrer data in the context of the acquisition.
) {
  return _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, acquisitionData, {
    referrerPageviewId: lib_config__WEBPACK_IMPORTED_MODULE_2__["default"].get('ophan.pageViewId'),
    referrerUrl: window.location.href.split('?')[0]
  });
};
var addTrackingCodesToUrl = function addTrackingCodesToUrl(_ref) {
  var base = _ref.base,
      componentType = _ref.componentType,
      componentId = _ref.componentId,
      campaignCode = _ref.campaignCode,
      abTest = _ref.abTest;
  var acquisitionData = addReferrerData({
    source: 'GUARDIAN_WEB',
    componentId: componentId,
    componentType: componentType,
    campaignCode: campaignCode,
    abTest: abTest
  });
  var params = {
    REFPVID: lib_config__WEBPACK_IMPORTED_MODULE_2__["default"].get('ophan.pageViewId') || 'not_found',
    INTCMP: campaignCode,
    acquisitionData: JSON.stringify(acquisitionData)
  };
  return "".concat(base).concat(base.includes('?') ? '&' : '?').concat(Object(lib_url__WEBPACK_IMPORTED_MODULE_3__["constructQuery"])(params));
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js":
/*!********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js ***!
  \********************************************************************************************/
/*! exports provided: logView, viewsInPreviousDays, overallNumberOfViews, clearViewLog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logView", function() { return logView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewsInPreviousDays", function() { return viewsInPreviousDays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "overallNumberOfViews", function() { return overallNumberOfViews; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearViewLog", function() { return clearViewLog; });
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");

var viewKey = 'gu.contributions.views';
var viewLog = lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].get(viewKey) || [];
var maxLogEntries = 50;
/**
 * Log that the user has seen an Epic test so we can limit how many times they see it.
 * The number of entries is limited to the number in maxLogEntries.
 *
 * @param testId
 */

var logView = function logView(testId) {
  viewLog.push({
    date: new Date().getTime(),
    testId: testId
  });
  lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].set(viewKey, viewLog.slice(-maxLogEntries));
};

var viewsInPreviousDays = function viewsInPreviousDays(days, testId) {
  var ms = days * 1000 * 60 * 60 * 24;
  var now = new Date().getTime();
  return viewLog.filter(function (view) {
    return (testId ? view.testId === testId : true) && view.date > now - ms;
  }).length;
};

var clearViewLog = function clearViewLog() {
  lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].remove(viewKey);
};

var overallNumberOfViews = function overallNumberOfViews() {
  return viewLog.length;
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js ***!
  \***********************************************************************************/
/*! exports provided: setAdConsentState, getAdConsentState, getAllAdConsentsWithState, allAdConsents, thirdPartyTrackingAdConsent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAdConsentState", function() { return setAdConsentState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAdConsentState", function() { return getAdConsentState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllAdConsentsWithState", function() { return getAllAdConsentsWithState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allAdConsents", function() { return allAdConsents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thirdPartyTrackingAdConsent", function() { return thirdPartyTrackingAdConsent; });
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var common_modules_analytics_send_privacy_prefs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/analytics/send-privacy-prefs */ "./static/src/javascripts/projects/common/modules/analytics/send-privacy-prefs.js");


var cookieExpiryDate = 30 * 18;
var thirdPartyTrackingAdConsent = {
  label: 'Third party tracking',
  cookie: 'GU_TK'
};
var allAdConsents = [thirdPartyTrackingAdConsent];

var setAdConsentState = function setAdConsentState(provider, state) {
  var cookie = [state ? '1' : '0', Date.now()].join('.');
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(provider.cookie, cookie, cookieExpiryDate, true);
  Object(common_modules_analytics_send_privacy_prefs__WEBPACK_IMPORTED_MODULE_1__["onConsentSet"])(provider, state);
};

var getAdConsentState = function getAdConsentState(provider) {
  var cookieRaw = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(provider.cookie);
  if (!cookieRaw) return null;
  var cookieParsed = cookieRaw.split('.')[0];
  if (cookieParsed === '1') return true;
  if (cookieParsed === '0') return false;
  return null;
};

var getAllAdConsentsWithState = function getAllAdConsentsWithState() {
  return allAdConsents.map(function (consent) {
    return {
      consent: consent,
      state: getAdConsentState(consent)
    };
  });
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js":
/*!*******************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/build-page-targeting.js ***!
  \*******************************************************************************************/
/*! exports provided: buildPageTargeting, buildAppNexusTargeting, buildAppNexusTargetingObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildPageTargeting", function() { return buildPageTargeting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildAppNexusTargeting", function() { return buildAppNexusTargeting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildAppNexusTargetingObject", function() { return buildAppNexusTargetingObject; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var common_modules_commercial_krux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/commercial/krux */ "./static/src/javascripts/projects/common/modules/commercial/krux.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var common_modules_commercial_user_ad_targeting__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/commercial/user-ad-targeting */ "./static/src/javascripts/projects/common/modules/commercial/user-ad-targeting.js");
/* harmony import */ var common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/modules/commercial/ad-prefs.lib */ "./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js");
/* harmony import */ var common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/modules/commercial/commercial-features */ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js");
/* harmony import */ var common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! common/modules/experiments/utils */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! commercial/modules/prebid/utils */ "./static/src/javascripts/projects/commercial/modules/prebid/utils.js");
/* harmony import */ var lodash_flattenDeep__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/flattenDeep */ "./node_modules/lodash/flattenDeep.js");
/* harmony import */ var lodash_flattenDeep__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_flattenDeep__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! lodash/pick */ "./node_modules/lodash/pick.js");
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var lodash_pickBy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! lodash/pickBy */ "./node_modules/lodash/pickBy.js");
/* harmony import */ var lodash_pickBy__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(lodash_pickBy__WEBPACK_IMPORTED_MODULE_17__);

//  strict


















var format = function format(keyword) {
  return keyword.replace(/[+\s]+/g, '-').toLowerCase();
}; // flowlint sketchy-null-string:warn


var formatTarget = function formatTarget(target) {
  return target ? format(target).replace(/&/g, 'and').replace(/'/g, '') : null;
};

var abParam = function abParam() {
  var abParticipations = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_12__["getParticipations"])();
  var abParams = [];

  var pushAbParams = function pushAbParams(testName, testValue) {
    if (typeof testValue === 'string' && testValue !== 'notintest') {
      var testData = "".concat(testName, "-").concat(testValue); // DFP key-value pairs accept value strings up to 40 characters long

      abParams.push(testData.substring(0, 40));
    }
  };

  Object.keys(abParticipations).forEach(function (testKey) {
    var testValue = abParticipations[testKey];
    pushAbParams(testKey, testValue.variant);
  });

  if (lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].tests) {
    Object.entries(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].tests).forEach(function (_ref) {
      var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
          testName = _ref2[0],
          testValue = _ref2[1];

      pushAbParams(testName, testValue);
    });
  }

  return abParams;
};

var adtestParams = function adtestParams() {
  var cookieAdtest = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["getCookie"])('adtest');

  if (cookieAdtest) {
    if (cookieAdtest.substring(0, 4) === 'demo') {
      Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["removeCookie"])('adtest');
    }

    return cookieAdtest;
  }
};

var getVisitedValue = function getVisitedValue() {
  var visitCount = lib_storage__WEBPACK_IMPORTED_MODULE_5__["local"].get('gu.alreadyVisited') || 0;

  if (visitCount <= 5) {
    return visitCount.toString();
  } else if (visitCount >= 6 && visitCount <= 9) {
    return '6-9';
  } else if (visitCount >= 10 && visitCount <= 15) {
    return '10-15';
  } else if (visitCount >= 16 && visitCount <= 19) {
    return '16-19';
  } else if (visitCount >= 20 && visitCount <= 29) {
    return '20-29';
  } else if (visitCount >= 30) {
    return '30plus';
  }

  return visitCount.toString();
};

var getReferrer = function getReferrer() {
  var referrerTypes = [{
    id: 'facebook',
    match: 'facebook.com'
  }, {
    id: 'twitter',
    match: 't.co/'
  }, // added (/) because without slash it is picking up reddit.com too
  {
    id: 'googleplus',
    match: 'plus.url.google'
  }, {
    id: 'reddit',
    match: 'reddit.com'
  }, {
    id: 'google',
    match: 'www.google'
  }];
  var matchedRef = referrerTypes.filter(function (referrerType) {
    return Object(lib_detect__WEBPACK_IMPORTED_MODULE_3__["getReferrer"])().indexOf(referrerType.match) > -1;
  })[0] || {};
  return matchedRef.id;
};

var getWhitelistedQueryParams = function getWhitelistedQueryParams() {
  var whiteList = ['0p19G'];
  return lodash_pick__WEBPACK_IMPORTED_MODULE_16___default()(Object(lib_url__WEBPACK_IMPORTED_MODULE_6__["getUrlVars"])(), whiteList);
};

var formatAppNexusTargeting = function formatAppNexusTargeting(obj) {
  return lodash_flattenDeep__WEBPACK_IMPORTED_MODULE_14___default()(Object.keys(obj).filter(function (key) {
    return obj[key] !== '' && obj[key] !== null;
  }).map(function (key) {
    var value = obj[key];
    return Array.isArray(value) ? value.map(function (nestedValue) {
      return "".concat(key, "=").concat(nestedValue);
    }) : "".concat(key, "=").concat(value);
  })).join(',');
};

var buildAppNexusTargetingObject = lodash_once__WEBPACK_IMPORTED_MODULE_15___default()(function (pageTargeting) {
  return Object(commercial_modules_prebid_utils__WEBPACK_IMPORTED_MODULE_13__["removeFalseyValues"])({
    sens: pageTargeting.sens,
    pt1: pageTargeting.url,
    pt2: pageTargeting.edition,
    pt3: pageTargeting.ct,
    pt4: pageTargeting.p,
    pt5: pageTargeting.k,
    pt6: pageTargeting.su,
    pt7: pageTargeting.bp,
    pt8: pageTargeting.x,
    // OpenX cannot handle this being undefined
    pt9: [pageTargeting.gdncrm, pageTargeting.pv, pageTargeting.co, pageTargeting.tn, pageTargeting.slot].join('|')
  });
});
var buildAppNexusTargeting = lodash_once__WEBPACK_IMPORTED_MODULE_15___default()(function (pageTargeting) {
  return formatAppNexusTargeting(buildAppNexusTargetingObject(pageTargeting));
});
var buildPageTargeting = lodash_once__WEBPACK_IMPORTED_MODULE_15___default()(function () {
  var page = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page; //

  var adConsentState = Object(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_10__["getAdConsentState"])(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_10__["thirdPartyTrackingAdConsent"]); // personalised ads targeting

  var paTargeting = adConsentState !== null ? {
    pa: adConsentState ? 't' : 'f'
  } : {};
  var adFreeTargeting = common_modules_commercial_commercial_features__WEBPACK_IMPORTED_MODULE_11__["commercialFeatures"].adFree ? {
    af: 't'
  } : {};
  var pageTargets = Object.assign({
    sens: page.isSensitive ? 't' : 'f',
    x: Object(common_modules_commercial_krux__WEBPACK_IMPORTED_MODULE_7__["getKruxSegments"])(),
    pv: lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('ophan.pageViewId'),
    bp: Object(lib_detect__WEBPACK_IMPORTED_MODULE_3__["getBreakpoint"])(),
    at: adtestParams(),
    si: Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_8__["isUserLoggedIn"])() ? 't' : 'f',
    gdncrm: Object(common_modules_commercial_user_ad_targeting__WEBPACK_IMPORTED_MODULE_9__["getUserSegments"])(),
    ab: abParam(),
    ref: getReferrer(),
    ms: formatTarget(page.source),
    fr: getVisitedValue(),
    // round video duration up to nearest 30 multiple
    vl: page.videoDuration ? (Math.ceil(page.videoDuration / 30.0) * 30).toString() : undefined,
    cc: Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_4__["getSync"])(),
    s: page.section // for reference in a macro, so cannot be extracted from ad unit

  }, page.sharedAdTargeting, paTargeting, adFreeTargeting, getWhitelistedQueryParams()); // filter out empty values

  var pageTargeting = lodash_pickBy__WEBPACK_IMPORTED_MODULE_17___default()(pageTargets, function (target) {
    if (Array.isArray(target)) {
      return target.length > 0;
    }

    return target;
  }); // third-parties wish to access our page targeting, before the googletag script is loaded.

  page.appNexusPageTargeting = buildAppNexusTargeting(pageTargeting); // This can be removed once we get sign-off from third parties who prefer to use appNexusPageTargeting.

  page.pageAdTargeting = pageTargeting;
  return pageTargeting;
});


/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/commercial-features.js":
/*!******************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/commercial-features.js ***!
  \******************************************************************************************/
/*! exports provided: commercialFeatures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commercialFeatures", function() { return commercialFeatures; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/user-features */ "./static/src/javascripts/projects/common/modules/commercial/user-features.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/user-prefs */ "./static/src/javascripts/projects/common/modules/user-prefs.js");






 // Having a constructor means we can easily re-instantiate the object in a test

var CommercialFeatures = function CommercialFeatures() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : lib_config__WEBPACK_IMPORTED_MODULE_2__["default"];

  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CommercialFeatures);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "dfpAdvertising", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "stickyTopBannerAd", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "articleBodyAdverts", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "articleAsideAdverts", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "carrotTrafficDriver", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "videoPreRolls", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "highMerch", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "thirdPartyTags", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "outbrain", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "commentAdverts", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "liveblogAdverts", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "paidforBand", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "asynchronous", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "adFree", void 0);

  // this is used for SpeedCurve tests
  var noadsUrl = window.location.hash.match(/[#&]noads(&.*)?$/);
  var forceAdFree = window.location.hash.match(/[#&]noadsaf(&.*)?$/);
  var externalAdvertising = !noadsUrl && !common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_6__["default"].isOff('adverts');
  var sensitiveContent = config.page.shouldHideAdverts || config.page.section === 'childrens-books-site';
  var isMinuteArticle = config.page.isMinuteArticle;
  var isArticle = config.page.contentType === 'Article';
  var isInteractive = config.page.contentType === 'Interactive';
  var isLiveBlog = config.page.isLiveBlog;
  var isHosted = config.page.isHosted;
  var isIdentityPage = config.page.contentType === 'Identity' || config.page.section === 'identity'; // needed for pages under profile.* subdomain

  var switches = config.switches;
  var isWidePage = Object(lib_detect__WEBPACK_IMPORTED_MODULE_3__["getBreakpoint"])() === 'wide';
  var supportsSticky = document.documentElement && document.documentElement.classList.contains('has-sticky');
  var newRecipeDesign = config.page.showNewRecipeDesign && config.tests.abNewRecipeDesign;
  var isSecureContact = config.get('page.pageId', '').includes('help/ng-interactive/2017/mar/17/contact-the-guardian-securely'); // Feature switches

  this.adFree = !!forceAdFree || Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_4__["isAdFreeUser"])();
  this.dfpAdvertising = switches.commercial && externalAdvertising && !sensitiveContent && !isIdentityPage;
  this.stickyTopBannerAd = !this.adFree && !config.page.disableStickyTopBanner && !supportsSticky;
  this.articleBodyAdverts = this.dfpAdvertising && !this.adFree && !isMinuteArticle && isArticle && !isLiveBlog && !isHosted && !newRecipeDesign;
  this.carrotTrafficDriver = !this.adFree && this.articleBodyAdverts && config.get('switches.carrotTrafficDriver', false) && !config.page.isPaidContent;
  this.videoPreRolls = this.dfpAdvertising && !this.adFree;
  this.highMerch = this.dfpAdvertising && !this.adFree && !isMinuteArticle && !isHosted && !isInteractive && !config.page.isFront && !newRecipeDesign;
  this.thirdPartyTags = externalAdvertising && !isIdentityPage && !isSecureContact;
  this.outbrain = this.dfpAdvertising && !this.adFree && switches.outbrain && !noadsUrl && !sensitiveContent && isArticle && !config.page.isPreview && config.page.showRelatedContent && !(Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_5__["isUserLoggedIn"])() && config.page.commentable);
  this.commentAdverts = this.dfpAdvertising && !this.adFree && !isMinuteArticle && config.switches.enableDiscussionSwitch && config.page.commentable && (!isLiveBlog || isWidePage);
  this.liveblogAdverts = isLiveBlog && this.dfpAdvertising && !this.adFree;
  this.paidforBand = config.page.isPaidContent && !supportsSticky;
};

var commercialFeatures = new CommercialFeatures();

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/contributions-google-docs.js":
/*!************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/contributions-google-docs.js ***!
  \************************************************************************************************/
/*! exports provided: getEpicGoogleDoc, getBannerGoogleDoc, googleDocEpicControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEpicGoogleDoc", function() { return getEpicGoogleDoc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBannerGoogleDoc", function() { return getBannerGoogleDoc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "googleDocEpicControl", function() { return googleDocEpicControl; });
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/acquisitions-copy */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-copy.js");


var epicGoogleDocUrl = 'https://interactive.guim.co.uk/docsdata/1fy0JolB1bf1IEFLHGHfUYWx-niad7vR9K954OpTOvjE.json';
var bannerGoogleDocUrl = 'https://interactive.guim.co.uk/docsdata/1CIHCoe87hyPHosXx1pYeVUoohvmIqh9cC_kNlV-CMHQ.json';

var getGoogleDoc = function getGoogleDoc(url) {
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_0__["default"])(url, {
    mode: 'cors'
  });
};

var getEpicGoogleDoc = function getEpicGoogleDoc() {
  return getGoogleDoc(epicGoogleDocUrl);
};
var getBannerGoogleDoc = function getBannerGoogleDoc() {
  return getGoogleDoc(bannerGoogleDocUrl);
};
var googleDocEpicControl = function googleDocEpicControl() {
  return getGoogleDoc(epicGoogleDocUrl).then(function (res) {
    return Object(common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_1__["getEpicParams"])(res, 'control');
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/contributions-liveblog-utilities.js":
/*!*******************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/contributions-liveblog-utilities.js ***!
  \*******************************************************************************************************/
/*! exports provided: setupEpicInLiveblog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupEpicInLiveblog", function() { return setupEpicInLiveblog; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/acquisitions-view-log */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js");
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_element_inview__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/element-inview */ "./static/src/javascripts/lib/element-inview.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");






var isAutoUpdateHandlerBound = false;
var INSERT_EPIC_AFTER_CLASS = 'js-insert-epic-after';

var getLiveblogEntryTimeData = function getLiveblogEntryTimeData(el) {
  var timeEl = el.querySelector('time');
  var absoluteTimeEl = el.querySelector('.block-time__absolute');

  if (timeEl && absoluteTimeEl) {
    var link = timeEl.parentNode;
    var blockHref = link instanceof HTMLAnchorElement ? link.href : '';
    return {
      datetime: timeEl.getAttribute('datetime') || '',
      title: timeEl.getAttribute('title') || '',
      date: timeEl.innerHTML,
      time: absoluteTimeEl.innerHTML,
      blockHref: blockHref
    };
  }
};

var getBlocksToInsertEpicAfter = function getBlocksToInsertEpicAfter() {
  var blocks = document.getElementsByClassName('block');
  var blocksToInsertManualEpicAfter = document.getElementsByClassName(INSERT_EPIC_AFTER_CLASS);
  var epicsAlreadyOnPage = document.getElementsByClassName('is-epic');
  var isLiveblogLongEnoughYet = blocks.length > 4;

  if (blocksToInsertManualEpicAfter.length || epicsAlreadyOnPage.length || !isLiveblogLongEnoughYet) {
    return Array.from(blocksToInsertManualEpicAfter);
  }

  var autoBlockNum = Math.floor(Math.random() * 3);
  var blockToInsertAutoEpicAfter = blocks[autoBlockNum];
  return Array.from(blocksToInsertManualEpicAfter).concat(blockToInsertAutoEpicAfter);
};

var setEpicLiveblogEntryTimeData = function setEpicLiveblogEntryTimeData(el, timeData) {
  var epicTimeEl = el.querySelector('time');
  var epicAbsoluteTimeEl = el.querySelector('.block-time__absolute');

  if (epicTimeEl && epicAbsoluteTimeEl) {
    var epicTimeLink = epicTimeEl.parentNode;

    if (epicTimeLink instanceof HTMLAnchorElement) {
      epicTimeLink.href = timeData.blockHref;
    }

    epicTimeEl.setAttribute('datetime', timeData.datetime);
    epicTimeEl.setAttribute('title', timeData.title);
    epicTimeEl.innerHTML = timeData.date;
    epicAbsoluteTimeEl.innerHTML = timeData.time;
  }
};

var setupViewTracking = function setupViewTracking(el, test) {
  // top offset of 18 ensures view only counts when half of element is on screen
  var inView = Object(lib_element_inview__WEBPACK_IMPORTED_MODULE_4__["elementInView"])(el, window, {
    top: 18
  });
  inView.on('firstview', function () {
    Object(common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_1__["logView"])(test.id);
    lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].emit(test.viewEvent);
  });
};

var addEpicToBlocks = function addEpicToBlocks(epicHtml, test) {
  var elementsWithTimeData = getBlocksToInsertEpicAfter().map(function (el) {
    return [el, getLiveblogEntryTimeData(el)];
  });
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_5__["default"].write(function () {
    elementsWithTimeData.forEach(function (_ref) {
      var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
          el = _ref2[0],
          timeData = _ref2[1];

      if (!timeData) {
        return;
      }

      var $epic = lib_$__WEBPACK_IMPORTED_MODULE_2__["default"].create(epicHtml);
      $epic.insertAfter(el);
      lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].emit(test.insertEvent);
      Object(lib_$__WEBPACK_IMPORTED_MODULE_2__["default"])(el).removeClass(INSERT_EPIC_AFTER_CLASS);
      setEpicLiveblogEntryTimeData($epic[0], timeData);
      setupViewTracking(el, test);
    });
  });
};

var setupEpicInLiveblog = function setupEpicInLiveblog(epicHtml, test) {
  addEpicToBlocks(epicHtml, test);

  if (!isAutoUpdateHandlerBound) {
    lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].on('modules:autoupdate:updates', function () {
      addEpicToBlocks(epicHtml, test);
    });
    isAutoUpdateHandlerBound = true;
  }
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js":
/*!**********************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js ***!
  \**********************************************************************************************/
/*! exports provided: shouldShowReaderRevenue, shouldShowEpic, makeABTest, defaultButtonTemplate, makeBannerABTestVariants, makeGoogleDocEpicVariants, makeGoogleDocBannerVariants, makeGoogleDocBannerControl, makeBannerABTestVariant, defaultMaxViews, getReaderRevenueRegion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldShowReaderRevenue", function() { return shouldShowReaderRevenue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldShowEpic", function() { return shouldShowEpic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeABTest", function() { return makeABTest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultButtonTemplate", function() { return defaultButtonTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeBannerABTestVariants", function() { return makeBannerABTestVariants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeGoogleDocEpicVariants", function() { return makeGoogleDocEpicVariants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeGoogleDocBannerVariants", function() { return makeGoogleDocBannerVariants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeGoogleDocBannerControl", function() { return makeGoogleDocBannerControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeBannerABTestVariant", function() { return makeBannerABTestVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMaxViews", function() { return defaultMaxViews; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getReaderRevenueRegion", function() { return getReaderRevenueRegion; });
/* harmony import */ var common_modules_commercial_targeting_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/targeting-tool */ "./static/src/javascripts/projects/common/modules/commercial/targeting-tool.js");
/* harmony import */ var common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/acquisitions-copy */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-copy.js");
/* harmony import */ var common_modules_commercial_membership_engagement_banner_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/membership-engagement-banner-parameters */ "./static/src/javascripts/projects/common/modules/commercial/membership-engagement-banner-parameters.js");
/* harmony import */ var common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/acquisitions-view-log */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js");
/* harmony import */ var common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/acquisitions-ophan */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-ophan.js");
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_element_inview__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/element-inview */ "./static/src/javascripts/lib/element-inview.js");
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var lib_noop__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lib/noop */ "./static/src/javascripts/lib/noop.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_buttons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-buttons */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-buttons.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_control__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-control */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-control.js");
/* harmony import */ var common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! common/modules/commercial/user-features */ "./static/src/javascripts/projects/common/modules/commercial/user-features.js");
/* harmony import */ var common_modules_commercial_support_utilities__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! common/modules/commercial/support-utilities */ "./static/src/javascripts/projects/common/modules/commercial/support-utilities.js");
/* harmony import */ var common_modules_commercial_epic_epic_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! common/modules/commercial/epic/epic-utils */ "./static/src/javascripts/projects/common/modules/commercial/epic/epic-utils.js");
/* harmony import */ var common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! common/modules/commercial/contributions-google-docs */ "./static/src/javascripts/projects/common/modules/commercial/contributions-google-docs.js");
/* harmony import */ var common_modules_commercial_epic_epic_exclusion_rules__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! common/modules/commercial/epic/epic-exclusion-rules */ "./static/src/javascripts/projects/common/modules/commercial/epic/epic-exclusion-rules.js");




















var getReaderRevenueRegion = function getReaderRevenueRegion(geolocation) {
  switch (geolocation) {
    case 'GB':
      return 'united-kingdom';

    case 'US':
      return 'united-states';

    case 'AU':
      return 'australia';

    default:
      return 'rest-of-world';
  }
}; // How many times the user can see the Epic,
// e.g. 6 times within 7 days with minimum of 1 day in between views.


var defaultMaxViews = {
  days: 30,
  count: 4,
  minDaysBetweenViews: 0
};

var defaultButtonTemplate = function defaultButtonTemplate(url) {
  return Object(common_modules_commercial_templates_acquisitions_epic_buttons__WEBPACK_IMPORTED_MODULE_12__["epicButtonsTemplate"])(url);
};

var controlTemplate = function controlTemplate(_ref, copy) {
  var _ref$options = _ref.options,
      options = _ref$options === void 0 ? {} : _ref$options;
  return Object(common_modules_commercial_templates_acquisitions_epic_control__WEBPACK_IMPORTED_MODULE_13__["acquisitionsEpicControlTemplate"])({
    copy: copy,
    componentName: options.componentName,
    buttonTemplate: options.buttonTemplate({
      supportUrl: options.supportURL,
      subscribeUrl: options.subscribeURL
    })
  });
};

var doTagsMatch = function doTagsMatch(test) {
  return test.useTargetingTool ? Object(common_modules_commercial_targeting_tool__WEBPACK_IMPORTED_MODULE_0__["isAbTestTargeted"])(test) : true;
}; // Returns an array containing:
// - the first element matching insertAtSelector, if isMultiple is false or not supplied
// - all elements matching insertAtSelector, if isMultiple is true
// - or an empty array if the selector doesn't match anything on the page


var getTargets = function getTargets(insertAtSelector, isMultiple) {
  var els = Array.from(document.querySelectorAll(insertAtSelector));

  if (isMultiple) {
    return els;
  } else if (els.length) {
    return [els[0]];
  }

  return [];
};

var isCompatibleWithEpic = function isCompatibleWithEpic(page) {
  return page.contentType === 'Article' && !page.isMinuteArticle && Object(common_modules_commercial_epic_epic_exclusion_rules__WEBPACK_IMPORTED_MODULE_18__["isArticleWorthAnEpicImpression"])(page, common_modules_commercial_epic_epic_exclusion_rules__WEBPACK_IMPORTED_MODULE_18__["defaultExclusionRules"]);
};

var shouldShowReaderRevenue = function shouldShowReaderRevenue() {
  var showToContributorsAndSupporters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return (Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_14__["shouldSeeReaderRevenue"])() || showToContributorsAndSupporters) && !lib_config__WEBPACK_IMPORTED_MODULE_6__["default"].get('page.shouldHideReaderRevenue');
};

var shouldShowEpic = function shouldShowEpic(test) {
  var onCompatiblePage = test.pageCheck(lib_config__WEBPACK_IMPORTED_MODULE_6__["default"].get('page'));
  var storedGeolocation = Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_10__["getSync"])();
  var inCompatibleLocation = test.locations.length ? test.locations.some(function (geo) {
    return geo === storedGeolocation;
  }) : true;
  var tagsMatch = doTagsMatch(test);
  return shouldShowReaderRevenue(test.showToContributorsAndSupporters) && onCompatiblePage && inCompatibleLocation && test.locationCheck(storedGeolocation) && tagsMatch;
};

var createTestAndVariantId = function createTestAndVariantId(campaignCodePrefix, campaignID, id) {
  return "".concat(campaignCodePrefix, "_").concat(campaignID, "_").concat(id);
};

var makeEvent = function makeEvent(id, event) {
  return "".concat(id, ":").concat(event);
};

var registerIframeListener = function registerIframeListener(iframeId) {
  window.addEventListener('message', function (message) {
    var iframe = document.getElementById(iframeId);

    if (iframe) {
      try {
        var data = JSON.parse(message.data);

        if (data.type === 'set-height' && data.value) {
          iframe.style.height = "".concat(data.value, "px");
        }
      } catch (e) {// Nothing we can do in the error case
      }
    }
  });
};

var makeABTestVariant = function makeABTestVariant(id, products, options, parentTest) {
  var trackingCampaignId = "epic_".concat(parentTest.campaignId);
  var componentId = createTestAndVariantId(parentTest.campaignPrefix, parentTest.campaignId, id);
  var iframeId = "".concat(parentTest.campaignId, "_iframe"); // defaults for options

  var _options$maxViews = options.maxViews,
      maxViews = _options$maxViews === void 0 ? defaultMaxViews : _options$maxViews,
      _options$isUnlimited = options.isUnlimited,
      isUnlimited = _options$isUnlimited === void 0 ? false : _options$isUnlimited,
      _options$campaignCode = options.campaignCode,
      campaignCode = _options$campaignCode === void 0 ? createTestAndVariantId(parentTest.campaignPrefix, parentTest.campaignId, id) : _options$campaignCode,
      _options$supportURL = options.supportURL,
      supportURL = _options$supportURL === void 0 ? Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__["addTrackingCodesToUrl"])({
    base: "".concat(options.supportBaseURL || common_modules_commercial_support_utilities__WEBPACK_IMPORTED_MODULE_15__["supportContributeURL"]),
    componentType: parentTest.componentType,
    componentId: componentId,
    campaignCode: campaignCode,
    abTest: {
      name: parentTest.id,
      variant: id
    }
  }) : _options$supportURL,
      _options$subscribeURL = options.subscribeURL,
      subscribeURL = _options$subscribeURL === void 0 ? Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__["addTrackingCodesToUrl"])({
    base: 'https://support.theguardian.com/subscribe',
    componentType: parentTest.componentType,
    componentId: componentId,
    campaignCode: campaignCode,
    abTest: {
      name: parentTest.id,
      variant: id
    }
  }) : _options$subscribeURL,
      _options$template = options.template,
      template = _options$template === void 0 ? controlTemplate : _options$template,
      _options$buttonTempla = options.buttonTemplate,
      buttonTemplate = _options$buttonTempla === void 0 ? options.buttonTemplate || defaultButtonTemplate : _options$buttonTempla,
      _options$blockEngagem = options.blockEngagementBanner,
      blockEngagementBanner = _options$blockEngagem === void 0 ? false : _options$blockEngagem,
      _options$engagementBa = options.engagementBannerParams,
      engagementBannerParams = _options$engagementBa === void 0 ? {} : _options$engagementBa,
      _options$isOutbrainCo = options.isOutbrainCompliant,
      isOutbrainCompliant = _options$isOutbrainCo === void 0 ? false : _options$isOutbrainCo,
      _options$usesIframe = options.usesIframe,
      usesIframe = _options$usesIframe === void 0 ? false : _options$usesIframe,
      _options$onInsert = options.onInsert,
      onInsert = _options$onInsert === void 0 ? lib_noop__WEBPACK_IMPORTED_MODULE_11__["noop"] : _options$onInsert,
      _options$onView = options.onView,
      onView = _options$onView === void 0 ? lib_noop__WEBPACK_IMPORTED_MODULE_11__["noop"] : _options$onView,
      _options$insertAtSele = options.insertAtSelector,
      insertAtSelector = _options$insertAtSele === void 0 ? '.submeta' : _options$insertAtSele,
      _options$insertMultip = options.insertMultiple,
      insertMultiple = _options$insertMultip === void 0 ? false : _options$insertMultip,
      _options$insertAfter = options.insertAfter,
      insertAfter = _options$insertAfter === void 0 ? false : _options$insertAfter,
      _options$test = options.test,
      _test = _options$test === void 0 ? lib_noop__WEBPACK_IMPORTED_MODULE_11__["noop"] : _options$test,
      _options$impression = options.impression,
      impression = _options$impression === void 0 ? function (submitABTestImpression) {
    return lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].once(parentTest.insertEvent, function () {
      Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__["submitInsertEvent"])({
        component: {
          componentType: parentTest.componentType,
          products: products,
          campaignCode: campaignCode,
          id: campaignCode
        },
        abTest: {
          name: parentTest.id,
          variant: id
        }
      });
      submitABTestImpression();
    });
  } : _options$impression,
      _options$success = options.success,
      success = _options$success === void 0 ? function (submitABTestComplete) {
    return lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].once(parentTest.viewEvent, function () {
      Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__["submitViewEvent"])({
        component: {
          componentType: parentTest.componentType,
          products: products,
          campaignCode: campaignCode,
          id: campaignCode
        },
        abTest: {
          name: parentTest.id,
          variant: id
        }
      });
      submitABTestComplete();
    });
  } : _options$success;

  if (usesIframe) {
    registerIframeListener(iframeId);
  }

  return {
    id: id,
    options: {
      componentName: "mem_acquisition_".concat(trackingCampaignId, "_").concat(id),
      campaignCodes: [campaignCode],
      maxViews: maxViews,
      isUnlimited: isUnlimited,
      products: products,
      campaignCode: campaignCode,
      supportURL: supportURL,
      subscribeURL: subscribeURL,
      template: template,
      buttonTemplate: buttonTemplate,
      blockEngagementBanner: blockEngagementBanner,
      engagementBannerParams: engagementBannerParams,
      isOutbrainCompliant: isOutbrainCompliant,
      usesIframe: usesIframe,
      onInsert: onInsert,
      onView: onView,
      insertAtSelector: insertAtSelector,
      insertMultiple: insertMultiple,
      insertAfter: insertAfter,
      test: _test,
      impression: impression,
      success: success,
      iframeId: iframeId
    },
    test: function test() {
      var _this = this;

      if (typeof options.copy === 'function') {
        options.copy = options.copy();
      }

      var copyPromise = options.copy && Promise.resolve(options.copy) || Object(common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_17__["googleDocEpicControl"])();

      var render = function render(templateFn) {
        return copyPromise.then(function (copy) {
          var renderTemplate = templateFn || _this.options && _this.options.template;
          return renderTemplate(_this, copy);
        }).then(function (renderedTemplate) {
          var component = lib_$__WEBPACK_IMPORTED_MODULE_5__["default"].create(renderedTemplate);
          lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].emit('register:begin', trackingCampaignId);
          return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_8__["default"].write(function () {
            var targets = getTargets(insertAtSelector, insertMultiple);
            Object(common_modules_commercial_epic_epic_utils__WEBPACK_IMPORTED_MODULE_16__["awaitEpicButtonClicked"])().then(function () {
              return Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_4__["submitClickEvent"])({
                component: {
                  componentType: parentTest.componentType,
                  products: products,
                  campaignCode: campaignCode,
                  id: campaignCode
                },
                abTest: {
                  name: parentTest.id,
                  variant: id
                }
              });
            });

            if (targets.length > 0) {
              if (insertAfter) {
                component.insertAfter(targets);
              } else {
                component.insertBefore(targets);
              }

              lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].emit(parentTest.insertEvent, {
                componentType: parentTest.componentType,
                products: products,
                campaignCode: campaignCode
              });
              onInsert(component);
              component.each(function (element) {
                // top offset of 18 ensures view only counts when half of element is on screen
                var inView = Object(lib_element_inview__WEBPACK_IMPORTED_MODULE_7__["elementInView"])(element, window, {
                  top: 18
                });
                inView.on('firstview', function () {
                  Object(common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_3__["logView"])(parentTest.id);
                  lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].emit(parentTest.viewEvent, {
                    componentType: parentTest.componentType,
                    products: products,
                    campaignCode: campaignCode
                  });
                  lib_mediator__WEBPACK_IMPORTED_MODULE_9__["default"].emit('register:end', trackingCampaignId);
                  onView(_this);
                });
              });
            }

            return component[0];
          });
        });
      };

      if (_test !== lib_noop__WEBPACK_IMPORTED_MODULE_11__["noop"] && typeof _test === 'function') {
        _test(render.bind(this), this, parentTest);
      } else {
        render.apply(this);
      }
    },
    impression: impression,
    success: success
  };
};

var makeABTest = function makeABTest(_ref2) {
  var id = _ref2.id,
      start = _ref2.start,
      expiry = _ref2.expiry,
      author = _ref2.author,
      idealOutcome = _ref2.idealOutcome,
      campaignId = _ref2.campaignId,
      description = _ref2.description,
      audience = _ref2.audience,
      audienceOffset = _ref2.audienceOffset,
      successMeasure = _ref2.successMeasure,
      audienceCriteria = _ref2.audienceCriteria,
      variants = _ref2.variants,
      _ref2$locations = _ref2.locations,
      locations = _ref2$locations === void 0 ? [] : _ref2$locations,
      _ref2$locationCheck = _ref2.locationCheck,
      locationCheck = _ref2$locationCheck === void 0 ? function () {
    return true;
  } : _ref2$locationCheck,
      _ref2$dataLinkNames = _ref2.dataLinkNames,
      dataLinkNames = _ref2$dataLinkNames === void 0 ? '' : _ref2$dataLinkNames,
      _ref2$campaignPrefix = _ref2.campaignPrefix,
      campaignPrefix = _ref2$campaignPrefix === void 0 ? 'gdnwb_copts_memco' : _ref2$campaignPrefix,
      _ref2$useLocalViewLog = _ref2.useLocalViewLog,
      useLocalViewLog = _ref2$useLocalViewLog === void 0 ? false : _ref2$useLocalViewLog,
      _ref2$overrideCanRun = _ref2.overrideCanRun,
      overrideCanRun = _ref2$overrideCanRun === void 0 ? false : _ref2$overrideCanRun,
      _ref2$useTargetingToo = _ref2.useTargetingTool,
      useTargetingTool = _ref2$useTargetingToo === void 0 ? false : _ref2$useTargetingToo,
      _ref2$showToContribut = _ref2.showToContributorsAndSupporters,
      showToContributorsAndSupporters = _ref2$showToContribut === void 0 ? false : _ref2$showToContribut,
      _ref2$canRun = _ref2.canRun,
      _canRun = _ref2$canRun === void 0 ? function () {
    return true;
  } : _ref2$canRun,
      _ref2$pageCheck = _ref2.pageCheck,
      pageCheck = _ref2$pageCheck === void 0 ? isCompatibleWithEpic : _ref2$pageCheck;

  var test = {
    // this is true because we use the reader revenue flag rather than sensitive
    // to disable contributions asks for a particular piece of content
    showForSensitive: true,
    canRun: function canRun() {
      if (overrideCanRun) {
        return doTagsMatch(this) && _canRun(this);
      }

      var testCanRun = typeof _canRun === 'function' ? _canRun(this) : true;
      var canEpicBeDisplayed = shouldShowEpic(this);
      return testCanRun && canEpicBeDisplayed;
    },
    componentType: 'ACQUISITIONS_EPIC',
    insertEvent: makeEvent(id, 'insert'),
    viewEvent: makeEvent(id, 'view'),
    variants: [],
    id: id,
    start: start,
    expiry: expiry,
    author: author,
    description: description,
    audience: audience,
    audienceOffset: audienceOffset,
    successMeasure: successMeasure,
    audienceCriteria: audienceCriteria,
    idealOutcome: idealOutcome,
    dataLinkNames: dataLinkNames,
    campaignId: campaignId,
    campaignPrefix: campaignPrefix,
    useLocalViewLog: useLocalViewLog,
    overrideCanRun: overrideCanRun,
    showToContributorsAndSupporters: showToContributorsAndSupporters,
    pageCheck: pageCheck,
    locations: locations,
    locationCheck: locationCheck,
    useTargetingTool: useTargetingTool
  };
  test.variants = variants.map(function (variant) {
    return makeABTestVariant(variant.id, variant.products, variant.options || {}, test);
  });
  return test;
};

var makeBannerABTestVariants = function makeBannerABTestVariants(variants) {
  return variants.map(function (x) {
    x.test = lib_noop__WEBPACK_IMPORTED_MODULE_11__["noop"];
    return x;
  });
};

var makeGoogleDocEpicVariants = function makeGoogleDocEpicVariants(count) {
  var variants = []; // wtf, our linter dislikes i++ AND i = i + 1

  var _loop = function _loop(i) {
    variants.push({
      id: "variant_".concat(i),
      products: [],
      options: {
        copy: function copy() {
          return Object(common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_17__["getEpicGoogleDoc"])().then(function (res) {
            return Object(common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_1__["getEpicParams"])(res, "variant_".concat(i));
          });
        }
      }
    });
  };

  for (var i = 1; i <= count; i += 1) {
    _loop(i);
  }

  return variants;
};

var makeGoogleDocBannerVariants = function makeGoogleDocBannerVariants(count) {
  var variants = [];

  var _loop2 = function _loop2(i) {
    variants.push({
      id: "variant_".concat(i),
      products: [],
      engagementBannerParams: function engagementBannerParams() {
        return Object(common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_17__["getBannerGoogleDoc"])().then(function (res) {
          return Object(common_modules_commercial_membership_engagement_banner_parameters__WEBPACK_IMPORTED_MODULE_2__["getAcquisitionsBannerParams"])(res, "variant_".concat(i));
        });
      }
    });
  };

  for (var i = 1; i <= count; i += 1) {
    _loop2(i);
  }

  return variants;
};

var makeBannerABTestVariant = function makeBannerABTestVariant(id, _engagementBannerParams) {
  return {
    id: id,
    products: [],
    engagementBannerParams: function engagementBannerParams() {
      return Promise.resolve(_engagementBannerParams);
    }
  };
};

var makeGoogleDocBannerControl = function makeGoogleDocBannerControl() {
  return {
    id: 'control',
    products: [],
    engagementBannerParams: function engagementBannerParams() {
      return Object(common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_17__["getBannerGoogleDoc"])().then(function (res) {
        return Object(common_modules_commercial_membership_engagement_banner_parameters__WEBPACK_IMPORTED_MODULE_2__["getAcquisitionsBannerParams"])(res, 'control');
      });
    }
  };
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/epic/epic-exclusion-rules.js":
/*!************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/epic/epic-exclusion-rules.js ***!
  \************************************************************************************************/
/*! exports provided: defaultExclusionRules, isArticleWorthAnEpicImpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultExclusionRules", function() { return defaultExclusionRules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArticleWorthAnEpicImpression", function() { return isArticleWorthAnEpicImpression; });
// Data has shown that pages with these properties generate significantly
// less money than others, so we don't want to waste an epic impression on them.
var defaultExclusionRules = [// e.g. https://www.theguardian.com/football/blog/2018/dec/12/spurs-fans-wallow-in-afterglow-un-spursy-ending
{
  section: 'football',
  toneIds: ['tone/features']
}, // e.g. https://www.theguardian.com/football/2018/dec/12/valencia-manchester-united-champions-league-match-report
{
  section: 'football',
  toneIds: ['tone/matchreports']
}, // e.g. https://www.theguardian.com/money/2018/dec/13/slime-toys-tested-fail-meet-eu-safety-standards-hamleys-christmas
{
  section: 'money'
}, // e.g. https://www.theguardian.com/education/2018/dec/12/female-scholars-are-marginalised-on-wikipedia-because-its-written-by-men
{
  section: 'education'
}, // e.g. https://www.theguardian.com/games/2018/dec/13/cat-condo-is-the-stupidest-most-cynical-game-in-the-app-store-so-why-cant-i-stop-playing
{
  section: 'games'
}, // e.g. https://www.theguardian.com/teacher-network/2018/jun/02/secret-teacher-teaching-children-without-play-soul-destroying-sats-assessment
{
  section: 'teacher-network'
}, // e.g. https://www.theguardian.com/careers/2018/dec/06/dont-expect-a-survivor-to-tell-you-her-experience-of-undergoing-fgm
{
  section: 'careers'
}, // e.g. https://www.theguardian.com/guardian-masterclasses/2018/oct/25/get-healthy-and-live-your-best-life-with-dr-rangan-chatterjee-health-wellness-course
{
  keywordIds: ['guardian-masterclasses/guardian-masterclasses']
}];
var isArticleWorthAnEpicImpression = function isArticleWorthAnEpicImpression(page, exclusionRules) {
  return !exclusionRules.some(function (propertiesToExclude) {
    var sectionsMatch = propertiesToExclude.section ? propertiesToExclude.section === page.section : true;
    var toneIdsMatch = propertiesToExclude.toneIds ? propertiesToExclude.toneIds.every(function (toneId) {
      return page.toneIds.includes(toneId);
    }) : true;
    var keywordIdsMatch = propertiesToExclude.keywordIds ? propertiesToExclude.keywordIds.every(function (keywordId) {
      return page.keywordIds.includes(keywordId);
    }) : true;
    return sectionsMatch && toneIdsMatch && keywordIdsMatch;
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/epic/epic-utils.js":
/*!**************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/epic/epic-utils.js ***!
  \**************************************************************************************/
/*! exports provided: reportEpicError, insertAtSubmeta, displayControlEpic, displayControlEpicInAbTest, trackEpic, awaitEpicButtonClicked */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reportEpicError", function() { return reportEpicError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertAtSubmeta", function() { return insertAtSubmeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "displayControlEpic", function() { return displayControlEpic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "displayControlEpicInAbTest", function() { return displayControlEpicInAbTest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trackEpic", function() { return trackEpic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "awaitEpicButtonClicked", function() { return awaitEpicButtonClicked; });
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_element_inview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/element-inview */ "./static/src/javascripts/lib/element-inview.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/commercial/contributions-google-docs */ "./static/src/javascripts/projects/common/modules/commercial/contributions-google-docs.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-buttons */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-buttons.js");
/* harmony import */ var common_modules_commercial_support_utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/commercial/support-utilities */ "./static/src/javascripts/projects/common/modules/commercial/support-utilities.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_control__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-control */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-control.js");
/* harmony import */ var common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/commercial/acquisitions-ophan */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-ophan.js");
/* harmony import */ var common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/modules/commercial/acquisitions-view-log */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js");












var reportEpicError = function reportEpicError(error) {
  Object(lib_report_error__WEBPACK_IMPORTED_MODULE_3__["default"])(error, {
    feature: 'epic'
  }, false);
};

var controlEpicComponent = function controlEpicComponent(abTest) {
  var epicId = 'epic_control'; // TODO: check ok to use this

  var epicComponentType = 'ACQUISITIONS_EPIC';
  var testimonialBlock = '';
  return Object(common_modules_commercial_contributions_google_docs__WEBPACK_IMPORTED_MODULE_5__["googleDocEpicControl"])().then(function (copy) {
    var rawEpic = Object(common_modules_commercial_templates_acquisitions_epic_control__WEBPACK_IMPORTED_MODULE_8__["acquisitionsEpicControlTemplate"])({
      copy: copy,
      componentName: '',
      // TODO: confirm data-component not needed
      buttonTemplate: Object(common_modules_commercial_templates_acquisitions_epic_buttons__WEBPACK_IMPORTED_MODULE_6__["epicButtonsTemplate"])({
        supportUrl: Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_9__["addTrackingCodesToUrl"])({
          base: common_modules_commercial_support_utilities__WEBPACK_IMPORTED_MODULE_7__["supportContributeURL"],
          componentType: epicComponentType,
          componentId: epicId,
          campaignCode: epicId,
          abTest: abTest
        })
      }),
      testimonialBlock: testimonialBlock,
      epicClass: '',
      wrapperClass: ''
    });
    var epicElement = lib_$__WEBPACK_IMPORTED_MODULE_1__["default"].create(rawEpic).get(0);
    return {
      html: epicElement,
      componentEvent: {
        component: {
          componentType: epicComponentType,
          id: epicId
        },
        abTest: abTest
      }
    };
  });
};

var insertAtSubmeta = function insertAtSubmeta(epic) {
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_0__["default"].read(function () {
    return document.querySelector('.submeta');
  }).then(function (element) {
    if (element && element.parentElement) {
      element.parentElement.insertBefore(epic.html, element);
      return Promise.resolve(epic);
    }

    var error = new Error('unable to insert Epic');
    reportEpicError(error);
    return Promise.reject(error);
  });
};

var displayControlEpic = function displayControlEpic(abTest) {
  return controlEpicComponent(abTest).then(function (epic) {
    return insertAtSubmeta(epic);
  }).catch(function (error) {
    var controlEpicError = new Error("unable to display control epic - ".concat(error));
    reportEpicError(controlEpicError);
    return Promise.reject(controlEpicError);
  });
};

var displayControlEpicInAbTest = function displayControlEpicInAbTest(abTest) {
  return displayControlEpic(abTest);
};

var awaitEpicViewed = function awaitEpicViewed(epic) {
  var inView = Object(lib_element_inview__WEBPACK_IMPORTED_MODULE_2__["elementInView"])(epic, window, {
    top: 18
  });
  return new Promise(function (resolve) {
    return inView.on('firstview', function () {
      return resolve();
    });
  });
};

var awaitEpicButtonClicked = function awaitEpicButtonClicked() {
  return new Promise(function (resolve) {
    lib_mediator__WEBPACK_IMPORTED_MODULE_4__["default"].on('module:clickstream:click', function (clickSpec) {
      if (clickSpec === true || clickSpec === false) {
        return;
      }

      var isEpicClick = clickSpec.tags.find(function (tag) {
        return tag === 'epic';
      });

      if (isEpicClick) {
        resolve();
      }
    });
  });
};

var trackEpic = function trackEpic(epic) {
  var componentEvent = epic.componentEvent;

  if (componentEvent) {
    Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_9__["submitInsertEvent"])(componentEvent);
    awaitEpicViewed(epic.html).then(function () {
      Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_9__["submitViewEvent"])(componentEvent); // At the moment id is always derived from test name,
      // but something more general will be required if an Epic isn't part of an AB test.

      if (componentEvent.abTest) {
        Object(common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_10__["logView"])(componentEvent.abTest.name);
      }
    });
    awaitEpicButtonClicked().then(function () {
      return Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_9__["submitClickEvent"])(componentEvent);
    });
  }
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/krux.js":
/*!***************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/krux.js ***!
  \***************************************************************************/
/*! exports provided: getKruxSegments, krux */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getKruxSegments", function() { return getKruxSegments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "krux", function() { return krux; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/commercial/ad-prefs.lib */ "./static/src/javascripts/projects/common/modules/commercial/ad-prefs.lib.js");




 // For flag values, see https://konsole.zendesk.com/hc/en-us/articles/360000754674-JavaScript-Consent-Tag-Spec

var setConsentFlags = function setConsentFlags(consentFlags) {
  window.Krux('consent:set', consentFlags, function (ex) {
    if (ex) {
      switch (ex.idv) {
        case 'no identifier found for user':
        case 'user opted out via (optout or dnt)':
          break;
        // swallow these as they're harmless

        default:
          {
            var exStr = Object.keys(ex).map(function (prop) {
              return "".concat(prop, " -> '").concat(ex[prop], "'");
            }).join(', ');
            var msg = "KRUX: ".concat(exStr);
            Object(lib_report_error__WEBPACK_IMPORTED_MODULE_2__["default"])(new Error(msg), {
              feature: 'krux:consent:set',
              consentFlags: consentFlags
            });
          }
      }
    }
  });
};

var enableSegments = function enableSegments() {
  setConsentFlags({
    dc: true,
    al: true,
    tg: true,
    cd: false,
    sh: false,
    re: false
  });
};

var disableSegments = function disableSegments() {
  setConsentFlags({
    dc: false,
    al: false,
    tg: false,
    cd: false,
    sh: false,
    re: false
  });
};

var numRetries = 0;

var configureSegments = function configureSegments() {
  if (window.Krux) {
    // everything except an explicit denial of consent gives segments
    var consentToSegments = Object(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_4__["getAdConsentState"])(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_4__["thirdPartyTrackingAdConsent"]) !== false;

    if (consentToSegments) {
      enableSegments();
    } else {
      disableSegments();
    }
  } else if (numRetries < 20) {
    // give up to 2s for slow networks
    numRetries += 1;
    setTimeout(function () {
      configureSegments();
    }, 100);
  }
};

var onLoad = function onLoad() {
  configureSegments();
};

var retrieve = function retrieve(n) {
  var k = "kx".concat(n);
  return lib_storage__WEBPACK_IMPORTED_MODULE_3__["local"].getRaw(k) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_1__["getCookie"])("".concat(k, "=([^;]*)")) || '';
};

var getKruxSegments = function getKruxSegments() {
  var wantPersonalisedAds = Object(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_4__["getAdConsentState"])(common_modules_commercial_ad_prefs_lib__WEBPACK_IMPORTED_MODULE_4__["thirdPartyTrackingAdConsent"]) !== false;
  var segments = wantPersonalisedAds ? retrieve('segs') : '';
  return segments ? segments.split(',') : [];
};
var krux = {
  shouldRun: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches.krux,
  url: '//cdn.krxd.net/controltag?confid=JVZiE3vn',
  onLoad: onLoad
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/membership-engagement-banner-parameters.js":
/*!**************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/membership-engagement-banner-parameters.js ***!
  \**************************************************************************************************************/
/*! exports provided: defaultEngagementBannerParams, getAcquisitionsBannerParams, getControlEngagementBannerParams, getUserVariantParams */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultEngagementBannerParams", function() { return defaultEngagementBannerParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAcquisitionsBannerParams", function() { return getAcquisitionsBannerParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getControlEngagementBannerParams", function() { return getControlEngagementBannerParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserVariantParams", function() { return getUserVariantParams; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_report_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/report-error */ "./static/src/javascripts/lib/report-error.js");
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var _support_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./support-utilities */ "./static/src/javascripts/projects/common/modules/commercial/support-utilities.js");
/* harmony import */ var _contributions_google_docs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contributions-google-docs */ "./static/src/javascripts/projects/common/modules/commercial/contributions-google-docs.js");





var engagementBannerControl = "<strong>The Guardian is editorially independent &ndash;\n    our journalism is free from the influence of billionaire owners or politicians.\n    No one edits our editor. No one steers our opinion.</strong> And unlike many others, we haven\u2019t put\n    up a paywall as we want to keep our journalism open and accessible. But the revenue we get from\n    advertising is falling, so we increasingly need our readers to fund our independent, investigative reporting.";

var supporterCost = function supporterCost(location) {
  var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var countryGroup = Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_2__["getSupporterCountryGroup"])(location);

  if (countryGroup === 'EURCountries') {
    // Format either 4.99 € or €4.99 depending on country
    // See https://en.wikipedia.org/wiki/Linguistic_issues_concerning_the_euro
    var euro = lib_geolocation__WEBPACK_IMPORTED_MODULE_2__["extendedCurrencySymbol"].EURCountries;
    var euroAfterCountryCodes = ['BG', 'HR', 'CZ', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IS', 'IT', 'LV', 'LT', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE'];
    return euroAfterCountryCodes.includes(location) ? "".concat(amount, " ").concat(euro) : euro + amount;
  }

  return "".concat(lib_geolocation__WEBPACK_IMPORTED_MODULE_2__["extendedCurrencySymbol"][countryGroup]).concat(amount);
};

var supporterEngagementCtaCopyControl = function supporterEngagementCtaCopyControl(location) {
  return "<span class=\"engagement-banner__highlight\"> Support The Guardian from as little as ".concat(supporterCost(location), ".</span>");
};

var defaultEngagementBannerParams = function defaultEngagementBannerParams() {
  var location = Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_2__["getSync"])();
  return {
    campaignCode: 'gdnwb_copts_memco_banner',
    buttonCaption: 'Support The Guardian',
    linkUrl: _support_utilities__WEBPACK_IMPORTED_MODULE_3__["supportContributeURL"],
    messageText: engagementBannerControl,
    ctaText: supporterEngagementCtaCopyControl(location),
    pageviewId: lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('ophan.pageViewId', 'not_found'),
    products: ['CONTRIBUTION', 'RECURRING_CONTRIBUTION'],
    hasTicker: false
  };
};
var getAcquisitionsBannerParams = function getAcquisitionsBannerParams(googleDocJson, sheetName) {
  var rows = googleDocJson && googleDocJson.sheets && googleDocJson.sheets[sheetName];
  var firstRow = rows && rows[0];

  if (!(firstRow && firstRow.messageText && firstRow.ctaText && firstRow.askAmount && firstRow.buttonCaption && firstRow.linkUrl)) {
    Object(lib_report_error__WEBPACK_IMPORTED_MODULE_1__["default"])(new Error('Could not fetch banner copy from Google Doc'), {
      feature: 'engagement-banner-test'
    }, true);
  }

  var ctaText = "<span class=\"engagement-banner__highlight\"> ".concat(firstRow.ctaText, "</span>");
  var location = Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_2__["getSync"])();
  var paramsFromGoogleDoc = {
    messageText: firstRow.messageText,
    ctaText: ctaText.replace(/%%CURRENCY_SYMBOL%%/g, supporterCost(location, firstRow.askAmount)),
    buttonCaption: firstRow.buttonCaption,
    linkUrl: firstRow.linkUrl,
    hasTicker: false
  };
  return paramsFromGoogleDoc;
};
var getControlEngagementBannerParams = function getControlEngagementBannerParams() {
  return Object(_contributions_google_docs__WEBPACK_IMPORTED_MODULE_4__["getBannerGoogleDoc"])().then(function (json) {
    return getAcquisitionsBannerParams(json, 'control');
  });
};
var getUserVariantParams = function getUserVariantParams(userVariant) {
  if (userVariant && userVariant.engagementBannerParams) {
    return userVariant.engagementBannerParams();
  }

  return Promise.resolve();
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/support-utilities.js":
/*!****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/support-utilities.js ***!
  \****************************************************************************************/
/*! exports provided: supportContributeURL, supportSubscribeURL */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportContributeURL", function() { return supportContributeURL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportSubscribeURL", function() { return supportSubscribeURL; });
var supportContributeURL = 'https://support.theguardian.com/contribute';
var supportSubscribeURL = 'https://support.theguardian.com/subscribe';


/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/targeting-tool.js":
/*!*************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/targeting-tool.js ***!
  \*************************************************************************************/
/*! exports provided: campaignsFor, isAbTestTargeted */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "campaignsFor", function() { return campaignsFor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAbTestTargeted", function() { return isAbTestTargeted; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var clean = function clean(str) {
  return str.trim().toLowerCase();
};

var campaignsFor = function campaignsFor(id) {
  try {
    return lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.campaigns.filter(function (campaign) {
      return campaign.fields && clean(campaign.fields.campaignId) === clean(id);
    });
  } catch (e) {
    return [];
  }
};
var isAbTestTargeted = function isAbTestTargeted(test) {
  return campaignsFor(test.campaignId).length > 0;
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-buttons.js":
/*!**********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-buttons.js ***!
  \**********************************************************************************************************/
/*! exports provided: epicButtonsTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epicButtonsTemplate", function() { return epicButtonsTemplate; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");

var epicButtonsTemplate = function epicButtonsTemplate(_ref) {
  var _ref$supportUrl = _ref.supportUrl,
      supportUrl = _ref$supportUrl === void 0 ? '' : _ref$supportUrl;
  var supportButtonSupport = "\n        <div>\n            <a class=\"contributions__option-button contributions__contribute contributions__contribute--epic contributions__contribute--epic-member\"\n              href=\"".concat(supportUrl, "\"\n              target=\"_blank\">\n              Support The Guardian\n            </a>\n        </div>");
  var paymentLogos = "<img class=\"contributions__payment-logos contributions__contribute--epic-member\" src=\"".concat(lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].get('images.acquisitions.paypal-and-credit-card', ''), "\" alt=\"Paypal and credit card\">");
  return "\n        <div class=\"contributions__buttons\">\n            ".concat(supportButtonSupport, "\n            ").concat(paymentLogos, "\n        </div>");
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-control.js":
/*!**********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-control.js ***!
  \**********************************************************************************************************/
/*! exports provided: acquisitionsEpicControlTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicControlTemplate", function() { return acquisitionsEpicControlTemplate; });
/* harmony import */ var lib_array_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/array-utils */ "./static/src/javascripts/lib/array-utils.js");

var acquisitionsEpicControlTemplate = function acquisitionsEpicControlTemplate(_ref) {
  var _ref$copy = _ref.copy,
      _ref$copy$heading = _ref$copy.heading,
      heading = _ref$copy$heading === void 0 ? '' : _ref$copy$heading,
      paragraphs = _ref$copy.paragraphs,
      highlightedText = _ref$copy.highlightedText,
      componentName = _ref.componentName,
      buttonTemplate = _ref.buttonTemplate,
      _ref$epicClass = _ref.epicClass,
      epicClass = _ref$epicClass === void 0 ? '' : _ref$epicClass,
      _ref$wrapperClass = _ref.wrapperClass,
      wrapperClass = _ref$wrapperClass === void 0 ? '' : _ref$wrapperClass;
  return "<div class=\"contributions__epic ".concat(epicClass, "\" data-component=\"").concat(componentName, "\" data-link-name=\"epic\">\n        <div class=\"").concat(wrapperClass, "\">\n            <div>\n                <h2 class=\"contributions__title\">\n                    ").concat(heading, "\n                </h2>\n                ").concat(Object(lib_array_utils__WEBPACK_IMPORTED_MODULE_0__["appendToLastElement"])(paragraphs, " <strong><span class=\"contributions__highlight\">".concat(highlightedText, "</span></strong>")).map(function (paragraph) {
    return "<p>".concat(paragraph, "</p>");
  }).join(''), "\n            </div>\n    \n            ").concat(buttonTemplate, "\n        </div>\n    </div>");
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-liveblog.js":
/*!***********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-liveblog.js ***!
  \***********************************************************************************************************/
/*! exports provided: epicLiveBlogTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epicLiveBlogTemplate", function() { return epicLiveBlogTemplate; });
var lastSentenceTemplate = function lastSentenceTemplate(highlightedText, supportURL) {
  return "<span class=\"contributions__highlight\">".concat(highlightedText, "</span>\n    <a href=\"").concat(supportURL, "\" target=\"_blank\" class=\"u-underline\">Make a contribution</a> - The Guardian");
};

var epicLiveBlogTemplate = function epicLiveBlogTemplate(_ref) {
  var copy = _ref.copy,
      componentName = _ref.componentName,
      supportURL = _ref.supportURL;
  return "<div class=\"block block--content is-epic\" data-component=\"".concat(componentName, "\">\n        <p class=\"block-time published-time\">\n            <a href=\"#\" itemprop=\"url\" class=\"block-time__link\">\n                <time data-relativeformat=\"med\" itemprop=\"datePublished\" class=\"js-timestamp\"></time>\n                <span class=\"block-time__absolute\"></span>\n            </a>\n        </p>\n        <div class=\"block-elements block-elements--no-byline\">\n            ").concat(copy.paragraphs.map(function (paragraph) {
    return "<p><em>".concat(paragraph, "</em></p>");
  }).join(''), "\n            <p><em>").concat(lastSentenceTemplate(copy.highlightedText, supportURL), "</em></p>\n        </div>\n    </div>");
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-thank-you.js":
/*!************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-thank-you.js ***!
  \************************************************************************************************************/
/*! exports provided: acquisitionsEpicThankYouTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicThankYouTemplate", function() { return acquisitionsEpicThankYouTemplate; });
var acquisitionsEpicThankYouTemplate = function acquisitionsEpicThankYouTemplate(_ref) {
  var componentName = _ref.componentName,
      membershipUrl = _ref.membershipUrl;
  return "<div class=\"contributions__epic\" data-component=\"".concat(componentName, "\">\n        <div>\n            <h2 class=\"contributions__title\">\n                Thank you \u2026\n            </h2>\n            <p>\n                \u2026 for supporting us, by funding our independent journalism and helping to keep it open.\n                Your contribution and the similar pledges of more than 800,000 readers around the world\n                enables the Guardian\u2019s journalists to find things out, reveal new information and challenge\n                the powerful. Your knowledge and experience makes our reporting better too. Did you know\n                we publish articles and podcasts for our supporters, featuring your views and voices?\n            </p>\n    \n            <a href=\"").concat(membershipUrl, "\" target=\"_blank\" class=\"u-underline\">You can learn more about how to get involved here.</a>\n        </div>\n    </div>");
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-ticker.js":
/*!*********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-ticker.js ***!
  \*********************************************************************************************************/
/*! exports provided: acquisitionsEpicTickerTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicTickerTemplate", function() { return acquisitionsEpicTickerTemplate; });
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");

var acquisitionsEpicTickerTemplate = "\n    <div id=\"epic-ticker\" class=\"js-epic-ticker epic-ticker is-hidden\">\n    \n        <div class=\"js-ticker-under-goal is-hidden\">\n            <div class=\"js-ticker-so-far epic-ticker__so-far\">\n                <div class=\"js-ticker-count epic-ticker__count\">".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])(), "0</div>\n                <div class=\"epic-ticker__count-label\">contributed</div>\n            </div>\n            \n            <div class=\"js-ticker-goal epic-ticker__goal\">\n                <div class=\"js-ticker-count epic-ticker__count\">").concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])(), "0</div>\n                <div class=\"epic-ticker__count-label\">our goal</div>\n            </div>\n        </div>\n        \n        <div class=\"js-ticker-over-goal is-hidden\">\n            <div class=\"epic-ticker__thankyou\">\n                <div>Help us beat our goal - thank you</div>\n                <div>Please keep contributing into the new year</div>\n            </div>\n            \n            <div class=\"js-ticker-exceeded epic-ticker__exceeded\">\n                <div class=\"js-ticker-count epic-ticker__count\">").concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])(), "0</div>\n                <div class=\"epic-ticker__count-label\">contributed</div>\n            </div>\n        </div>\n        \n        <div class=\"epic-ticker__progress-container\">\n            <div class=\"epic-ticker__progress\">\n                <div class=\"js-ticker-filled-progress epic-ticker__filled-progress ticker__filled-progress-under\"></div>\n            </div>\n            <div class=\"js-ticker-goal-marker epic-ticker__goal-marker is-hidden\"></div>\n        </div>\n    </div>\n");

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-us-ticker.js":
/*!************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-us-ticker.js ***!
  \************************************************************************************************************/
/*! exports provided: acquisitionsEpicUsTickerTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicUsTickerTemplate", function() { return acquisitionsEpicUsTickerTemplate; });
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_ticker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-ticker */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-ticker.js");
/* harmony import */ var lib_array_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/array-utils */ "./static/src/javascripts/lib/array-utils.js");


var acquisitionsEpicUsTickerTemplate = function acquisitionsEpicUsTickerTemplate(_ref) {
  var _ref$copy = _ref.copy,
      _ref$copy$heading = _ref$copy.heading,
      heading = _ref$copy$heading === void 0 ? '' : _ref$copy$heading,
      paragraphs = _ref$copy.paragraphs,
      highlightedText = _ref$copy.highlightedText,
      componentName = _ref.componentName,
      buttonTemplate = _ref.buttonTemplate,
      tickerPosition = _ref.tickerPosition;
  return "<div class=\"contributions__epic contributions__epic--with-ticker\" data-component=\"".concat(componentName, "\" data-link-name=\"epic\">\n        <div>\n            <div>\n                ").concat(tickerPosition === 'TOP' ? common_modules_commercial_templates_acquisitions_epic_ticker__WEBPACK_IMPORTED_MODULE_0__["acquisitionsEpicTickerTemplate"] : '', "\n\n                <h2 class=\"contributions__title contributions__title--big\">\n                    ").concat(heading, "\n                </h2>\n                ").concat(Object(lib_array_utils__WEBPACK_IMPORTED_MODULE_1__["appendToLastElement"])(paragraphs, " <strong><span class=\"contributions__highlight\">".concat(highlightedText, "</span></strong>")).map(function (paragraph) {
    return "<p>".concat(paragraph, "</p>");
  }).join(''), "\n            </div>\n\n            ").concat(buttonTemplate, "\n\n            ").concat(tickerPosition === 'BOTTOM' ? common_modules_commercial_templates_acquisitions_epic_ticker__WEBPACK_IMPORTED_MODULE_0__["acquisitionsEpicTickerTemplate"] : '', "\n        </div>\n    </div>");
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/ticker.js":
/*!*****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/ticker.js ***!
  \*****************************************************************************/
/*! exports provided: initTicker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTicker", function() { return initTicker; });
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");


var count = {};
var goal;
var total;

var percentageTotalAsNegative = function percentageTotalAsNegative(end) {
  var percentage = total / end * 100 - 100;

  if (percentage > 0) {
    percentage = 0;
  }

  return percentage;
};

var animateBar = function animateBar(parentElement) {
  // If we've exceeded the goal then extend the bar 20% beyond the total
  var end = total > goal ? total + total * 0.2 : goal;
  var progressBarElement = parentElement.querySelector('.js-ticker-filled-progress');

  if (progressBarElement && progressBarElement instanceof HTMLElement) {
    var barTranslate = percentageTotalAsNegative(end);
    progressBarElement.style.transform = "translateX(".concat(barTranslate, "%)");

    if (end !== goal) {
      progressBarElement.classList.add('ticker__filled-progress-over');
      progressBarElement.classList.remove('ticker__filled-progress-under'); // Show a marker for the goal that has been exceeded

      var marker = parentElement.querySelector('.js-ticker-goal-marker');

      if (marker) {
        marker.classList.remove('is-hidden');
        var markerTranslate = goal / end * 100 - 100;
        marker.style.transform = "translateX(".concat(markerTranslate, "%)");
      }
    }
  }
};

var increaseCounter = function increaseCounter(parentElement, parentElementSelector, tickerElementSelector) {
  // Count is local to the parent element
  count[parentElementSelector] += Math.floor(total / 100);
  var counterElement = parentElement.querySelector("".concat(tickerElementSelector, " .js-ticker-count"));

  if (counterElement && counterElement instanceof HTMLElement) {
    counterElement.innerHTML = "".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])()).concat(count[parentElementSelector].toLocaleString());

    if (count[parentElementSelector] >= total) {
      counterElement.innerHTML = "".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])()).concat(total.toLocaleString());
    } else {
      window.requestAnimationFrame(function () {
        return increaseCounter(parentElement, parentElementSelector, tickerElementSelector);
      });
    }
  }
};

var populateGoal = function populateGoal(parentElement) {
  var goalElement = parentElement.querySelector('.js-ticker-goal .js-ticker-count');

  if (goalElement && goalElement instanceof HTMLElement) {
    goalElement.innerHTML = "".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_0__["getLocalCurrencySymbol"])()).concat(goal.toLocaleString());
  }
};

var animate = function animate(parentElementSelector) {
  var parentElement = document.querySelector(parentElementSelector);
  var tickerElementSelector = total > goal ? '.js-ticker-over-goal' : '.js-ticker-under-goal';

  if (parentElement && parentElement instanceof HTMLElement) {
    if (total < goal) {
      populateGoal(parentElement);
    }

    window.setTimeout(function () {
      count[parentElementSelector] = 0;
      window.requestAnimationFrame(function () {
        return increaseCounter(parentElement, parentElementSelector, tickerElementSelector);
      });
      animateBar(parentElement);
    }, 500);
    parentElement.classList.remove('is-hidden');
    var tickerElement = parentElement.querySelector(tickerElementSelector);

    if (tickerElement) {
      tickerElement.classList.remove('is-hidden');
    }
  }
};

var dataSuccessfullyFetched = function dataSuccessfullyFetched() {
  return total && goal;
};

var fetchDataAndAnimate = function fetchDataAndAnimate(parentElementSelector) {
  if (dataSuccessfullyFetched()) {
    animate(parentElementSelector);
  } else {
    Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_1__["default"])('https://support.theguardian.com/ticker.json', {
      headers: {
        'Content-Type': 'application/json'
      },
      mode: 'cors'
    }).then(function (data) {
      total = parseInt(data.total, 10);
      goal = parseInt(data.goal, 10);

      if (dataSuccessfullyFetched()) {
        animate(parentElementSelector);
      }
    });
  }
};

var initTicker = function initTicker(parentElementSelector) {
  fetchDataAndAnimate(parentElementSelector);
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/user-ad-targeting.js":
/*!****************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/user-ad-targeting.js ***!
  \****************************************************************************************/
/*! exports provided: getUserSegments, requestUserSegmentsFromId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserSegments", function() { return getUserSegments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requestUserSegmentsFromId", function() { return requestUserSegmentsFromId; });
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");


var userSegmentsKey = 'gu.ads.userSegmentsData';

var getUserSegments = function getUserSegments() {
  if (lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].isAvailable()) {
    var userCookieData;
    var userSegmentsData = lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].get(userSegmentsKey);

    if (userSegmentsData) {
      userCookieData = Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_1__["getUserFromCookie"])();

      if (userCookieData && userSegmentsData.userHash === userCookieData.id % 9999) {
        return userSegmentsData.segments;
      }

      lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].remove(userSegmentsKey);
    }
  }

  return [];
};

var requestUserSegmentsFromId = function requestUserSegmentsFromId() {
  if (lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].isAvailable() && lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].get(userSegmentsKey) === null && Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_1__["getUserFromCookie"])()) {
    Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_1__["getUserFromApi"])(function (user) {
      if (user && user.adData) {
        var userSegments = [];
        Object.keys(user.adData).forEach(function (key) {
          userSegments.push(key + user.adData[key]);
        });
        lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"].set(userSegmentsKey, {
          segments: userSegments,
          userHash: user.id % 9999
        }, {
          expires: new Date().getTime() + 24 * 60 * 60 * 1000
        });
      }
    });
  }
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/commercial/user-features.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/commercial/user-features.js ***!
  \************************************************************************************/
/*! exports provided: accountDataUpdateWarning, isAdFreeUser, isPayingMember, isRecentOneOffContributor, isRecurringContributor, isDigitalSubscriber, shouldSeeReaderRevenue, refresh, deleteOldData, getLastOneOffContributionDate, getDaysSinceLastOneOffContribution, readerRevenueRelevantCookies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accountDataUpdateWarning", function() { return accountDataUpdateWarning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAdFreeUser", function() { return isAdFreeUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPayingMember", function() { return isPayingMember; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRecentOneOffContributor", function() { return isRecentOneOffContributor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRecurringContributor", function() { return isRecurringContributor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDigitalSubscriber", function() { return isDigitalSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldSeeReaderRevenue", function() { return shouldSeeReaderRevenue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refresh", function() { return refresh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteOldData", function() { return deleteOldData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLastOneOffContributionDate", function() { return getLastOneOffContributionDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDaysSinceLastOneOffContribution", function() { return getDaysSinceLastOneOffContribution; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readerRevenueRelevantCookies", function() { return readerRevenueRelevantCookies; });
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var lib_time_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/time-utils */ "./static/src/javascripts/lib/time-utils.js");




 // Persistence keys

var USER_FEATURES_EXPIRY_COOKIE = 'gu_user_features_expiry';
var PAYING_MEMBER_COOKIE = 'gu_paying_member';
var AD_FREE_USER_COOKIE = 'GU_AF1';
var ACTION_REQUIRED_FOR_COOKIE = 'gu_action_required_for';
var DIGITAL_SUBSCRIBER_COOKIE = 'gu_digital_subscriber'; // This cookie comes from the user attributes API

var RECURRING_CONTRIBUTOR_COOKIE = 'gu_recurring_contributor'; // These cookies are dropped by support frontend at the point of making
// a recurring contribution

var SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE = 'gu.contributions.recurring.contrib-timestamp.Monthly';
var SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE = 'gu.contributions.recurring.contrib-timestamp.Annual';
var SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE = 'gu.contributions.contrib-timestamp';
var forcedAdFreeMode = !!window.location.hash.match(/[#&]noadsaf(&.*)?$/);

var userHasData = function userHasData() {
  var cookie = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(ACTION_REQUIRED_FOR_COOKIE) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(USER_FEATURES_EXPIRY_COOKIE) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(PAYING_MEMBER_COOKIE) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(RECURRING_CONTRIBUTOR_COOKIE) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(AD_FREE_USER_COOKIE) || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(DIGITAL_SUBSCRIBER_COOKIE);
  return !!cookie;
};

var accountDataUpdateWarning = function accountDataUpdateWarning() {
  return Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(ACTION_REQUIRED_FOR_COOKIE);
};

var adFreeDataIsPresent = function adFreeDataIsPresent() {
  var cookieVal = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(AD_FREE_USER_COOKIE);
  return !Number.isNaN(parseInt(cookieVal, 10));
};

var timeInDaysFromNow = function timeInDaysFromNow(daysFromNow) {
  var tmpDate = new Date();
  tmpDate.setDate(tmpDate.getDate() + daysFromNow);
  return tmpDate.getTime().toString();
};

var persistResponse = function persistResponse(JsonResponse) {
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(USER_FEATURES_EXPIRY_COOKIE, timeInDaysFromNow(1));
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(PAYING_MEMBER_COOKIE, JsonResponse.contentAccess.paidMember);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(RECURRING_CONTRIBUTOR_COOKIE, JsonResponse.contentAccess.recurringContributor);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(DIGITAL_SUBSCRIBER_COOKIE, JsonResponse.contentAccess.digitalPack);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(ACTION_REQUIRED_FOR_COOKIE);

  if ('alertAvailableFor' in JsonResponse) {
    Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(ACTION_REQUIRED_FOR_COOKIE, JsonResponse.alertAvailableFor);
  }

  if (adFreeDataIsPresent() && !forcedAdFreeMode && !JsonResponse.contentAccess.digitalPack) {
    Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(AD_FREE_USER_COOKIE);
  }

  if (JsonResponse.contentAccess.digitalPack) {
    Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["addCookie"])(AD_FREE_USER_COOKIE, timeInDaysFromNow(2));
  }
};

var deleteOldData = function deleteOldData() {
  // We expect adfree cookies to be cleaned up by the logout process, but what if the user's login simply times out?
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(USER_FEATURES_EXPIRY_COOKIE);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(PAYING_MEMBER_COOKIE);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(RECURRING_CONTRIBUTOR_COOKIE);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(AD_FREE_USER_COOKIE);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(ACTION_REQUIRED_FOR_COOKIE);
  Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["removeCookie"])(DIGITAL_SUBSCRIBER_COOKIE);
};

var requestNewData = function requestNewData() {
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_2__["default"])("".concat(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.userAttributesApiUrl, "/me"), {
    mode: 'cors',
    credentials: 'include'
  }).then(persistResponse).catch(function () {});
};

var datedCookieIsOld = function datedCookieIsOld(datedCookieName) {
  var expiryDateFromCookie = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(datedCookieName);
  var expiryTime = parseInt(expiryDateFromCookie, 10);
  var timeNow = new Date().getTime();
  return timeNow >= expiryTime;
};

var featuresDataIsMissing = function featuresDataIsMissing() {
  return !Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(USER_FEATURES_EXPIRY_COOKIE);
};

var featuresDataIsOld = function featuresDataIsOld() {
  return datedCookieIsOld(USER_FEATURES_EXPIRY_COOKIE);
};

var adFreeDataIsOld = function adFreeDataIsOld() {
  var switches = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].switches;
  return switches.adFreeStrictExpiryEnforcement && datedCookieIsOld(AD_FREE_USER_COOKIE);
};

var userNeedsNewFeatureData = function userNeedsNewFeatureData() {
  return featuresDataIsMissing() || featuresDataIsOld() || adFreeDataIsPresent() && adFreeDataIsOld();
};

var userHasDataAfterSignout = function userHasDataAfterSignout() {
  return !Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_3__["isUserLoggedIn"])() && userHasData();
};
/**
 * Updates the user's data in a lazy fashion
 */


var refresh = function refresh() {
  if (Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_3__["isUserLoggedIn"])() && userNeedsNewFeatureData()) {
    return requestNewData();
  } else if (userHasDataAfterSignout() && !forcedAdFreeMode) {
    deleteOldData();
  }

  return Promise.resolve();
};

var supportSiteRecurringCookiePresent = function supportSiteRecurringCookiePresent() {
  return Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE) != null || Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE) != null;
};
/**
 * Does our _existing_ data say the user is a paying member?
 * This data may be stale; we do not wait for userFeatures.refresh()
 */


var isPayingMember = function isPayingMember() {
  return (// If the user is logged in, but has no cookie yet, play it safe and assume they're a paying user
    Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_3__["isUserLoggedIn"])() && Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(PAYING_MEMBER_COOKIE) !== 'false'
  );
}; // number returned is Epoch time in milliseconds.
// null value signifies no last contribution date.


var getLastOneOffContributionDate = function getLastOneOffContributionDate() {
  var cookie = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE);

  if (!cookie) {
    return null;
  } // Contributions frontend set date time of last contribution using ISO 8601 format.
  // Support frontend set date time of last contribution in Epoch milliseconds.
  // If we first attempted to parse cookie in Epoch milliseconds format (parseInt()),
  // then a value in ISO 8601 format would parse (incorrectly) e.g. 2018-08-17T16:11:10Z => 2018
  // So first attempt to parse cookie in ISO 8601 format.


  var ms;
  ms = Date.parse(cookie);

  if (Number.isInteger(ms)) {
    return ms;
  }

  ms = parseInt(cookie, 10);

  if (Number.isInteger(ms)) {
    return ms;
  }

  return null;
};

var getDaysSinceLastOneOffContribution = function getDaysSinceLastOneOffContribution() {
  var lastContributionDate = getLastOneOffContributionDate();

  if (!lastContributionDate) {
    return null;
  }

  return Object(lib_time_utils__WEBPACK_IMPORTED_MODULE_4__["dateDiffDays"])(lastContributionDate, Date.now());
}; // in last six months


var isRecentOneOffContributor = function isRecentOneOffContributor() {
  var daysSinceLastContribution = getDaysSinceLastOneOffContribution();

  if (!daysSinceLastContribution) {
    return false;
  }

  return daysSinceLastContribution <= 180;
};

var isRecurringContributor = function isRecurringContributor() {
  return (// If the user is logged in, but has no cookie yet, play it safe and assume they're a contributor
    Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_3__["isUserLoggedIn"])() && Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(RECURRING_CONTRIBUTOR_COOKIE) !== 'false' || supportSiteRecurringCookiePresent()
  );
};

var isDigitalSubscriber = function isDigitalSubscriber() {
  return Object(lib_cookies__WEBPACK_IMPORTED_MODULE_0__["getCookie"])(DIGITAL_SUBSCRIBER_COOKIE) === 'true';
};
/*
    Whenever the checks are updated, please make sure to update
    applyRenderConditions.scala.js too, where the global CSS class, indicating
    the user should not see the revenue messages, is added to the body.
    Please also update readerRevenueRelevantCookies below, if changing the cookies
    which this function is dependent on.
*/


var shouldSeeReaderRevenue = function shouldSeeReaderRevenue() {
  return !isPayingMember() && !isRecentOneOffContributor() && !isRecurringContributor() && !isDigitalSubscriber();
};

var readerRevenueRelevantCookies = [PAYING_MEMBER_COOKIE, DIGITAL_SUBSCRIBER_COOKIE, RECURRING_CONTRIBUTOR_COOKIE, SUPPORT_RECURRING_CONTRIBUTOR_MONTHLY_COOKIE, SUPPORT_RECURRING_CONTRIBUTOR_ANNUAL_COOKIE, SUPPORT_ONE_OFF_CONTRIBUTION_COOKIE];

var isAdFreeUser = function isAdFreeUser() {
  return isDigitalSubscriber() || adFreeDataIsPresent() && !adFreeDataIsOld();
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/component.js":
/*!*********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/component.js ***!
  \*********************************************************************/
/*! exports provided: Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bonzo */ "./node_modules/bonzo/bonzo.js");
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bonzo__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_6__);




/* eslint-disable no-underscore-dangle */





var ComponentError = function ComponentError(message) {
  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, ComponentError);

  return new Error("Component: ".concat(message));
};

var Component =
/*#__PURE__*/
function () {
  function Component() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, Component);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "useBem", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "templateName", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "componentClass", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "endpoint", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "classes", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "elem", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "template", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "rendered", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "destroyed", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "elems", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "options", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "defaultOptions", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "responseDataKey", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "autoupdated", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "updateEvery", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "fetchData", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "manipulationType", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "t", void 0);

    this.useBem = false;
    this.templateName = null;
    this.componentClass = null;
    this.endpoint = null;
    this.classes = null;
    this.elem = null;
    this.template = null;
    this.rendered = false;
    this.destroyed = false;
    this.elems = null;
    this.options = {};
    this.defaultOptions = {};
    this.responseDataKey = 'html';
    this.autoupdated = false;
    this.updateEvery = 60;
    this.fetchData = null;
    this.manipulationType = 'append';
    this.t = null;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_0___default()(Component, [{
    key: "attachTo",
    value: function attachTo(elem) {
      this.checkAttached();
      this.elem = elem;

      this._prerender();

      this._ready();
    }
  }, {
    key: "render",
    value: function render() {
      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;
      this.checkAttached();
      var template = this.template;

      if (!template && this.templateName) {
        var templateEl = document.getElementById("tmpl-".concat(this.templateName));

        if (templateEl) {
          template = templateEl.innerHTML;
        }
      }

      if (template) {
        this.elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default.a.create(template)[0];

        this._prerender();

        bonzo__WEBPACK_IMPORTED_MODULE_4___default()(parent)[this.manipulationType](this.elem);
      }

      this._ready();

      return this;
    }
    /**
     * Throws an error if this is already attached to the DOM
     */

  }, {
    key: "checkAttached",
    value: function checkAttached() {
      if (this.rendered) {
        throw new ComponentError('Already rendered');
      }
    }
  }, {
    key: "fetch",
    value: function fetch(parent, key) {
      var _this = this;

      this.checkAttached();

      if (key) {
        this.responseDataKey = key;
      }

      return this._fetch().then(function (resp) {
        _this.elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default.a.create(resp[_this.responseDataKey])[0];

        _this._prerender();

        if (!_this.destroyed) {
          bonzo__WEBPACK_IMPORTED_MODULE_4___default()(parent)[_this.manipulationType](_this.elem);

          _this._ready(_this.elem);
        }
      }).catch(function (err) {
        return _this.error(err);
      });
    }
  }, {
    key: "_fetch",
    value: function _fetch() {
      var _this2 = this;

      var endpoint = typeof this.endpoint === 'function' ? this.endpoint() : this.endpoint;

      if (typeof endpoint === 'string') {
        Object.keys(this.options).forEach(function (key) {
          var value = _this2.options[key];

          if (endpoint && value) {
            endpoint = endpoint.replace(":".concat(key), value);
          }
        });
      }

      if (!endpoint) {
        return Promise.resolve({});
      }

      return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_5__["default"])(endpoint, {
        mode: 'cors',
        body: this.fetchData
      }).then(function (resp) {
        _this2.fetched(resp);

        return resp;
      });
    }
  }, {
    key: "_ready",
    value: function _ready(elem) {
      if (!this.destroyed) {
        this.rendered = true;

        this._autoupdate();

        this.ready(elem);
      }
    }
  }, {
    key: "_prerender",
    value: function _prerender() {
      this.elems = {};
      this.prerender();
    }
    /**
     * Check if we should auto update, if so, do so
     */

  }, {
    key: "_autoupdate",
    value: function _autoupdate() {
      var _this3 = this;

      var setAutoUpdate = function setAutoUpdate() {
        // eslint-disable-next-line no-use-before-define
        _this3.t = setTimeout(function () {
          return update();
        }, _this3.updateEvery * 1000);
      };

      var update = function update() {
        _this3._fetch().then(function (resp) {
          _this3.autoupdate(bonzo__WEBPACK_IMPORTED_MODULE_4___default.a.create(resp[_this3.responseDataKey])[0]);

          if (_this3.autoupdated) {
            setAutoUpdate();
          }
        }).catch(function () {
          setAutoUpdate();
        });
      };

      if (this.autoupdated) {
        setAutoUpdate();
      }
    }
    /**
     * This is user to edit this.elem before it's rendered
     * This will help with the rendering performance that
     * we would lose if rendered then manipulated
     */
    // eslint-disable-next-line class-methods-use-this, no-unused-vars

  }, {
    key: "prerender",
    value: function prerender() {}
    /**
     * Once the render / decorate methods have been called
     * This is where you could do your event binding
     * This function is made to be overridden
     */
    // eslint-disable-next-line class-methods-use-this, no-unused-vars

  }, {
    key: "ready",
    value: function ready(elem) {}
    /**
     * Once the render / decorate methods have been called
     * This is where you could do your error event binding
     * This function is made to be overridden
     */
    // eslint-disable-next-line class-methods-use-this, no-unused-vars

  }, {
    key: "error",
    value: function error(type, message) {}
    /**
     * This is called whenever a fetch occurs. This includes
     * explicit fetch calls and autoupdate.
     */
    // eslint-disable-next-line class-methods-use-this, no-unused-vars

  }, {
    key: "fetched",
    value: function fetched(resp) {}
  }, {
    key: "autoupdate",
    value: function autoupdate(elem) {
      var oldElem = this.elem;
      this.elem = elem;

      this._prerender();

      bonzo__WEBPACK_IMPORTED_MODULE_4___default()(oldElem).replaceWith(this.elem);
    }
    /**
     * Once we're done with it, remove event bindings etc
     */
    // eslint-disable-next-line class-methods-use-this, no-unused-vars

  }, {
    key: "dispose",
    value: function dispose() {}
  }, {
    key: "on",
    value: function on(eventType, elem, handler) {
      if (typeof elem === 'function') {
        var eventHandler = elem;
        bean__WEBPACK_IMPORTED_MODULE_3___default.a.on(this.elem, eventType, eventHandler.bind(this));
      } else if (typeof handler === 'function') {
        var selector = !elem.length ? [elem] : elem;
        bean__WEBPACK_IMPORTED_MODULE_3___default.a.on(this.elem, eventType, selector, handler.bind(this));
      }

      return this;
    }
  }, {
    key: "emit",
    value: function emit(eventName, args) {
      bean__WEBPACK_IMPORTED_MODULE_3___default.a.fire(this.elem, eventName, args);
    }
  }, {
    key: "getElem",
    value: function getElem(elemName) {
      if (this.elems && this.elems[elemName]) {
        return this.elems[elemName];
      }

      var elem = qwery__WEBPACK_IMPORTED_MODULE_6___default()(this.getClass(elemName), this.elem)[0];

      if (elem && this.elems) {
        this.elems[elemName] = elem;
      }

      return elem;
    }
  }, {
    key: "getClass",
    value: function getClass(elemName) {
      var sansDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var className;

      if (this.useBem && this.componentClass) {
        className = "".concat(this.componentClass, "__").concat(elemName);
      } else {
        className = this.classes && this.classes[elemName] || '';
      }

      return (sansDot ? '' : '.') + className;
    }
  }, {
    key: "setState",
    value: function setState(state, elemName) {
      var elem = elemName ? this.getElem(elemName) : this.elem;
      var $elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default()(elem);

      if (this.componentClass) {
        $elem.addClass("".concat(this.componentClass + (elemName ? "__".concat(elemName) : ''), "--").concat(state));
      }
    }
  }, {
    key: "removeState",
    value: function removeState(state, elemName) {
      var elem = elemName ? this.getElem(elemName) : this.elem;
      var $elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default()(elem);

      if (this.componentClass) {
        $elem.removeClass("".concat(this.componentClass + (elemName ? "__".concat(elemName) : ''), "--").concat(state));
      }
    }
  }, {
    key: "toggleState",
    value: function toggleState(state, elemName) {
      var elem = elemName ? this.getElem(elemName) : this.elem;
      var $elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default()(elem);

      if (this.componentClass) {
        $elem.toggleClass("".concat(this.componentClass + (elemName ? "__".concat(elemName) : ''), "--").concat(state));
      }
    }
  }, {
    key: "hasState",
    value: function hasState(state, elemName) {
      var elem = elemName ? this.getElem(elemName) : this.elem;
      var $elem = bonzo__WEBPACK_IMPORTED_MODULE_4___default()(elem);

      if (this.componentClass) {
        return $elem.hasClass("".concat(this.componentClass + (elemName ? "__".concat(elemName) : ''), "--").concat(state));
      }

      return false;
    }
  }, {
    key: "setOptions",
    value: function setOptions(options) {
      this.options = Object.assign({}, this.defaultOptions, this.options, options);
    }
    /**
     * Removes all event listeners and removes the DOM elem
     */

  }, {
    key: "destroy",
    value: function destroy() {
      if (this.elem) {
        bonzo__WEBPACK_IMPORTED_MODULE_4___default()(this.elem).remove();
        delete this.elem;
      }

      if (this.t) {
        window.clearTimeout(this.t);
      }

      this.t = null;
      this.autoupdated = false;
      bean__WEBPACK_IMPORTED_MODULE_3___default.a.off(this.elem);
      this.destroyed = true;
      this.rendered = false;
    }
  }]);

  return Component;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/email/email-article.js":
/*!*******************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/email/email-article.js ***!
  \*******************************************************************************/
/*! exports provided: init, getListConfigs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListConfigs", function() { return getListConfigs; });
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/objectSpread */ "./node_modules/@babel/runtime/helpers/objectSpread.js");
/* harmony import */ var _babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bonzo */ "./node_modules/bonzo/bonzo.js");
/* harmony import */ var bonzo__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bonzo__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var common_modules_email_email__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/email/email */ "./static/src/javascripts/projects/common/modules/email/email.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var raw_loader_common_views_email_iframe_html__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! raw-loader!common/views/email/iframe.html */ "./node_modules/raw-loader/index.js!./static/src/javascripts/projects/common/views/email/iframe.html");
/* harmony import */ var raw_loader_common_views_email_iframe_html__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(raw_loader_common_views_email_iframe_html__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/template */ "./node_modules/lodash/template.js");
/* harmony import */ var lodash_template__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_template__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/article/space-filler */ "./static/src/javascripts/projects/common/modules/article/space-filler.js");
/* harmony import */ var lib_robust__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lib/robust */ "./static/src/javascripts/lib/robust.js");
/* harmony import */ var common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/modules/email/run-checks */ "./static/src/javascripts/projects/common/modules/email/run-checks.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! common/modules/check-mediator */ "./static/src/javascripts/projects/common/modules/check-mediator.js");















var insertBottomOfArticle = function insertBottomOfArticle($iframeEl) {
  fastdom__WEBPACK_IMPORTED_MODULE_4___default.a.write(function () {
    return $iframeEl.prependTo('.content-footer');
  });
};

var listConfigs = {
  /* The difference between listName and identityListName:
   listName is a reference used in the javascript for legacy reasons where as the identityListName is is the name stored in the identity model and used in the backend. */
  theFilmToday: {
    listId: '4144',
    listName: 'theFilmToday',
    identityListName: 'film-today',
    campaignCode: 'film_article_signup',
    displayName: {
      normalText: 'film',
      accentedText: 'today'
    },
    headline: 'Film Today: now booking',
    description: 'Sign up to the Guardian Film Today email and we’ll make sure you don’t miss a thing &ndash; the day’s insider news and our latest reviews, plus big name interviews and film festival coverage.',
    successDescription: 'You’ll receive an email every afternoon after you have clicked the link in the confirmation mail.',
    insertMethod: insertBottomOfArticle
  },
  theFiver: {
    listId: '4163',
    listName: 'theFiver',
    identityListName: 'the-fiver',
    campaignCode: 'fiver_article_signup',
    displayName: {
      normalText: 'the',
      accentedText: 'fiver'
    },
    headline: 'Kick off your evenings with our football roundup',
    description: 'Sign up to the Fiver, our daily email on the world of football. We’ll deliver the day’s news and gossip in our own belligerent, sometimes intelligent and &ndash; very occasionally &ndash; funny way.',
    successDescription: 'You’ll receive the Fiver daily around 5pm after you have clicked the link in the confirmation mail.',
    insertMethod: insertBottomOfArticle
  },
  labNotes: {
    listId: '4153',
    listName: 'labNotes',
    identityListName: 'lab-notes',
    campaignCode: 'lab_notes_article_signup',
    displayName: {
      normalText: 'lab',
      accentedText: 'notes'
    },
    headline: 'Science news you’ll want to read. Fact.',
    description: 'Sign up to Lab Notes and we’ll email you the top stories in science, from medical breakthroughs to dinosaur discoveries &ndash; plus brainteasers, podcasts and more.',
    successDescription: 'You’ll receive an email every week after you have clicked the link in the confirmation mail.',
    insertMethod: insertBottomOfArticle
  },
  euRef: {
    listId: '4142',
    listName: 'euRef',
    identityListName: 'brexit-briefing',
    campaignCode: 'eu_ref_article_signup',
    displayName: {
      normalText: 'brexit',
      accentedText: 'briefing'
    },
    headline: 'Brexit: your weekly briefing',
    description: 'Sign up and we’ll email you the key developments and most important debates as Britain takes its first steps on the long road to leaving the EU.',
    successDescription: 'You’ll receive an email every morning after you have clicked the link in the confirmation mail.',
    insertMethod: insertBottomOfArticle
  },
  usBriefing: {
    listId: '4152',
    listName: 'usBriefing',
    identityListName: 'today-us',
    campaignCode: 'guardian_today_article_bottom',
    displayName: {
      normalText: 'us',
      accentedText: 'briefing'
    },
    headline: 'Want stories like this in your inbox?',
    description: 'Sign up to the Guardian US briefing to get the top stories in your inbox every weekday.',
    successDescription: 'We will send you our pick of the most important stories after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  },
  sleevenotes: {
    listId: '4159',
    listName: 'sleevenotes',
    identityListName: 'sleeve-notes',
    campaignCode: 'sleevenotes_article_bottom',
    displayName: {
      normalText: 'sleeve',
      accentedText: 'notes'
    },
    headline: 'Sleeve notes: sounds good',
    description: 'Get music news, bold reviews and unexpected extras emailed direct to you from the Guardian’s music desk every Friday.',
    successDescription: 'You’ll receive an email every Friday after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  },
  longReads: {
    listId: '4165',
    listName: 'longReads',
    identityListName: 'the-long-read',
    campaignCode: 'long_reads_article_bottom',
    displayName: {
      normalText: 'long',
      accentedText: 'reads'
    },
    headline: 'Here’s the real story',
    description: 'Lose yourself in a great story. From politics to psychology, food to technology, culture to crime – the best stories, the biggest ideas, the arguments that matter.',
    successDescription: 'You’ll receive an email every weekend after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  },
  bookmarks: {
    listId: '4137',
    listName: 'bookmarks',
    identityListName: 'bookmarks',
    campaignCode: 'bookmarks_article_bottom',
    displayName: {
      normalText: 'book',
      accentedText: 'marks'
    },
    headline: 'Bookmarks: read me first',
    description: 'Sign up for our weekly email for book lovers and discover top 10s, expert book reviews, author interviews, and enjoy highlights from our columnists and community every weekend.',
    successDescription: 'You’ll receive an email every weekend after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  },
  greenLight: {
    listId: '4147',
    listName: 'greenLight',
    identityListName: 'green-light',
    campaignCode: 'green_light_article_bottom',
    displayName: {
      normalText: 'green',
      accentedText: 'light'
    },
    headline: 'The most important stories on the planet',
    description: 'Sign up to Green Light for environment news emailed direct to you every Friday. And besides the week’s biggest stories and debates, you can expect beautifully curated wildlife galleries, absorbing podcasts and eco-living guides.',
    successDescription: 'You’ll receive an email every Friday after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  },
  theGuardianToday: {
    listId: function () {
      switch (lib_config__WEBPACK_IMPORTED_MODULE_6__["default"].get('page.edition')) {
        default:
          return '4151';

        case 'US':
          return '4152';

        case 'AU':
          return '4150';
      }
    }(),
    listName: 'theGuardianToday',
    identityListName: function () {
      switch (lib_config__WEBPACK_IMPORTED_MODULE_6__["default"].get('page.edition')) {
        default:
          return 'today-uk';

        case 'US':
          return 'today-us';

        case 'AU':
          return 'today-au';
      }
    }(),
    campaignCode: 'guardian_today_article_bottom',
    displayName: {
      normalText: 'theguardian',
      accentedText: 'today'
    },
    headline: 'The headlines, the analysis, the debate',
    description: 'Get the whole picture from a source you trust, emailed to you every morning. The biggest stories examined, and diverse, independent views &ndash; the Guardian Today delivers the best of our journalism.',
    successDescription: 'We will send you our picks of the most important headlines tomorrow morning after you have clicked the link in the confirmation mail',
    insertMethod: insertBottomOfArticle
  }
};
var spacefinderRules = {
  bodySelector: '.js-article__body',
  slotSelector: ' > p',
  minAbove: 200,
  minBelow: 150,
  clearContentMeta: 50,
  fromBottom: true,
  selectors: {
    ' .element-rich-link': {
      minAbove: 100,
      minBelow: 100
    },
    ' > h2': {
      minAbove: 200,
      minBelow: 0
    },
    ' > *:not(p):not(h2):not(blockquote)': {
      minAbove: 35,
      minBelow: 200
    },
    ' .ad-slot': {
      minAbove: 150,
      minBelow: 200
    }
  }
};

var addListToPage = function addListToPage(listConfig) {
  var successEventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var iframe = bonzo__WEBPACK_IMPORTED_MODULE_3___default.a.create(lodash_template__WEBPACK_IMPORTED_MODULE_8___default()(raw_loader_common_views_email_iframe_html__WEBPACK_IMPORTED_MODULE_7___default.a)(_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default()({}, listConfig, {
    successEventName: successEventName
  })))[0];
  var $iframeEl = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])(iframe);

  var onEmailAdded = function onEmailAdded() {
    Object(common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_11__["setEmailShown"])(listConfig.listName);
    lib_storage__WEBPACK_IMPORTED_MODULE_12__["session"].set('email-sign-up-seen', 'true');
  };

  bean__WEBPACK_IMPORTED_MODULE_2___default.a.on(iframe, 'load', function () {
    Object(common_modules_email_email__WEBPACK_IMPORTED_MODULE_5__["initEmail"])(iframe);
  });

  if (listConfig.insertMethod) {
    fastdom__WEBPACK_IMPORTED_MODULE_4___default.a.write(function () {
      listConfig.insertMethod($iframeEl);
      onEmailAdded();
    });
  } else {
    common_modules_article_space_filler__WEBPACK_IMPORTED_MODULE_9__["spaceFiller"].fillSpace(spacefinderRules, function (paras) {
      $iframeEl.insertBefore(paras[0]);
      onEmailAdded();
    });
  }
};

var init = function init() {
  Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_13__["waitForCheck"])('emailCanRun').then(function (emailCanRun) {
    if (emailCanRun) {
      Object(common_modules_check_mediator__WEBPACK_IMPORTED_MODULE_13__["waitForCheck"])('emailCanRunPostCheck').then(function (emailCanRunPostCheck) {
        if (emailCanRunPostCheck) {
          Object(common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_11__["getUserEmailSubscriptions"])().then(function () {
            var listConfig = Object.keys(listConfigs).find(function (key) {
              return Object(common_modules_email_run_checks__WEBPACK_IMPORTED_MODULE_11__["listCanRun"])(listConfigs[key]);
            });

            if (listConfig) {
              addListToPage(listConfigs[listConfig]);
            }
          }).catch(function (error) {
            Object(lib_robust__WEBPACK_IMPORTED_MODULE_10__["logError"])('c-email', error);
          });
        }
      });
    }
  }).catch(function (error) {
    Object(lib_robust__WEBPACK_IMPORTED_MODULE_10__["logError"])('check-mediator', error);
  });
};

var getListConfigs = function getListConfigs() {
  return listConfigs;
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/email/email.js":
/*!***********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/email/email.js ***!
  \***********************************************************************/
/*! exports provided: initEmail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initEmail", function() { return initEmail; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_formInlineLabels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/formInlineLabels */ "./static/src/javascripts/lib/formInlineLabels.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_fetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/fetch */ "./static/src/javascripts/lib/fetch.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_robust__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lib/robust */ "./static/src/javascripts/lib/robust.js");
/* harmony import */ var common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/modules/analytics/google */ "./static/src/javascripts/projects/common/modules/analytics/google.js");
/* harmony import */ var common_views_svgs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/views/svgs */ "./static/src/javascripts/projects/common/views/svgs.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");
/* harmony import */ var common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! common/modules/user-prefs */ "./static/src/javascripts/projects/common/modules/user-prefs.js");
/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/uniq */ "./node_modules/lodash/uniq.js");
/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var svgs_icon_envelope_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! svgs/icon/envelope.svg */ "./static/src/inline-svgs/icon/envelope.svg");
/* harmony import */ var svgs_icon_envelope_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_envelope_svg__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! svgs/icon/cross.svg */ "./static/src/inline-svgs/icon/cross.svg");
/* harmony import */ var svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_16__);

















var state = {
  submitting: false
};
var messages = {
  defaultSuccessHeadline: 'Check your Inbox to confirm subscription',
  defaultSuccessDesc: ''
};
var classes = {
  wrapper: 'js-email-sub',
  form: 'js-email-sub__form',
  inlineLabel: 'js-email-sub__inline-label',
  textInput: 'js-email-sub__text-input',
  dummyInput: 'js-email-sub__text-name',
  listNameHiddenInput: 'js-email-sub__listname-input'
};

var replaceContent = function replaceContent(isSuccess, $form) {
  var formData = $form.data('formData');
  var statusClass = isSuccess ? 'email-sub__message--success' : 'email-sub__message--failure';
  var submissionHeadline = isSuccess ? formData.customSuccessHeadline || messages.defaultSuccessHeadline : 'Something went wrong';
  var submissionMessage = isSuccess ? formData.customSuccessDesc || messages.defaultSuccessDesc : 'Please try again.';
  var submissionIcon = isSuccess ? svgs_icon_envelope_svg__WEBPACK_IMPORTED_MODULE_15___default.a.markup : svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_16___default.a.markup;
  var submissionHtml = "\n        <div class=\"email-sub__message ".concat(statusClass, "\" role=\"alert\" aria-live=\"assertive\">\n            ").concat(submissionIcon, "\n            <h3 class=\"email-sub__message__headline\">").concat(submissionHeadline, "</h3>\n            <p class=\"email-sub__message__description\">").concat(submissionMessage, "</p>\n        </div>");
  fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
    $form.addClass('email-sub__form--is-hidden');
    $form.after(submissionHtml);
  });
};

var removeAndRemember = function removeAndRemember(e, _ref) {
  var iframe = _ref.iframe,
      analytics = _ref.analytics;
  var currentListPrefs = common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_13__["default"].get("email-sign-up-".concat(analytics.formType)) || [];
  currentListPrefs.push("".concat(analytics.listId));
  common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_13__["default"].set("email-sign-up-".concat(analytics.formType), lodash_uniq__WEBPACK_IMPORTED_MODULE_14___default()(currentListPrefs));
  Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(iframe).remove();
  Object(common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_10__["trackNonClickInteraction"])("rtrt | email form inline | ".concat(analytics.formType, " | ").concat(analytics.listId, " | ").concat(analytics.signedIn, " | form hidden"));
};

var updateFormForLoggedIn = function updateFormForLoggedIn(userFromId, el) {
  if (userFromId && userFromId.primaryEmailAddress) {
    fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__inline-label', el).addClass('email-sub__inline-label--is-hidden');
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__submit-button', el).addClass('email-sub__submit-button--solo');
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__text-input', el).val(userFromId.primaryEmailAddress);
    });
  }
};

var updateForm = function updateForm(thisRootEl, $el, analytics) {
  var formData = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(thisRootEl).data();
  var formDisplayNameNormalText = formData.formDisplayNameNormalText || false;
  var formDisplayNameAccentedText = formData.formDisplayNameAccentedText || false;
  var formTitle = formData.formTitle || false;
  var formDescription = formData.formDescription || false;
  var formCampaignCode = formData.formCampaignCode || '';
  var formSuccessHeadline = formData.formSuccessHeadline;
  var formSuccessDesc = formData.formSuccessDesc;
  var removeComforter = formData.removeComforter || false;
  var formCloseButton = formData.formCloseButton || false;
  var formSuccessEventName = formData.formSuccessEventName || false;
  Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_12__["getUserFromApi"])(function (userFromId) {
    updateFormForLoggedIn(userFromId, $el);
  });
  fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
    if (formDisplayNameNormalText) {
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__display-name-normal-text', $el).text(formDisplayNameNormalText);

      if (formDisplayNameAccentedText) {
        Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__display-name-accented-text', $el).text(formDisplayNameAccentedText);
      }
    } else if (formTitle) {
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__heading', $el).text(formTitle);
    }

    if (formDescription) {
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__description', $el).text(formDescription);
    }

    if (removeComforter) {
      Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__small', $el).remove();
    }

    if (formCloseButton) {
      var closeButtonHtml = "\n                <button class=\"email-sub__close js-email-sub--close\" data-link-name=\"hide\">\n                    <span class=\"email-sub__hidden\">Close</span>\n                    <span class=\"email-sub__close-icon\">\n                        ".concat(Object(common_views_svgs__WEBPACK_IMPORTED_MODULE_11__["inlineSvg"])('closeCentralIcon'), "\n                    </span>\n                </button>");
      $el.append(closeButtonHtml);
      bean__WEBPACK_IMPORTED_MODULE_2___default.a.on($el[0], 'click', '.js-email-sub--close', removeAndRemember, {
        iframe: thisRootEl,
        analytics: analytics
      });
    }
  }); // Cache data on the form element

  Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-email-sub__form', $el).data('formData', {
    customSuccessEventName: formSuccessEventName,
    campaignCode: formCampaignCode,
    referrer: window.location.href,
    customSuccessHeadline: formSuccessHeadline,
    customSuccessDesc: formSuccessDesc
  });
};

var heightSetter = function heightSetter($wrapper, reset) {
  var wrapperHeight;

  var getHeight = function getHeight() {
    fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.read(function () {
      wrapperHeight = $wrapper[0].clientHeight;
    });
  };

  var setHeight = function setHeight() {
    fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.defer(function () {
      $wrapper.css('min-height', wrapperHeight);
    });
  };

  var resetHeight = function resetHeight() {
    fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
      $wrapper.css('min-height', '');
      getHeight();
      setHeight();
    });
  };

  return function () {
    if (reset) {
      resetHeight();
    } else {
      getHeight();
      setHeight();
    }
  };
};

var setIframeHeight = function setIframeHeight(iFrameEl, callback) {
  return function () {
    fastdom__WEBPACK_IMPORTED_MODULE_3___default.a.write(function () {
      iFrameEl.height = '';
      iFrameEl.height = "".concat(iFrameEl.contentWindow.document.body.clientHeight, "px");
      callback();
    });
  };
};

var handleSubmit = function handleSubmit(isSuccess, $form) {
  return function () {
    replaceContent(isSuccess, $form);
    state.submitting = false;
  };
};

var submitForm = function submitForm($form, url, analytics) {
  // simplistic email address validation to prevent misfired omniture events
  var validate = function validate(emailAddress) {
    return emailAddress.includes('@');
  };

  return function (event) {
    var emailAddress = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.textInput), $form).val();
    var csrfToken = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])("input[name=csrfToken]", $form).val();
    var dummy = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.dummyInput), $form).val();
    var listName = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.listNameHiddenInput), $form);
    var analyticsInfo;
    event.preventDefault();

    if (!state.submitting && validate(emailAddress)) {
      var formData = $form.data('formData');
      var data = "email=".concat(encodeURIComponent(emailAddress), "&name=").concat(encodeURIComponent(dummy), "&campaignCode=").concat(formData.campaignCode, "&referrer=").concat(formData.referrer, "&csrfToken=").concat(encodeURIComponent(csrfToken), "&listName=").concat(listName.val());
      analyticsInfo = "rtrt | email form inline | ".concat(analytics.formType, " | ").concat(analytics.signedIn, " | %action%");
      state.submitting = true;
      return new Promise(function () {
        if (formData.customSuccessEventName) {
          lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].emit(formData.customSuccessEventName);
        }

        Object(common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_10__["trackNonClickInteraction"])(analyticsInfo.replace('%action%', 'subscribe clicked'));
        return Object(lib_fetch__WEBPACK_IMPORTED_MODULE_7__["default"])(lib_config__WEBPACK_IMPORTED_MODULE_5__["default"].get('page.ajaxUrl') + url, {
          method: 'post',
          body: data,
          headers: {
            Accept: 'application/json'
          }
        }).then(function (response) {
          if (!response.ok) {
            throw new Error("Fetch error: ".concat(response.status, " ").concat(response.statusText));
          }
        }).then(function () {
          Object(common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_10__["trackNonClickInteraction"])(analyticsInfo.replace('%action%', 'subscribe successful'));
        }).then(handleSubmit(true, $form)).catch(function (error) {
          Object(lib_robust__WEBPACK_IMPORTED_MODULE_9__["logError"])('c-email', error);
          Object(common_modules_analytics_google__WEBPACK_IMPORTED_MODULE_10__["trackNonClickInteraction"])(analyticsInfo.replace('%action%', 'error'));
          handleSubmit(false, $form)();
        });
      });
    }
  };
};

var bindSubmit = function bindSubmit($form, analytics) {
  var url = '/email';
  bean__WEBPACK_IMPORTED_MODULE_2___default.a.on($form[0], 'submit', submitForm($form, url, analytics));
};

var setup = function setup(rootEl, iframeEl) {
  Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.inlineLabel), rootEl).each(function (el) {
    lib_formInlineLabels__WEBPACK_IMPORTED_MODULE_1__["default"].init(el, {
      textInputClass: '.js-email-sub__text-input',
      labelClass: '.js-email-sub__label',
      hiddenLabelClass: 'email-sub__label--is-hidden',
      labelEnabledClass: 'email-sub__inline-label--enabled'
    });
  });
  Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.wrapper), rootEl).each(function (el) {
    var $el = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(el);
    var freezeHeight = heightSetter($el, false);
    var resetHeight = heightSetter($el, true);
    var $formEl = Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])(".".concat(classes.form), el);
    var analytics = {
      formType: $formEl.data('email-form-type'),
      listId: $formEl.data('email-list-id'),
      signedIn: Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_12__["isUserLoggedIn"])() ? 'user signed-in' : 'user not signed-in'
    };
    var onResize;
    bindSubmit($formEl, analytics); // If we're in an iframe, we should check whether we need to add a title and description
    // from the data attributes on the iframe (eg: allowing us to set them from composer).
    // We should also ensure our form is the right height.

    if (iframeEl) {
      updateForm(iframeEl, $el, analytics);
      setIframeHeight(iframeEl, freezeHeight)();
      onResize = setIframeHeight(iframeEl, resetHeight);
    } else {
      freezeHeight();
      onResize = resetHeight;
    }

    lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].on('window:throttledResize', onResize);
  });
};

var initEmail = function initEmail(iframeEl) {
  // If we're in <= IE9, don't run the setup and adjust the footer
  if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(lib_detect__WEBPACK_IMPORTED_MODULE_6__["getUserAgent"]) === 'object' && lib_detect__WEBPACK_IMPORTED_MODULE_6__["getUserAgent"].browser === 'MSIE' && ['7', '8', '9'].includes(lib_detect__WEBPACK_IMPORTED_MODULE_6__["getUserAgent"].version)) {
    Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-footer__secondary').addClass('l-footer__secondary--no-email');
    Object(lib_$__WEBPACK_IMPORTED_MODULE_4__["default"])('.js-footer__email-container', '.js-footer__secondary').addClass('is-hidden');
  } else if (iframeEl && iframeEl.tagName === 'IFRAME') {
    // We're loading through the iframe
    // We can listen for a lazy load or reload to catch an update
    if (iframeEl.contentDocument) {
      setup(iframeEl.contentDocument.body, iframeEl);
      bean__WEBPACK_IMPORTED_MODULE_2___default.a.on(iframeEl, 'load', function () {
        if (iframeEl && iframeEl.contentDocument) {
          setup(iframeEl.contentDocument.body, iframeEl);
        }
      });
    }
  } else {
    setup(document);
  }
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/email/run-checks.js":
/*!****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/email/run-checks.js ***!
  \****************************************************************************/
/*! exports provided: setEmailShown, getEmailShown, allEmailCanRun, getUserEmailSubscriptions, listCanRun */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setEmailShown", function() { return setEmailShown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEmailShown", function() { return getEmailShown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allEmailCanRun", function() { return allEmailCanRun; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserEmailSubscriptions", function() { return getUserEmailSubscriptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listCanRun", function() { return listCanRun; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lib_$__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/$ */ "./static/src/javascripts/lib/$.js");
/* harmony import */ var lib_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/page */ "./static/src/javascripts/lib/page.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_detect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/detect */ "./static/src/javascripts/lib/detect.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var lib_robust__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/robust */ "./static/src/javascripts/lib/robust.js");
/* harmony import */ var common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/user-prefs */ "./static/src/javascripts/projects/common/modules/user-prefs.js");
/* harmony import */ var common_modules_identity_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/identity/api */ "./static/src/javascripts/projects/common/modules/identity/api.js");









var emailShown;
var userListSubsChecked = false;
var userListSubs = [];

var pageHasBlanketBlacklist = function pageHasBlanketBlacklist() {
  return (// Prevent the blanket emails from ever showing on certain keywords or sections
    Object(lib_page__WEBPACK_IMPORTED_MODULE_2__["keywordExists"])(['US elections 2016', 'Football']) || lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'film' || lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.seriesId') === 'world/series/guardian-morning-briefing' || lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.pageId') === '/profile/first-dog-on-the-moon'
  );
}; // temporary to prevent some spammers to annoy us


var userHasRemoved = function userHasRemoved(id, formType) {
  var currentListPrefs = common_modules_user_prefs__WEBPACK_IMPORTED_MODULE_7__["default"].get("email-sign-up-".concat(formType));
  return !!currentListPrefs && currentListPrefs.includes(id);
};

var userHasSeenThisSession = function userHasSeenThisSession() {
  return !!lib_storage__WEBPACK_IMPORTED_MODULE_5__["session"].get('email-sign-up-seen');
};

var buildUserSubscriptions = function buildUserSubscriptions(response) {
  if (response && response.status !== 'error' && response.result && response.result.subscriptions) {
    userListSubs = response.result.subscriptions.map(function (sub) {
      return sub.listId;
    });
    userListSubsChecked = true;
  }

  return userListSubs;
};

var isParagraph = function isParagraph($el) {
  return !!$el.nodeName && $el.nodeName === 'P';
};

var allowedArticleStructure = function allowedArticleStructure() {
  var $articleBody = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])('.js-article__body');

  if ($articleBody.length) {
    var allArticleEls = Object(lib_$__WEBPACK_IMPORTED_MODULE_1__["default"])('> *', $articleBody);
    return Array.from(allArticleEls).slice(allArticleEls.length - 2).every(isParagraph);
  }

  return false;
};

var canRunList = {
  theFilmToday: function theFilmToday() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'film';
  },
  theFiver: function theFiver() {
    return Object(lib_page__WEBPACK_IMPORTED_MODULE_2__["keywordExists"])(['Football']) && allowedArticleStructure();
  },
  labNotes: function labNotes() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'science' && lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('switches.emailSignupLabNotes');
  },
  euRef: function euRef() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('switches.emailSignupEuRef') && Object(lib_page__WEBPACK_IMPORTED_MODULE_2__["keywordExists"])(['EU referendum']) && allowedArticleStructure();
  },
  usBriefing: function usBriefing() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'us-news' && allowedArticleStructure() || lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.series') === 'Guardian US briefing';
  },
  theGuardianToday: function theGuardianToday() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('switches.emailInArticleGtoday') && !pageHasBlanketBlacklist() && allowedArticleStructure();
  },
  sleevenotes: function sleevenotes() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'music';
  },
  longReads: function longReads() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.seriesId') === 'news/series/the-long-read';
  },
  bookmarks: function bookmarks() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'books';
  },
  greenLight: function greenLight() {
    return lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.section') === 'environment';
  }
}; // Public

var setEmailShown = function setEmailShown(emailName) {
  emailShown = emailName;
};

var getEmailShown = function getEmailShown() {
  return emailShown;
};

var allEmailCanRun = function allEmailCanRun() {
  return !lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.shouldHideAdverts') && !lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.isSensitive') && !lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.isFront') && lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.contentId') && !lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('page.contentId').includes('email-sign-up') && lib_config__WEBPACK_IMPORTED_MODULE_3__["default"].get('switches.emailInArticle') && !!lib_storage__WEBPACK_IMPORTED_MODULE_5__["session"].isAvailable() && !userHasSeenThisSession() && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(lib_detect__WEBPACK_IMPORTED_MODULE_4__["getUserAgent"]) === 'object' && !(lib_detect__WEBPACK_IMPORTED_MODULE_4__["getUserAgent"].browser === 'MSIE' && ['7', '8', '9'].includes(lib_detect__WEBPACK_IMPORTED_MODULE_4__["getUserAgent"].version));
};

var getUserEmailSubscriptions = function getUserEmailSubscriptions() {
  if (userListSubsChecked) {
    return Promise.resolve(userListSubs);
  }

  return Object(common_modules_identity_api__WEBPACK_IMPORTED_MODULE_8__["getUserEmailSignUps"])().then(buildUserSubscriptions).catch(function (error) {
    Object(lib_robust__WEBPACK_IMPORTED_MODULE_6__["logError"])('c-email', error);
  });
};

var listCanRun = function listCanRun(listConfig) {
  if (listConfig.listName && canRunList[listConfig.listName]() && !userListSubs.includes(listConfig.listId) && !userHasRemoved(listConfig.listId, 'article')) {
    return listConfig;
  }
};



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/acquisition-test-selector.js":
/*!*************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/acquisition-test-selector.js ***!
  \*************************************************************************************************/
/*! exports provided: acquisitionsTests, getTest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsTests", function() { return acquisitionsTests; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTest", function() { return getTest; });
/* harmony import */ var common_modules_experiments_segment_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/experiments/segment-util */ "./static/src/javascripts/projects/common/modules/experiments/segment-util.js");
/* harmony import */ var common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/experiments/utils */ "./static/src/javascripts/projects/common/modules/experiments/utils.js");
/* harmony import */ var common_modules_experiments_test_can_run_checks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/experiments/test-can-run-checks */ "./static/src/javascripts/projects/common/modules/experiments/test-can-run-checks.js");
/* harmony import */ var common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/acquisitions-view-log */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-view-log.js");
/* harmony import */ var common_modules_experiments_tests_contributions_epic_ask_four_earning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/experiments/tests/contributions-epic-ask-four-earning */ "./static/src/javascripts/projects/common/modules/experiments/tests/contributions-epic-ask-four-earning.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_liveblog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-liveblog */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-liveblog.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_always_ask_if_tagged__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-always-ask-if-tagged */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-always-ask-if-tagged.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_thank_you__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-thank-you */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-thank-you.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_us_gun_campaign__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-us-gun-campaign */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-gun-campaign.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_aus_env_campaign__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-aus-env-campaign */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-aus-env-campaign.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_from_google_doc_one_variant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-from-google-doc-one-variant */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-one-variant.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_from_google_doc_two_variants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-from-google-doc-two-variants */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-two-variants.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_from_google_doc_three_variants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-from-google-doc-three-variants */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-three-variants.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_from_google_doc_four_variants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-from-google-doc-four-variants */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-four-variants.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_from_google_doc_five_variants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-from-google-doc-five-variants */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-five-variants.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_au_post_one_million__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-au-post-one-million */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-au-post-one-million.js");
/* harmony import */ var common_modules_experiments_tests_acquisitions_epic_us_top_ticker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! common/modules/experiments/tests/acquisitions-epic-us-top-ticker */ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-top-ticker.js");


















var isViewable = function isViewable(v, t) {
  if (!v.options) return false;
  if (v.options.isUnlimited) return true;
  if (!v.options.maxViews) return false;
  var _v$options$maxViews = v.options.maxViews,
      maxViewCount = _v$options$maxViews.count,
      maxViewDays = _v$options$maxViews.days,
      minViewDays = _v$options$maxViews.minDaysBetweenViews;
  var isUnlimited = v.options.isUnlimited; // Should all acquisition tests be of type EpicABTest?
  // $FlowFixMe

  var testId = t.useLocalViewLog ? t.id : undefined;
  var withinViewLimit = Object(common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_3__["viewsInPreviousDays"])(maxViewDays, testId) < maxViewCount;
  var enoughDaysBetweenViews = Object(common_modules_commercial_acquisitions_view_log__WEBPACK_IMPORTED_MODULE_3__["viewsInPreviousDays"])(minViewDays, testId) === 0;
  return withinViewLimit && enoughDaysBetweenViews || isUnlimited;
};
/**
 * acquisition tests in priority order (highest to lowest)
 */


var acquisitionsTests = [common_modules_experiments_tests_acquisitions_epic_us_top_ticker__WEBPACK_IMPORTED_MODULE_16__["acquisitionsEpicUsTopTicker"], common_modules_experiments_tests_acquisitions_epic_au_post_one_million__WEBPACK_IMPORTED_MODULE_15__["acquisitionsEpicAuPostOneMillion"], common_modules_experiments_tests_acquisitions_epic_from_google_doc_one_variant__WEBPACK_IMPORTED_MODULE_10__["acquisitionsEpicFromGoogleDocOneVariant"], common_modules_experiments_tests_acquisitions_epic_from_google_doc_two_variants__WEBPACK_IMPORTED_MODULE_11__["acquisitionsEpicFromGoogleDocTwoVariants"], common_modules_experiments_tests_acquisitions_epic_from_google_doc_three_variants__WEBPACK_IMPORTED_MODULE_12__["acquisitionsEpicFromGoogleDocThreeVariants"], common_modules_experiments_tests_acquisitions_epic_from_google_doc_four_variants__WEBPACK_IMPORTED_MODULE_13__["acquisitionsEpicFromGoogleDocFourVariants"], common_modules_experiments_tests_acquisitions_epic_from_google_doc_five_variants__WEBPACK_IMPORTED_MODULE_14__["acquisitionsEpicFromGoogleDocFiveVariants"], common_modules_experiments_tests_acquisitions_epic_aus_env_campaign__WEBPACK_IMPORTED_MODULE_9__["acquisitionsEpicAusEnvCampaign"], common_modules_experiments_tests_acquisitions_epic_us_gun_campaign__WEBPACK_IMPORTED_MODULE_8__["acquisitionsEpicUSGunCampaign"], common_modules_experiments_tests_contributions_epic_ask_four_earning__WEBPACK_IMPORTED_MODULE_4__["askFourEarning"], common_modules_experiments_tests_acquisitions_epic_always_ask_if_tagged__WEBPACK_IMPORTED_MODULE_6__["acquisitionsEpicAlwaysAskIfTagged"], common_modules_experiments_tests_acquisitions_epic_liveblog__WEBPACK_IMPORTED_MODULE_5__["acquisitionsEpicLiveblog"], common_modules_experiments_tests_acquisitions_epic_thank_you__WEBPACK_IMPORTED_MODULE_7__["acquisitionsEpicThankYou"]];
var getTest = function getTest() {
  var forcedTests = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_1__["getForcedTests"])().map(function (_ref) {
    var testId = _ref.testId;
    return acquisitionsTests.find(function (t) {
      return t.id === testId;
    });
  }).filter(Boolean);
  if (forcedTests.length) return forcedTests.find(function (t) {
    var variant = Object(common_modules_experiments_utils__WEBPACK_IMPORTED_MODULE_1__["getForcedVariant"])(t);
    return variant && Object(common_modules_experiments_test_can_run_checks__WEBPACK_IMPORTED_MODULE_2__["testCanBeRun"])(t) && isViewable(variant, t);
  });
  return acquisitionsTests.find(function (t) {
    var variant = Object(common_modules_experiments_segment_util__WEBPACK_IMPORTED_MODULE_0__["variantFor"])(t);

    if (variant) {
      var isTestRunnable = Object(common_modules_experiments_test_can_run_checks__WEBPACK_IMPORTED_MODULE_2__["testCanBeRun"])(t);
      var isUserInTest = Object(common_modules_experiments_segment_util__WEBPACK_IMPORTED_MODULE_0__["isInTest"])(t);
      var isEpicViewable = isViewable(variant, t);
      return isTestRunnable && isUserInTest && isEpicViewable;
    }

    return false;
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/segment-util.js":
/*!************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/segment-util.js ***!
  \************************************************************************************/
/*! exports provided: variantIdFor, isInTest, variantFor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variantIdFor", function() { return variantIdFor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInTest", function() { return isInTest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variantFor", function() { return variantFor; });
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_analytics_mvt_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/analytics/mvt-cookie */ "./static/src/javascripts/projects/common/modules/analytics/mvt-cookie.js");


var NOT_IN_TEST = 'notintest';

var getId = function getId(test) {
  return test.id;
}; // use test ids as memo cache keys

/**
 * Determine whether the user is in the test or not and return the associated
 * variant ID.
 *
 * The test population is just a subset of mvt ids. A test population must
 * begin from a specific value. Overlapping test ranges are permitted.
 *
 * @return {String} variant ID
 */


var computeVariantIdFor = function computeVariantIdFor(test) {
  var smallestTestId = Object(common_modules_analytics_mvt_cookie__WEBPACK_IMPORTED_MODULE_1__["getMvtNumValues"])() * test.audienceOffset;
  var largestTestId = smallestTestId + Object(common_modules_analytics_mvt_cookie__WEBPACK_IMPORTED_MODULE_1__["getMvtNumValues"])() * test.audience;
  var mvtCookieId = Number(Object(common_modules_analytics_mvt_cookie__WEBPACK_IMPORTED_MODULE_1__["getMvtValue"])());

  if (mvtCookieId && mvtCookieId > smallestTestId && mvtCookieId <= largestTestId) {
    // This mvt test id is in the test range, so allocate it to a test variant.
    var variantIds = test.variants.map(getId);
    return variantIds[mvtCookieId % variantIds.length];
  }

  return NOT_IN_TEST;
};

var variantIdFor = lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default()(computeVariantIdFor, getId);
var isInTest = function isInTest(test) {
  return variantIdFor(test) !== NOT_IN_TEST;
};
var variantFor = function variantFor(test) {
  var variantId = variantIdFor(test);
  return test.variants.find(function (variant) {
    return variant.id === variantId;
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/test-can-run-checks.js":
/*!*******************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/test-can-run-checks.js ***!
  \*******************************************************************************************/
/*! exports provided: isExpired, testCanBeRun */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isExpired", function() { return isExpired; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testCanBeRun", function() { return testCanBeRun; });
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var isTestSwitchedOn = function isTestSwitchedOn(test) {
  return lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].switches["ab".concat(test.id)];
};

var isExpired = function isExpired(testExpiry) {
  // new Date(test.expiry) sets the expiry time to 00:00:00
  // Using SetHours allows a test to run until the END of the expiry day
  var startOfToday = new Date().setHours(0, 0, 0, 0);
  return startOfToday > new Date(testExpiry);
};
var testCanBeRun = function testCanBeRun(test) {
  var expired = isExpired(test.expiry);
  var isSensitive = lib_config__WEBPACK_IMPORTED_MODULE_0__["default"].page.isSensitive;
  var shouldShowForSensitive = !!test.showForSensitive;
  var isTestOn = isTestSwitchedOn(test);
  var canTestBeRun = !test.canRun || test.canRun();
  return (isSensitive ? shouldShowForSensitive : true) && isTestOn && !expired && canTestBeRun;
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-always-ask-if-tagged.js":
/*!********************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-always-ask-if-tagged.js ***!
  \********************************************************************************************************************/
/*! exports provided: acquisitionsEpicAlwaysAskIfTagged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicAlwaysAskIfTagged", function() { return acquisitionsEpicAlwaysAskIfTagged; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");

var acquisitionsEpicAlwaysAskIfTagged = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: 'AcquisitionsEpicAlwaysAskIfTagged',
  campaignId: 'epic_always_ask_if_tagged',
  start: '2017-05-23',
  expiry: '2019-01-24',
  author: 'Jonathan Rankin',
  description: 'This guarantees that any on any article that is tagged with a tag that is on the allowed list of tags as set by the tagging tool, the epic will be displayed',
  successMeasure: 'Conversion rate',
  idealOutcome: 'We can always show the epic on articles with a pre selected tag',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  useTargetingTool: true,
  pageCheck: function pageCheck(page) {
    return page.contentType === 'Article' || page.contentType === 'Interactive';
  },
  variants: [{
    id: 'control',
    products: ['CONTRIBUTION', 'MEMBERSHIP_SUPPORTER'],
    options: {
      isUnlimited: true,
      successOnView: true
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-au-post-one-million.js":
/*!*******************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-au-post-one-million.js ***!
  \*******************************************************************************************************************/
/*! exports provided: acquisitionsEpicAuPostOneMillion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicAuPostOneMillion", function() { return acquisitionsEpicAuPostOneMillion; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var lib_geolocation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/geolocation */ "./static/src/javascripts/lib/geolocation.js");


var abTestName = 'AcquisitionsEpicAuPostOneMillion';
var acquisitionsEpicAuPostOneMillion = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-11-23',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Money',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  locations: ['AU'],
  variants: [{
    id: 'control',
    products: [],
    options: {
      copy: {
        heading: 'Since you’re here &hellip;',
        paragraphs: ['… we have a small favour to ask. More people are reading the Guardian’s independent, investigative journalism than ever but advertising revenues across the media are falling fast. And unlike many news organisations, we haven’t put up a paywall – we want to keep our journalism as open as we can. So you can see why we need to ask for your help.', 'The Guardian is editorially independent, meaning we set our own agenda. Our journalism is free from commercial bias and not influenced by politicians or shareholders. No one edits our Editor. No one steers our opinion. This is important because it enables us to give a voice to the voiceless, challenge the powerful and hold them to account. The Guardian’s editorial independence makes it stand out in a shrinking media landscape, at a time when factual and honest reporting is more critical than ever.', 'If everyone who reads our reporting, who likes it, helps to support it, our future would be much more secure.'],
        highlightedText: "For as little as ".concat(Object(lib_geolocation__WEBPACK_IMPORTED_MODULE_1__["getLocalCurrencySymbol"])(), "1, you can support The Guardian \u2013 and it only takes a minute. Thank you.")
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-aus-env-campaign.js":
/*!****************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-aus-env-campaign.js ***!
  \****************************************************************************************************************/
/*! exports provided: acquisitionsEpicAusEnvCampaign */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicAusEnvCampaign", function() { return acquisitionsEpicAusEnvCampaign; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");


var campaignTag = 'environment/series/our-wide-brown-land';

var tagsMatch = function tagsMatch() {
  return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.nonKeywordTagIds', '').split(',').includes(campaignTag);
};

var acquisitionsEpicAusEnvCampaign = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: 'AcquisitionsAustraliaEnvironmentCampaign2018',
  campaignId: 'aus_environment_campaign_2018',
  start: '2018-01-29',
  expiry: '2018-03-30',
  author: 'Joseph Smith',
  description: 'Show a custom Epic for articles with the wide brown land tag',
  successMeasure: 'AV2.0',
  idealOutcome: 'The Australia environment campaign resonates with our readers, and we continue to provide quality reporting on this important issue',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  canRun: tagsMatch,
  variants: [{
    id: 'control',
    products: ['CONTRIBUTION'],
    options: {
      campaignCode: 'aus_environment_campaign_2018',
      isUnlimited: true,
      usesIframe: true,
      template: function template(variant) {
        return "<iframe src=\"https://interactive.guim.co.uk/embed/2018/this-wide-brown-land/epic/epic.html\"\n                        data-component=\"".concat(variant.options.componentName, "\"\n                        class=\"acquisitions-epic-iframe\"\n                        id=\"").concat(variant.options.iframeId, "\">\n                    </iframe>");
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-five-variants.js":
/*!*****************************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-five-variants.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: acquisitionsEpicFromGoogleDocFiveVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicFromGoogleDocFiveVariants", function() { return acquisitionsEpicFromGoogleDocFiveVariants; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");


var abTestName = 'AcquisitionsEpicFromGoogleDocFiveVariants';
var acquisitionsEpicFromGoogleDocFiveVariants = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: []
  }].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeGoogleDocEpicVariants"])(5)))
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-four-variants.js":
/*!*****************************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-four-variants.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: acquisitionsEpicFromGoogleDocFourVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicFromGoogleDocFourVariants", function() { return acquisitionsEpicFromGoogleDocFourVariants; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");


var abTestName = 'AcquisitionsEpicFromGoogleDocFourVariants';
var acquisitionsEpicFromGoogleDocFourVariants = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: []
  }].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeGoogleDocEpicVariants"])(4)))
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-one-variant.js":
/*!***************************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-one-variant.js ***!
  \***************************************************************************************************************************/
/*! exports provided: acquisitionsEpicFromGoogleDocOneVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicFromGoogleDocOneVariant", function() { return acquisitionsEpicFromGoogleDocOneVariant; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");


var abTestName = 'AcquisitionsEpicFromGoogleDocOneVariant';
var acquisitionsEpicFromGoogleDocOneVariant = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: []
  }].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeGoogleDocEpicVariants"])(1)))
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-three-variants.js":
/*!******************************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-three-variants.js ***!
  \******************************************************************************************************************************/
/*! exports provided: acquisitionsEpicFromGoogleDocThreeVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicFromGoogleDocThreeVariants", function() { return acquisitionsEpicFromGoogleDocThreeVariants; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");


var abTestName = 'AcquisitionsEpicFromGoogleDocThreeVariants';
var acquisitionsEpicFromGoogleDocThreeVariants = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: []
  }].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeGoogleDocEpicVariants"])(3)))
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-two-variants.js":
/*!****************************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-from-google-doc-two-variants.js ***!
  \****************************************************************************************************************************/
/*! exports provided: acquisitionsEpicFromGoogleDocTwoVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicFromGoogleDocTwoVariants", function() { return acquisitionsEpicFromGoogleDocTwoVariants; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");


var abTestName = 'AcquisitionsEpicFromGoogleDocTwoVariants';
var acquisitionsEpicFromGoogleDocTwoVariants = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Test copy fetched from a Google Doc',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: []
  }].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeGoogleDocEpicVariants"])(2)))
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-liveblog.js":
/*!********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-liveblog.js ***!
  \********************************************************************************************************/
/*! exports provided: acquisitionsEpicLiveblog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicLiveblog", function() { return acquisitionsEpicLiveblog; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var common_modules_commercial_contributions_liveblog_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-liveblog-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-liveblog-utilities.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_liveblog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-liveblog */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-liveblog.js");
/* harmony import */ var common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/acquisitions-copy */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-copy.js");




var acquisitionsEpicLiveblog = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: 'AcquisitionsEpicLiveblog',
  campaignId: 'epic_liveblog',
  start: '2017-04-01',
  expiry: '2019-01-24',
  author: 'Joseph Smith',
  description: 'This places the epic underneath liveblog blocks which the author has specified in Composer should have an epic against them',
  successMeasure: 'Member acquisition and contributions',
  idealOutcome: 'Our wonderful readers will support The Guardian in this time of need!',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  pageCheck: function pageCheck(page) {
    return page.contentType === 'LiveBlog' && page.section !== 'sport' && page.section !== 'football';
  },
  variants: [{
    id: 'million',
    products: ['CONTRIBUTION', 'MEMBERSHIP_SUPPORTER'],
    options: {
      isUnlimited: true,
      template: function template(variant) {
        return Object(common_modules_commercial_templates_acquisitions_epic_liveblog__WEBPACK_IMPORTED_MODULE_2__["epicLiveBlogTemplate"])({
          copy: common_modules_commercial_acquisitions_copy__WEBPACK_IMPORTED_MODULE_3__["liveblogCopy"],
          componentName: variant.options.componentName,
          supportURL: variant.options.supportURL
        });
      },
      test: function test(renderFn, variant, _test) {
        var epicHtml = variant.options.template(variant);
        Object(common_modules_commercial_contributions_liveblog_utilities__WEBPACK_IMPORTED_MODULE_1__["setupEpicInLiveblog"])(epicHtml, _test);
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-thank-you.js":
/*!*********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-thank-you.js ***!
  \*********************************************************************************************************/
/*! exports provided: acquisitionsEpicThankYou */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicThankYou", function() { return acquisitionsEpicThankYou; });
/* harmony import */ var common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/user-features */ "./static/src/javascripts/projects/common/modules/commercial/user-features.js");
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/acquisitions-ophan */ "./static/src/javascripts/projects/common/modules/commercial/acquisitions-ophan.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_thank_you__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-thank-you */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-thank-you.js");




var acquisitionsEpicThankYou = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_1__["makeABTest"])({
  id: 'AcquisitionsEpicThankYou',
  campaignId: 'epic_thank_you',
  componentType: 'ACQUISITIONS_THANK_YOU_EPIC',
  start: '2017-06-01',
  expiry: '2019-01-24',
  author: 'Guy Dawson',
  description: 'Bootstrap the AB test framework to use the Epic to thank readers who have already supported the Guardian',
  successMeasure: 'N/A',
  idealOutcome: 'N/A',
  audienceCriteria: 'Readers who have supported the Guardian',
  audience: 1,
  audienceOffset: 0,
  showToContributorsAndSupporters: true,
  canRun: function canRun() {
    return Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_0__["isPayingMember"])() || Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_0__["isRecentOneOffContributor"])();
  },
  useLocalViewLog: true,
  variants: [{
    id: 'control',
    products: ['CONTRIBUTION', 'MEMBERSHIP_SUPPORTER'],
    options: {
      maxViews: {
        days: 365,
        // Arbitrarily high number - reader should only see the thank-you for one 'cycle'.
        count: 1,
        minDaysBetweenViews: 0
      },
      template: function template(variant) {
        return Object(common_modules_commercial_templates_acquisitions_epic_thank_you__WEBPACK_IMPORTED_MODULE_3__["acquisitionsEpicThankYouTemplate"])({
          componentName: variant.options.componentName,
          membershipUrl: Object(common_modules_commercial_acquisitions_ophan__WEBPACK_IMPORTED_MODULE_2__["addTrackingCodesToUrl"])({
            base: 'https://www.theguardian.com/membership',
            componentType: 'ACQUISITIONS_EPIC',
            componentId: variant.options.campaignCode,
            campaignCode: variant.options.campaignCode,
            abTest: {
              name: 'AcquisitionsEpicThankYou',
              variant: variant.id
            }
          })
        });
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-gun-campaign.js":
/*!***************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-gun-campaign.js ***!
  \***************************************************************************************************************/
/*! exports provided: acquisitionsEpicUSGunCampaign */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicUSGunCampaign", function() { return acquisitionsEpicUSGunCampaign; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/user-features */ "./static/src/javascripts/projects/common/modules/commercial/user-features.js");



var campaignTag = 'us-news/series/break-the-cycle';

var tagsMatch = function tagsMatch() {
  return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.nonKeywordTagIds', '').split(',').includes(campaignTag);
};

var isTargetReader = function isTargetReader() {
  return Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_2__["isPayingMember"])() || Object(common_modules_commercial_user_features__WEBPACK_IMPORTED_MODULE_2__["isRecentOneOffContributor"])();
};

var isTargetPage = function isTargetPage() {
  return tagsMatch() && !lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.shouldHideReaderRevenue;
};

var acquisitionsEpicUSGunCampaign = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: 'AcquisitionsUsGunCampaign2017',
  campaignId: 'epic_us_gun_campaign_2017',
  start: '2017-11-14',
  expiry: '2019-02-06',
  author: 'Guy Dawson',
  description: 'Show a custom thank you epic for articles with the US gun campaign tag',
  successMeasure: 'AV2.0',
  idealOutcome: 'The US gun campaign resonates with our readers, and we continue to provide quality reporting on this important issue',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  showToContributorsAndSupporters: true,
  canRun: function canRun() {
    return isTargetReader() && isTargetPage();
  },
  variants: [{
    id: 'control',
    products: ['CONTRIBUTION'],
    options: {
      isUnlimited: true,
      usesIframe: true,
      template: function template(variant) {
        return "<iframe src=\"https://interactive.guim.co.uk/embed/2018/03/break-the-cycle/epic.html\"\n                        data-component=\"".concat(variant.options.componentName, "\"\n                        class=\"acquisitions-epic-iframe\"\n                        id=\"").concat(variant.options.iframeId, "\">\n                    </iframe>");
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-top-ticker.js":
/*!*************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/acquisitions-epic-us-top-ticker.js ***!
  \*************************************************************************************************************/
/*! exports provided: acquisitionsEpicUsTopTicker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acquisitionsEpicUsTopTicker", function() { return acquisitionsEpicUsTopTicker; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");
/* harmony import */ var common_modules_commercial_templates_acquisitions_epic_us_ticker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! common/modules/commercial/templates/acquisitions-epic-us-ticker */ "./static/src/javascripts/projects/common/modules/commercial/templates/acquisitions-epic-us-ticker.js");
/* harmony import */ var common_modules_commercial_ticker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/modules/commercial/ticker */ "./static/src/javascripts/projects/common/modules/commercial/ticker.js");



var abTestName = 'AcquisitionsEpicUsTopTickerFinal';

var createTemplate = function createTemplate(tickerPosition) {
  return function (_ref, copy) {
    var _ref$options = _ref.options,
        options = _ref$options === void 0 ? {} : _ref$options;
    return Object(common_modules_commercial_templates_acquisitions_epic_us_ticker__WEBPACK_IMPORTED_MODULE_1__["acquisitionsEpicUsTickerTemplate"])({
      copy: copy,
      componentName: options.componentName,
      buttonTemplate: options.buttonTemplate({
        supportUrl: options.supportURL
      }),
      tickerPosition: tickerPosition
    });
  };
};

var noteFromJohn = {
  heading: 'In these critical times &hellip;',
  paragraphs: ['&hellip; The Guardian’s US editor John Mulholland urges you to show your support for independent journalism with a gift to The Guardian. We are asking our US readers to help us raise $1 million dollars by early January to report on the most important stories in 2019.', 'A note from John:', 'In normal times we might not be making this appeal. But these are not normal times. Many of the values and beliefs we hold dear at The Guardian are under threat both here in the US and around the world. Facts, science, humanity, diversity and equality are being challenged daily. As is truth. Which is why we need your help.', 'Powerful public figures choose lies over truths, prefer supposition over science; and select hate over humanity. The US administration is foremost among them; whether in denying climate science or hating on immigrants; giving succor to racists or targeting journalists and the media. Many of these untruths and attacks find fertile ground on social media where tech platforms seem unable to cauterise lies. As a result, fake is in danger of overriding fact.', 'Almost 100 years ago, in 1921, the editor of The Guardian argued that the principal role of a newspaper was accurate reporting, insisting that &ldquo;facts are sacred.&rdquo; We still hold that to be true. The need for a robust, independent press has never been greater, but the challenge is more intense than ever as digital disruption threatens traditional media’s business model. We pride ourselves on not having a paywall because we believe truth should not come at a price for anyone. Our journalism remains open and accessible to everyone and with your help we can keep it that way.', 'We want to say a huge thank you to everyone who has supported The Guardian so far. We hope to pass our goal by early January 2019. Every contribution, big or small, will help us reach it.'],
  highlightedText: 'Please make a gift today to show your ongoing support for our independent journalism. Thank you.'
};
var acquisitionsEpicUsTopTicker = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: abTestName,
  campaignId: abTestName,
  start: '2018-04-17',
  expiry: '2019-06-05',
  author: 'Joseph Smith',
  description: 'Tests an epic with custom copy in US',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Alternative copy makes more money than the control',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  locations: ['US'],
  useLocalViewLog: true,
  variants: [{
    id: 'US_EoY_R7_John',
    products: [],
    options: {
      copy: noteFromJohn,
      template: createTemplate('TOP'),
      onView: function onView() {
        Object(common_modules_commercial_ticker__WEBPACK_IMPORTED_MODULE_2__["initTicker"])('.js-epic-ticker');
      }
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-ad-mobile-web-increase.js":
/*!***************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/commercial-ad-mobile-web-increase.js ***!
  \***************************************************************************************************************/
/*! exports provided: commercialAdMobileWebIncrease */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commercialAdMobileWebIncrease", function() { return commercialAdMobileWebIncrease; });
var commercialAdMobileWebIncrease = {
  id: 'CommercialAdMobileWebIncrease',
  start: '2018-11-16',
  expiry: '2019-01-22',
  author: 'Francesca Hammond',
  description: 'This test will increase ads on mobile web',
  audience: 0.5,
  audienceOffset: 0.02,
  successMeasure: 'More ads on mobile web compared to AMP',
  audienceCriteria: 'n/a',
  dataLinkNames: 'n/a',
  idealOutcome: 'Match or better number of ads on mobile web compared to AMP',
  canRun: function canRun() {
    return true;
  },
  variants: [{
    id: 'control',
    test: function test() {}
  }, {
    id: 'variant',
    test: function test() {}
  }]
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-cmp-customise.js":
/*!******************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/commercial-cmp-customise.js ***!
  \******************************************************************************************************/
/*! exports provided: commercialCmpCustomise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commercialCmpCustomise", function() { return commercialCmpCustomise; });
var commercialCmpCustomise = {
  id: 'CommercialCmpCustomise',
  start: '2018-08-13',
  expiry: '2019-09-30',
  author: 'Kate Whalen',
  description: '0% participation AB test for customising CMP data',
  audience: 0,
  audienceOffset: 0,
  successMeasure: 'Customisation of CMP data',
  audienceCriteria: 'internal',
  dataLinkNames: '',
  idealOutcome: 'Different CMP result',
  canRun: function canRun() {
    return true;
  },
  variants: [{
    id: 'variant',
    test: function test() {}
  }]
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/commercial-prebid-safeframe.js":
/*!*********************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/commercial-prebid-safeframe.js ***!
  \*********************************************************************************************************/
/*! exports provided: commercialPrebidSafeframe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commercialPrebidSafeframe", function() { return commercialPrebidSafeframe; });
var commercialPrebidSafeframe = {
  id: 'CommercialPrebidSafeframe',
  start: '2018-06-29',
  expiry: '2019-09-30',
  author: 'Jerome Eteve',
  description: 'This test will serve prebid ads via safeframe line items',
  audience: 0.01,
  audienceOffset: 0,
  successMeasure: 'Measurement of prebid ads yield',
  audienceCriteria: 'n/a',
  dataLinkNames: 'n/a',
  idealOutcome: 'No difference between safeframe and standard',
  canRun: function canRun() {
    return true;
  },
  variants: [{
    id: 'control',
    test: function test() {}
  }, {
    id: 'variant',
    test: function test() {}
  }]
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/tests/contributions-epic-ask-four-earning.js":
/*!*****************************************************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/tests/contributions-epic-ask-four-earning.js ***!
  \*****************************************************************************************************************/
/*! exports provided: askFourEarning */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "askFourEarning", function() { return askFourEarning; });
/* harmony import */ var common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! common/modules/commercial/contributions-utilities */ "./static/src/javascripts/projects/common/modules/commercial/contributions-utilities.js");

var askFourEarning = Object(common_modules_commercial_contributions_utilities__WEBPACK_IMPORTED_MODULE_0__["makeABTest"])({
  id: 'ContributionsEpicAskFourEarning',
  campaignId: 'kr1_epic_ask_four_earning',
  start: '2017-01-24',
  expiry: '2019-01-24',
  author: 'Jonathan Rankin',
  description: 'This places the epic on all articles for all users, with a limit of 4 impressions in any given 30 days',
  successMeasure: 'Conversion rate',
  idealOutcome: 'Acquires many Supporters',
  audienceCriteria: 'All',
  audience: 1,
  audienceOffset: 0,
  variants: [{
    id: 'control',
    products: ['CONTRIBUTION', 'MEMBERSHIP_SUPPORTER'],
    options: {
      maxViews: {
        days: 30,
        count: 4,
        minDaysBetweenViews: 0
      },
      insertAtSelector: '.submeta',
      successOnView: true
    }
  }]
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/experiments/utils.js":
/*!*****************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/experiments/utils.js ***!
  \*****************************************************************************/
/*! exports provided: participationsKey, getParticipations, setParticipations, clearParticipations, removeParticipation, cleanParticipations, isParticipating, addParticipation, getTestVariantId, getVariant, getAssignedVariant, setTestVariant, isInVariant, getForcedTests, getForcedVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "participationsKey", function() { return participationsKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getParticipations", function() { return getParticipations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setParticipations", function() { return setParticipations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearParticipations", function() { return clearParticipations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeParticipation", function() { return removeParticipation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleanParticipations", function() { return cleanParticipations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isParticipating", function() { return isParticipating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addParticipation", function() { return addParticipation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTestVariantId", function() { return getTestVariantId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVariant", function() { return getVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAssignedVariant", function() { return getAssignedVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTestVariant", function() { return setTestVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInVariant", function() { return isInVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getForcedTests", function() { return getForcedTests; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getForcedVariant", function() { return getForcedVariant; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_experiments_test_can_run_checks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! common/modules/experiments/test-can-run-checks */ "./static/src/javascripts/projects/common/modules/experiments/test-can-run-checks.js");





var participationsKey = 'gu.ab.participations';
var getParticipations = function getParticipations() {
  return lib_storage__WEBPACK_IMPORTED_MODULE_3__["local"].get(participationsKey) || {};
};
var setParticipations = function setParticipations(participations) {
  lib_storage__WEBPACK_IMPORTED_MODULE_3__["local"].set(participationsKey, participations);
}; // Wipes all participations

var clearParticipations = function clearParticipations() {
  lib_storage__WEBPACK_IMPORTED_MODULE_3__["local"].remove(participationsKey);
};
var removeParticipation = function removeParticipation(toRemove) {
  var participations = getParticipations();
  var filteredParticipations = Object.keys(participations).filter(function (participation) {
    return participation !== toRemove.id;
  }).reduce(function (result, input) {
    Object.assign(result, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()({}, input, participations[input]));
    return result;
  }, {});
  setParticipations(filteredParticipations);
}; // Removes any tests from localstorage that have been
// renamed/deleted from the backend

var cleanParticipations = function cleanParticipations(tests) {
  return Object.keys(getParticipations()).forEach(function (k) {
    if (typeof lib_config__WEBPACK_IMPORTED_MODULE_2__["default"].switches["ab".concat(k)] === 'undefined') {
      removeParticipation({
        id: k
      });
    } else {
      var testExists = tests.some(function (element) {
        return element.id === k;
      });
      if (!testExists) removeParticipation({
        id: k
      });
    }
  });
};
var isParticipating = function isParticipating(test) {
  return test.id in getParticipations();
};
var addParticipation = function addParticipation(test, variantId) {
  var participations = getParticipations();
  participations[test.id] = {
    variant: variantId
  };
  setParticipations(participations);
};
var getTestVariantId = function getTestVariantId(testId) {
  var participation = getParticipations()[testId];
  return participation && participation.variant;
};
var getVariant = function getVariant(test, variantId) {
  var variantIds = test.variants.map(function (variant) {
    return variant.id;
  });
  var index = variantIds.indexOf(variantId);
  return index > -1 ? test.variants[index] : null;
};
var getAssignedVariant = function getAssignedVariant(test) {
  var variantId = getTestVariantId(test.id);
  return variantId ? getVariant(test, variantId) : null;
};
var setTestVariant = function setTestVariant(testId, variant) {
  var participations = getParticipations();

  if (testId in participations) {
    participations[testId].variant = variant;
    setParticipations(participations);
  }
};
/**
 * returns whether the caller should treat the user as being in that variant.
 */

var isInVariant = function isInVariant(test, variant) {
  return getParticipations()[test.id] && getParticipations()[test.id].variant === variant.id && Object(common_modules_experiments_test_can_run_checks__WEBPACK_IMPORTED_MODULE_4__["testCanBeRun"])(test);
};
var getForcedTests = function getForcedTests() {
  if (window.location.hash.startsWith('#ab')) {
    var tokens = window.location.hash.replace('#ab-', '').split(',');
    return tokens.map(function (token) {
      var _token$split = token.split('='),
          _token$split2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_token$split, 2),
          testId = _token$split2[0],
          variantId = _token$split2[1];

      return {
        testId: testId,
        variantId: variantId
      };
    });
  }

  return JSON.parse(lib_storage__WEBPACK_IMPORTED_MODULE_3__["local"].get('gu.experiments.ab') || '[]') || [];
};
var getForcedVariant = function getForcedVariant(test) {
  var forcedVariantIds = getForcedTests().map(function (t) {
    return t.variantId;
  });
  return test.variants.find(function (v) {
    return forcedVariantIds.includes(v.id);
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/identity/api.js":
/*!************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/identity/api.js ***!
  \************************************************************************/
/*! exports provided: init, decodeBase64, getUserFromCookie, updateNewsletter, buildNewsletterUpdatePayload, isUserLoggedIn, getUserFromApi, reset, getCookie, getUrl, getUserFromApiWithRefreshedCookie, redirectTo, getUserOrSignIn, hasUserSignedOutInTheLast24Hours, shouldAutoSigninInUser, getUserEmailSignUps, sendValidationEmail, updateUsername, getAllConsents, getAllNewsletters, getSubscribedNewsletters, setConsent, ajaxSignIn, getUserData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeBase64", function() { return decodeBase64; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserFromCookie", function() { return getUserFromCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateNewsletter", function() { return updateNewsletter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildNewsletterUpdatePayload", function() { return buildNewsletterUpdatePayload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUserLoggedIn", function() { return isUserLoggedIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserFromApi", function() { return getUserFromApi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reset", function() { return reset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCookie", function() { return getCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUrl", function() { return getUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserFromApiWithRefreshedCookie", function() { return getUserFromApiWithRefreshedCookie; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redirectTo", function() { return redirectTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserOrSignIn", function() { return getUserOrSignIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasUserSignedOutInTheLast24Hours", function() { return hasUserSignedOutInTheLast24Hours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shouldAutoSigninInUser", function() { return shouldAutoSigninInUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserEmailSignUps", function() { return getUserEmailSignUps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendValidationEmail", function() { return sendValidationEmail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUsername", function() { return updateUsername; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllConsents", function() { return getAllConsents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllNewsletters", function() { return getAllNewsletters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSubscribedNewsletters", function() { return getSubscribedNewsletters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setConsent", function() { return setConsent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajaxSignIn", function() { return ajaxSignIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserData", function() { return getUserData; });
/* harmony import */ var lib_ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/ajax */ "./static/src/javascripts/lib/ajax.js");
/* harmony import */ var lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lib/config */ "./static/src/javascripts/lib/config.js");
/* harmony import */ var lib_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/cookies */ "./static/src/javascripts/lib/cookies.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");
/* harmony import */ var common_modules_async_call_merger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! common/modules/async-call-merger */ "./static/src/javascripts/projects/common/modules/async-call-merger.js");
/* harmony import */ var lib_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/url */ "./static/src/javascripts/lib/url.js");
/* harmony import */ var lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/fetch-json */ "./static/src/javascripts/lib/fetch-json.js");
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! qs */ "./node_modules/qs/lib/index.js");
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! reqwest */ "./node_modules/reqwest/reqwest.js");
/* harmony import */ var reqwest__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(reqwest__WEBPACK_IMPORTED_MODULE_9__);
/* global escape:true */










var userFromCookieCache = null;
var cookieName = 'GU_U';
var signOutCookieName = 'GU_SO';
var fbCheckKey = 'gu.id.nextFbCheck';
var idApiRoot = null;
var profileRoot = null;
var init = function init() {
  idApiRoot = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.idApiUrl');
  lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].emit('module:identity:api:loaded');
  profileRoot = lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].page.idUrl;
};
var decodeBase64 = function decodeBase64(str) {
  return decodeURIComponent(escape(window.atob(str.replace(/-/g, '+').replace(/_/g, '/').replace(/,/g, '='))));
};
var getUserFromCookie = function getUserFromCookie() {
  if (userFromCookieCache === null) {
    var cookieData = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["getCookie"])(cookieName);
    var userData = null;

    if (cookieData) {
      userData = JSON.parse(decodeBase64(cookieData.split('.')[0]));
    }

    if (userData) {
      var displayName = decodeURIComponent(userData[2]);
      userFromCookieCache = {
        id: userData[0],
        primaryEmailAddress: userData[1],
        // not sure where this is stored now - not in the cookie any more
        displayName: displayName,
        accountCreatedDate: userData[6],
        emailVerified: userData[7],
        rawResponse: cookieData
      };
    }
  }

  return userFromCookieCache;
};
var updateNewsletter = function updateNewsletter(newsletter) {
  return reqwest__WEBPACK_IMPORTED_MODULE_9___default()({
    url: "".concat(lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.idApiUrl'), "/users/me/newsletters"),
    method: 'PATCH',
    type: 'json',
    contentType: 'application/json',
    withCredentials: true,
    crossOrigin: true,
    data: JSON.stringify(newsletter)
  });
};
var buildNewsletterUpdatePayload = function buildNewsletterUpdatePayload() {
  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'none';
  var newsletterId = arguments.length > 1 ? arguments[1] : undefined;
  var newsletter = {};

  switch (action) {
    case 'add':
      newsletter.id = newsletterId;
      newsletter.subscribed = true;
      break;

    case 'remove':
      newsletter.id = newsletterId;
      newsletter.subscribed = false;
      break;

    default:
      throw new Error("Undefined newsletter action type (".concat(action, ")"));
  }

  return newsletter;
};
var isUserLoggedIn = function isUserLoggedIn() {
  return getUserFromCookie() !== null;
};
var getUserFromApi = Object(common_modules_async_call_merger__WEBPACK_IMPORTED_MODULE_5__["mergeCalls"])(function (mergingCallback) {
  var apiRoot = idApiRoot || '';

  if (isUserLoggedIn()) {
    Object(lib_ajax__WEBPACK_IMPORTED_MODULE_0__["ajax"])({
      url: "".concat(apiRoot, "/user/me"),
      type: 'jsonp',
      crossOrigin: true
    }).then(function (response) {
      if (response.status === 'ok') {
        mergingCallback(response.user);
      } else {
        mergingCallback(null);
      }
    });
  } else {
    mergingCallback(null);
  }
});
var reset = function reset() {
  getUserFromApi.reset();
  userFromCookieCache = null;
};
var getCookie = function getCookie() {
  return Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["getCookie"])(cookieName);
};
var getUrl = function getUrl() {
  return lib_config__WEBPACK_IMPORTED_MODULE_1__["default"].get('page.idUrl');
};
var getUserFromApiWithRefreshedCookie = function getUserFromApiWithRefreshedCookie() {
  var endpoint = '/user/me';
  var request = Object(lib_ajax__WEBPACK_IMPORTED_MODULE_0__["ajax"])({
    url: (idApiRoot || '') + endpoint,
    type: 'jsonp',
    data: {
      refreshCookie: true
    }
  });
  return request;
};
var redirectTo = function redirectTo(url) {
  window.location.assign(url);
};
var getUserOrSignIn = function getUserOrSignIn(paramUrl) {
  var returnUrl = paramUrl;

  if (isUserLoggedIn()) {
    return getUserFromCookie();
  }

  returnUrl = encodeURIComponent(returnUrl || document.location.href);
  var url = "".concat(getUrl() || '', "/signin?returnUrl=").concat(returnUrl);
  redirectTo(url);
};
var hasUserSignedOutInTheLast24Hours = function hasUserSignedOutInTheLast24Hours() {
  var cookieData = Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["getCookie"])(signOutCookieName);

  if (cookieData) {
    return Math.round(new Date().getTime() / 1000) < parseInt(cookieData, 10) + 86400;
  }

  return false;
};
var shouldAutoSigninInUser = function shouldAutoSigninInUser() {
  var signedInUser = !!Object(lib_cookies__WEBPACK_IMPORTED_MODULE_2__["getCookie"])(cookieName);
  var checkFacebook = !!lib_storage__WEBPACK_IMPORTED_MODULE_4__["local"].get(fbCheckKey);
  return !signedInUser && !checkFacebook && !hasUserSignedOutInTheLast24Hours();
};
var getUserEmailSignUps = function getUserEmailSignUps() {
  var user = getUserFromCookie();

  if (user) {
    var endpoint = "/useremails/".concat(user.id);
    var request = Object(lib_ajax__WEBPACK_IMPORTED_MODULE_0__["ajax"])({
      url: (idApiRoot || '') + endpoint,
      type: 'jsonp',
      crossOrigin: true,
      withCredentials: true
    });
    return request;
  }

  return Promise.resolve(null);
};
var sendValidationEmail = function sendValidationEmail() {
  var defaultReturnEndpoint = '/email-prefs';
  var endpoint = '/user/send-validation-email';
  var returnUrl = Object(lib_url__WEBPACK_IMPORTED_MODULE_6__["getUrlVars"])().returnUrl ? decodeURIComponent(Object(lib_url__WEBPACK_IMPORTED_MODULE_6__["getUrlVars"])().returnUrl) : (profileRoot || '') + defaultReturnEndpoint;
  var request = Object(lib_ajax__WEBPACK_IMPORTED_MODULE_0__["ajax"])({
    url: (idApiRoot || '') + endpoint,
    type: 'jsonp',
    crossOrigin: true,
    data: {
      method: 'post',
      returnUrl: returnUrl
    }
  });
  return request;
};
var updateUsername = function updateUsername(username) {
  var endpoint = '/user/me';
  var data = {
    publicFields: {
      username: username,
      displayName: username
    }
  };
  var request = Object(lib_ajax__WEBPACK_IMPORTED_MODULE_0__["ajax"])({
    url: (idApiRoot || '') + endpoint,
    type: 'json',
    crossOrigin: true,
    method: 'POST',
    contentType: 'application/json; charset=utf-8',
    data: JSON.stringify(data),
    withCredentials: true
  });
  return request;
};
var getAllConsents = function getAllConsents() {
  var endpoint = '/consents';
  var url = (idApiRoot || '') + endpoint;
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])(url, {
    mode: 'cors',
    method: 'GET',
    headers: {
      Accept: 'application/json'
    }
  });
};
var getAllNewsletters = function getAllNewsletters() {
  var endpoint = '/newsletters';
  var url = (idApiRoot || '') + endpoint;
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])(url, {
    mode: 'cors',
    method: 'GET',
    headers: {
      Accept: 'application/json'
    }
  });
};
var getSubscribedNewsletters = function getSubscribedNewsletters() {
  var endpoint = '/users/me/newsletters';
  var url = (idApiRoot || '') + endpoint;
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])(url, {
    mode: 'cors',
    method: 'GET',
    headers: {
      Accept: 'application/json'
    },
    credentials: 'include'
  }).then(function (json) {
    if (json.result.subscriptions) {
      return json.result.subscriptions.map(function (sub) {
        return sub.listId;
      });
    }

    return [];
  }).catch(function () {
    return [];
  });
};
var setConsent = function setConsent(consents) {
  return new Promise(function (success, error) {
    reqwest__WEBPACK_IMPORTED_MODULE_9___default()({
      url: "".concat(idApiRoot || '', "/users/me/consents"),
      method: 'PATCH',
      type: 'json',
      contentType: 'application/json',
      withCredentials: true,
      crossOrigin: true,
      data: JSON.stringify(consents),
      error: error,
      success: success
    });
  });
};
var ajaxSignIn = function ajaxSignIn(credentials) {
  var url = "".concat(profileRoot || '', "/actions/auth/ajax");
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])(url, {
    mode: 'cors',
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: qs__WEBPACK_IMPORTED_MODULE_8___default.a.stringify({
      email: credentials.id,
      password: credentials.password
    }),
    credentials: 'include'
  });
};
var getUserData = function getUserData() {
  return Object(lib_fetch_json__WEBPACK_IMPORTED_MODULE_7__["default"])("".concat(idApiRoot || '', "/user/me"), {
    method: 'GET',
    mode: 'cors',
    credentials: 'include'
  });
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/onward/geo-most-popular.js":
/*!***********************************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/onward/geo-most-popular.js ***!
  \***********************************************************************************/
/*! exports provided: geoMostPopular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoMostPopular", function() { return geoMostPopular; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var common_modules_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! common/modules/component */ "./static/src/javascripts/projects/common/modules/component.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/once */ "./node_modules/lodash/once.js");
/* harmony import */ var lodash_once__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_once__WEBPACK_IMPORTED_MODULE_9__);






/*
 Module: geo-most-popular.js
 Description: Shows popular trails for a given country.
 */





var promise = new Promise(function (resolve, reject) {
  lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].on('modules:onward:geo-most-popular:ready', resolve);
  lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].on('modules:onward:geo-most-popular:cancel', resolve);
  lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].on('modules:onward:geo-most-popular:error', reject);
});

var GeoMostPopular =
/*#__PURE__*/
function (_Component) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(GeoMostPopular, _Component);

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(GeoMostPopular, null, [{
    key: "error",
    value: function error(_error) {
      lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].emit('modules:onward:geo-most-popular:error', _error);
    }
  }]);

  function GeoMostPopular() {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, GeoMostPopular);

    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(GeoMostPopular).call(this));
    _this.endpoint = '/most-read-geo.json';
    lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].emit('register:begin', 'geo-most-popular');
    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(GeoMostPopular, [{
    key: "ready",
    value: function ready() {
      lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].emit('register:end', 'geo-most-popular');
      lib_mediator__WEBPACK_IMPORTED_MODULE_8__["default"].emit('modules:onward:geo-most-popular:ready', this);
    }
  }]);

  return GeoMostPopular;
}(common_modules_component__WEBPACK_IMPORTED_MODULE_7__["Component"]); // we don't want to show most popular on short articles as the sticky right mpu slot will push most popular behind other containers at the bottom.


var showMostPopularThreshold = 1500;

var fetchMostPopular = function fetchMostPopular(articleBodyHeight) {
  if (articleBodyHeight > showMostPopularThreshold) {
    new GeoMostPopular().fetch(qwery__WEBPACK_IMPORTED_MODULE_5___default()('.js-components-container'), 'rightHtml');
  }
};

var geoMostPopular = {
  render: lodash_once__WEBPACK_IMPORTED_MODULE_9___default()(function () {
    lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_6__["default"].read(function () {
      var jsArticleBodyElement = document.querySelector('.js-article__body');
      return jsArticleBodyElement ? jsArticleBodyElement.getBoundingClientRect() && jsArticleBodyElement.getBoundingClientRect().height : 0;
    }).then(fetchMostPopular);
    return promise;
  }),
  whenRendered: promise
};


/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/spacefinder.js":
/*!***********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/spacefinder.js ***!
  \***********************************************************************/
/*! exports provided: _, findSpace, SpaceError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findSpace", function() { return findSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpaceError", function() { return SpaceError; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "./node_modules/@babel/runtime/helpers/wrapNativeSuper.js");
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! qwery */ "./node_modules/qwery/qwery.js");
/* harmony import */ var qwery__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(qwery__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! bean */ "./node_modules/bean/bean.js");
/* harmony import */ var bean__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(bean__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lib/fastdom-promise */ "./static/src/javascripts/lib/fastdom-promise.js");
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/memoize */ "./node_modules/lodash/memoize.js");
/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_11__);







// total_hours_spent_maintaining_this = 72





// maximum time (in ms) to wait for images to be loaded and rich links
// to be upgraded
var LOADING_TIMEOUT = 5000;
var defaultOptions = {
  waitForImages: true,
  waitForLinks: true,
  waitForInteractives: false
};

var isIframe = function isIframe(node) {
  return node instanceof HTMLIFrameElement;
};

var isIframeLoaded = function isIframeLoaded(iframe) {
  try {
    return iframe.contentWindow && iframe.contentWindow.document && iframe.contentWindow.document.readyState === 'complete';
  } catch (err) {
    return true;
  }
};

var expire = function expire(resolve) {
  window.setTimeout(resolve, LOADING_TIMEOUT);
};

var getFuncId = function getFuncId(rules) {
  return rules.bodySelector || 'document';
};

var onImagesLoaded = lodash_memoize__WEBPACK_IMPORTED_MODULE_11___default()(function (rules) {
  var notLoaded = qwery__WEBPACK_IMPORTED_MODULE_7___default()('img', rules.body).filter(function (img) {
    return !img.complete;
  });
  return notLoaded.length === 0 ? Promise.resolve() : new Promise(function (resolve) {
    var loadedCount = 0;
    bean__WEBPACK_IMPORTED_MODULE_8___default.a.on(rules.body, 'load', notLoaded, function onImgLoaded() {
      loadedCount += 1;

      if (loadedCount === notLoaded.length) {
        bean__WEBPACK_IMPORTED_MODULE_8___default.a.off(rules.body, 'load', onImgLoaded);
        notLoaded.length = 0;
        resolve();
      }
    });
  });
}, getFuncId);
var onRichLinksUpgraded = lodash_memoize__WEBPACK_IMPORTED_MODULE_11___default()(function (rules) {
  return qwery__WEBPACK_IMPORTED_MODULE_7___default()('.element-rich-link--not-upgraded', rules.body).length === 0 ? Promise.resolve() : new Promise(function (resolve) {
    lib_mediator__WEBPACK_IMPORTED_MODULE_10__["default"].once('rich-link:loaded', resolve);
  });
}, getFuncId);
var onInteractivesLoaded = lodash_memoize__WEBPACK_IMPORTED_MODULE_11___default()(function (rules) {
  var notLoaded = qwery__WEBPACK_IMPORTED_MODULE_7___default()('.element-interactive', rules.body).filter(function (interactive) {
    var iframe = Array.from(interactive.children).filter(isIframe);
    return !(iframe.length && isIframeLoaded(iframe[0]));
  });
  return notLoaded.length === 0 || !('MutationObserver' in window) ? Promise.resolve() : Promise.all(notLoaded.map(function (interactive) {
    return new Promise(function (resolve) {
      new MutationObserver(function (records, instance) {
        if (!records.length || !records[0].addedNodes.length || !isIframe(records[0].addedNodes[0])) {
          return;
        }

        var iframe = records[0].addedNodes[0];

        if (isIframeLoaded(iframe)) {
          instance.disconnect();
          resolve();
        } else {
          iframe.addEventListener('load', function () {
            instance.disconnect();
            resolve();
          });
        }
      }).observe(interactive, {
        childList: true
      });
    });
  })).then(function () {
    return undefined;
  });
}, getFuncId);

var filter = function filter(list, filterElement, exclusions) {
  var filtered = [];
  list.forEach(function (element) {
    if (filterElement(element)) {
      filtered.push(element);
    } else {
      exclusions.push(element);
    }
  });
  return filtered;
}; // test one element vs another for the given rules


var testCandidate = function testCandidate(rule, challenger, opponent) {
  var isMinAbove = challenger.top - opponent.bottom >= rule.minAbove;
  var isMinBelow = opponent.top - challenger.top >= rule.minBelow;
  return isMinAbove || isMinBelow;
}; // test one element vs an array of other elements for the given rules


var testCandidates = function testCandidates(rules, challenger, opponents) {
  return opponents.every(testCandidate.bind(undefined, rules, challenger));
};

var enforceRules = function enforceRules(measurements, rules, exclusions) {
  var candidates = measurements.candidates; // enforce absoluteMinAbove rule

  exclusions.absoluteMinAbove = [];
  candidates = filter(candidates, function (candidate) {
    return !rules.absoluteMinAbove || candidate.top + measurements.bodyTop >= rules.absoluteMinAbove;
  }, exclusions.absoluteMinAbove); // enforce minAbove and minBelow rules

  exclusions.aboveAndBelow = [];
  candidates = filter(candidates, function (candidate) {
    var farEnoughFromTopOfBody = candidate.top >= rules.minAbove;
    var farEnoughFromBottomOfBody = candidate.top + rules.minBelow <= measurements.bodyHeight;
    return farEnoughFromTopOfBody && farEnoughFromBottomOfBody;
  }, exclusions.aboveAndBelow); // enforce content meta rule

  if (rules.clearContentMeta) {
    exclusions.contentMeta = [];
    candidates = filter(candidates, function (c) {
      return !!measurements.contentMeta && c.top > measurements.contentMeta.bottom + rules.clearContentMeta;
    }, exclusions.contentMeta);
  } // enforce selector rules


  if (rules.selectors) {
    Object.keys(rules.selectors).forEach(function (selector) {
      exclusions[selector] = [];
      candidates = filter(candidates, function (candidate) {
        return testCandidates(rules.selectors[selector], candidate, measurements.opponents ? measurements.opponents[selector] : []);
      }, exclusions[selector]);
    });
  }

  if (rules.filter) {
    exclusions.custom = [];
    candidates = filter(candidates, rules.filter, exclusions.custom);
  }

  return candidates;
};

var SpaceError =
/*#__PURE__*/
function (_Error) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(SpaceError, _Error);

  function SpaceError(rules) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SpaceError);

    _this = _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default()(this, _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(SpaceError).call(this));

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)), "name", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(_this)), "message", void 0);

    _this.name = 'SpaceError';
    _this.message = "There is no space left matching rules from ".concat(rules.bodySelector);
    return _this;
  }

  return SpaceError;
}(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_5___default()(Error));

var getReady = function getReady(rules, options) {
  return Promise.race([new Promise(expire), Promise.all([options.waitForImages ? onImagesLoaded(rules) : true, options.waitForLinks ? onRichLinksUpgraded(rules) : true, options.waitForInteractives ? onInteractivesLoaded(rules) : true])]).then(function () {
    return rules;
  });
};

var getCandidates = function getCandidates(rules, exclusions) {
  var candidates = qwery__WEBPACK_IMPORTED_MODULE_7___default()(rules.bodySelector + rules.slotSelector);

  if (rules.fromBottom) {
    candidates.reverse();
  }

  if (rules.startAt) {
    var drop = true;
    exclusions.startAt = [];
    candidates = filter(candidates, function (candidate) {
      if (candidate === rules.startAt) {
        drop = false;
      }

      return !drop;
    }, exclusions.startAt);
  }

  if (rules.stopAt) {
    var keep = true;
    exclusions.stopAt = [];
    candidates = filter(candidates, function (candidate) {
      if (candidate === rules.stopAt) {
        keep = false;
      }

      return keep;
    }, exclusions.stopAt);
  }

  return candidates;
};

var getDimensions = function getDimensions(el) {
  return Object.freeze({
    top: el.offsetTop,
    bottom: el.offsetTop + el.offsetHeight,
    element: el
  });
};

var getMeasurements = function getMeasurements(rules, candidates) {
  var contentMeta = rules.clearContentMeta ? document.querySelector('.js-content-meta') : null;
  var opponents = rules.selectors ? Object.keys(rules.selectors).map(function (selector) {
    return [selector, qwery__WEBPACK_IMPORTED_MODULE_7___default()(rules.bodySelector + selector)];
  }) : null;
  return lib_fastdom_promise__WEBPACK_IMPORTED_MODULE_9__["default"].read(function () {
    var bodyDims = rules.body instanceof Element && rules.body.getBoundingClientRect();
    var candidatesWithDims = candidates.map(getDimensions);
    var contentMetaWithDims = rules.clearContentMeta && contentMeta ? getDimensions(contentMeta) : null;
    var opponentsWithDims = opponents ? opponents.reduce(function (result, selectorAndElements) {
      result[selectorAndElements[0]] = selectorAndElements[1].map(getDimensions);
      return result;
    }, {}) : null;
    return {
      bodyTop: bodyDims.top || 0,
      bodyHeight: bodyDims.height || 0,
      candidates: candidatesWithDims,
      contentMeta: contentMetaWithDims,
      opponents: opponentsWithDims
    };
  });
};

var returnCandidates = function returnCandidates(rules, candidates) {
  if (!candidates.length) {
    throw new SpaceError(rules);
  }

  return candidates.map(function (candidate) {
    return candidate.element;
  });
}; // Rather than calling this directly, use spaceFiller to inject content into the page.
// SpaceFiller will safely queue up all the various asynchronous DOM actions to avoid any race conditions.


var findSpace = function findSpace(rules, options, excluded) {
  rules.body = rules.bodySelector && document.querySelector(rules.bodySelector) || document;
  var exclusions = excluded || {};
  return getReady(rules, options || defaultOptions).then(function () {
    return getCandidates(rules, exclusions);
  }).then(function (candidates) {
    return getMeasurements(rules, candidates);
  }).then(function (measurements) {
    return enforceRules(measurements, rules, exclusions);
  }).then(function (winners) {
    return returnCandidates(rules, winners);
  });
};

var _ = {
  testCandidate: testCandidate,
  // exposed for unit testing
  testCandidates: testCandidates // exposed for unit testing

};


/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/ui/sticky.js":
/*!*********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/ui/sticky.js ***!
  \*********************************************************************/
/*! exports provided: Sticky */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sticky", function() { return Sticky; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fastdom */ "./node_modules/fastdom/index.js");
/* harmony import */ var fastdom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fastdom__WEBPACK_IMPORTED_MODULE_4__);





/**
 * @todo: check if browser natively supports "position: sticky"
 */

var Sticky =
/*#__PURE__*/
function () {
  function Sticky(element) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Sticky);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "element", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "opts", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "offsetFromParent", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "lastMessage", void 0);

    this.element = element;
    this.opts = Object.assign({}, {
      top: 0,
      containInParent: true,
      emitMessage: false
    }, options);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Sticky, [{
    key: "init",
    value: function init() {
      var _this = this;

      var parentElement = this.element.parentElement;

      if (!parentElement) {
        return;
      }

      fastdom__WEBPACK_IMPORTED_MODULE_4___default.a.read(function () {
        _this.offsetFromParent = _this.element.getBoundingClientRect().top - parentElement.getBoundingClientRect().top;
      }, this);
      lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].on('window:throttledScroll', this.updatePosition.bind(this)); // kick off an initial position update

      fastdom__WEBPACK_IMPORTED_MODULE_4___default.a.read(this.updatePosition, this);
    }
  }, {
    key: "updatePosition",
    value: function updatePosition() {
      var _this2 = this;

      var parentElement = this.element.parentElement;

      if (!parentElement) {
        return;
      }

      var elementRect = this.element.getBoundingClientRect();
      var parentRect = parentElement.getBoundingClientRect();
      var elementHeight = elementRect.height;
      var css;
      var message;
      var stick; // have we scrolled past the element

      if (parentRect.top + this.offsetFromParent > 0) {
        stick = false;
        css = {
          top: ''
        };
        message = 'unfixed';
      } else {
        stick = true;
        var top = this.opts.containInParent && parentRect.bottom <= elementRect.height ? Math.floor(parentRect.bottom - elementHeight - this.opts.top) : this.opts.top;
        css = {
          top: "".concat(top, "px")
        };
        message = 'fixed';
      }

      if (this.opts.emitMessage && message && message !== this.lastMessage) {
        this.emitMessage(message);
        this.lastMessage = message;
      }

      if (css) {
        fastdom__WEBPACK_IMPORTED_MODULE_4___default.a.write(function () {
          if (stick) {
            _this2.element.classList.add('is-sticky');
          } else {
            _this2.element.classList.remove('is-sticky');
          }

          Object.assign(_this2.element.style, css);
        }, this);
      }
    }
  }, {
    key: "emitMessage",
    value: function emitMessage(message) {
      lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].emit("modules:".concat(this.element.id, ":").concat(message));
    }
  }]);

  return Sticky;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/ui/toggles.js":
/*!**********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/ui/toggles.js ***!
  \**********************************************************************/
/*! exports provided: Toggles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Toggles", function() { return Toggles; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lib_mediator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lib/mediator */ "./static/src/javascripts/lib/mediator.js");





var Toggles =
/*#__PURE__*/
function () {
  function Toggles() {
    var _this = this;

    var component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Toggles);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "component", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "controls", void 0);

    if (component) {
      var controls = Array.from(component.querySelectorAll('[data-toggle]'));
      this.component = component;
      this.controls = controls;
      lib_mediator__WEBPACK_IMPORTED_MODULE_3__["default"].on('module:clickstream:click', function (clickSpec) {
        _this.reset(clickSpec ? clickSpec.target : null);
      });
    }
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Toggles, [{
    key: "init",
    value: function init() {
      this.controls.forEach(this.prepareControl, this);
    }
  }, {
    key: "toggle",
    value: function toggle(control) {
      var _this2 = this;

      this.controls.forEach(function (c) {
        if (c === control) {
          if (c.classList.contains('is-active')) {
            _this2.close(c);
          } else {
            _this2.open(c);
          }
        } else {
          _this2.close(c);
        }
      });
    }
  }, {
    key: "reset",
    value: function reset(omitEl) {
      var doNotReset = ['js-search-old', 'js-search-new'];
      this.controls.filter(function (control) {
        return !(omitEl === control || doNotReset.includes(control.getAttribute('data-toggle')));
      }).forEach(this.close, this);
    }
  }, {
    key: "prepareControl",
    value: function prepareControl(control) {
      var _this3 = this;

      var readyClass = 'js-toggle-ready';
      var nav = document.querySelector('.js-profile-nav');
      var isSignedIn = nav && nav.classList.contains('is-signed-in');

      if (!control.classList.contains(readyClass)) {
        var target = this.getTarget(control);

        if (target && !(!isSignedIn && control.getAttribute('data-toggle-signed-in') === 'true')) {
          control.classList.add(readyClass);
          control.addEventListener('click', function (e) {
            e.preventDefault();

            _this3.toggle(control);
          });
        }
      }
    }
  }, {
    key: "getTarget",
    value: function getTarget(control) {
      var targetClass = control.getAttribute('data-toggle');

      if (targetClass) {
        if (this.component) {
          return this.component.querySelector(".".concat(targetClass));
        }
      }
    }
  }, {
    key: "open",
    value: function open(control) {
      var target = this.getTarget(control);
      control.classList.add('is-active');

      if (target) {
        target.classList.remove('is-off');
      }
    }
  }, {
    key: "close",
    value: function close(control) {
      var target = this.getTarget(control);
      control.classList.remove('is-active');

      if (target) {
        target.classList.add('is-off');
      }
    }
  }]);

  return Toggles;
}();



/***/ }),

/***/ "./static/src/javascripts/projects/common/modules/user-prefs.js":
/*!**********************************************************************!*\
  !*** ./static/src/javascripts/projects/common/modules/user-prefs.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lib_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lib/storage */ "./static/src/javascripts/lib/storage.js");

var storage = {
  local: lib_storage__WEBPACK_IMPORTED_MODULE_0__["local"],
  session: lib_storage__WEBPACK_IMPORTED_MODULE_0__["session"]
};
var storagePrefix = 'gu.prefs.';
var defaultOptions = {
  type: 'local'
};

var set = function set(name, value) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOptions,
      type = _ref.type;

  storage[type].set(storagePrefix + name, value);
};

var get = function get(name) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref2.type;

  return storage[type].get(storagePrefix + name);
};

var remove = function remove(name) {
  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref3.type;

  storage[type].remove(storagePrefix + name);
};

var switchOn = function switchOn(name) {
  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref4.type;

  storage[type].set("".concat(storagePrefix, "switch.").concat(name), true);
};

var switchOff = function switchOff(name) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref5.type;

  storage[type].set("".concat(storagePrefix, "switch.").concat(name), false);
};

var removeSwitch = function removeSwitch(name) {
  var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref6.type;

  storage[type].remove("".concat(storagePrefix, "switch.").concat(name));
};

var isOn = function isOn(name) {
  var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref7.type;

  return storage[type].get("".concat(storagePrefix, "switch.").concat(name)) === true;
};

var isOff = function isOff(name) {
  var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,
      type = _ref8.type;

  return storage[type].get("".concat(storagePrefix, "switch.").concat(name)) === false;
};

var isNumeric = function isNumeric(str) {
  return !Number.isNaN(str);
};

var isBoolean = function isBoolean(str) {
  return str === 'true' || str === 'false';
};

var setPrefs = function setPrefs(loc) {
  var qs = loc.hash.substr(1).split('&');
  var i;
  var j;

  for (i = 0, j = qs.length; i < j; i += 1) {
    var m = qs[i].match(/^gu\.prefs\.(.*)=(.*)$/);

    if (m) {
      var key = m[1];
      var val = m[2];
      var v = void 0;

      switch (key) {
        case 'switchOn':
          switchOn(val);
          break;

        case 'switchOff':
          switchOff(val);
          break;

        default:
          if (isNumeric(val)) {
            // +val casts any number (int, float) from a string
            v = +val;
          } else if (isBoolean(val)) {
            // String(val) === "true" converts a string to bool
            v = String(val).toLowerCase() === 'true';
          } else {
            v = val;
          }

          set(key, v);
      }
    }
  }
};

setPrefs(window.location);
/* harmony default export */ __webpack_exports__["default"] = ({
  set: set,
  get: get,
  remove: remove,
  switchOn: switchOn,
  switchOff: switchOff,
  removeSwitch: removeSwitch,
  isOn: isOn,
  isOff: isOff,
  setPrefs: setPrefs
});

/***/ }),

/***/ "./static/src/javascripts/projects/common/views/svg.js":
/*!*************************************************************!*\
  !*** ./static/src/javascripts/projects/common/views/svg.js ***!
  \*************************************************************/
/*! exports provided: addClassesAndTitle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClassesAndTitle", function() { return addClassesAndTitle; });
var addClassesAndTitle = function addClassesAndTitle(markup, classes, title) {
  // Only mess with classes if we actually need to.
  var markupWithClasses = markup;

  if (classes) {
    // #? Typchecking not needed anymore
    if (Array.isArray(classes)) {
      markupWithClasses = markupWithClasses.replace(/class="/, "class=\"".concat(classes.join(' '), " "));
    } else if (window.console && window.console.error) {
      // Some environments don't support or don't always expose the console object
      window.console.error("Classes for inlineSvg must be an array: ".concat(classes));
    }
  } // Only mess with title if we actually need to.


  var markupWithTitle = title ? markupWithClasses.replace(/<span /, "<span title=\"".concat(title, "\" ")) : markupWithClasses;
  return markupWithTitle;
};

/***/ }),

/***/ "./static/src/javascripts/projects/common/views/svgs.js":
/*!**************************************************************!*\
  !*** ./static/src/javascripts/projects/common/views/svgs.js ***!
  \**************************************************************/
/*! exports provided: inlineSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inlineSvg", function() { return inlineSvg; });
/* harmony import */ var svgs_icon_comment_16_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svgs/icon/comment-16.svg */ "./static/src/inline-svgs/icon/comment-16.svg");
/* harmony import */ var svgs_icon_comment_16_svg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_comment_16_svg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var svgs_icon_marque_36_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svgs/icon/marque-36.svg */ "./static/src/inline-svgs/icon/marque-36.svg");
/* harmony import */ var svgs_icon_marque_36_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_marque_36_svg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var svgs_icon_marque_54_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! svgs/icon/marque-54.svg */ "./static/src/inline-svgs/icon/marque-54.svg");
/* harmony import */ var svgs_icon_marque_54_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_marque_54_svg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var svgs_icon_market_down_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! svgs/icon/market-down.svg */ "./static/src/inline-svgs/icon/market-down.svg");
/* harmony import */ var svgs_icon_market_down_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_market_down_svg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var svgs_icon_market_up_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! svgs/icon/market-up.svg */ "./static/src/inline-svgs/icon/market-up.svg");
/* harmony import */ var svgs_icon_market_up_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_market_up_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var svgs_icon_market_same_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! svgs/icon/market-same.svg */ "./static/src/inline-svgs/icon/market-same.svg");
/* harmony import */ var svgs_icon_market_same_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_market_same_svg__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! svgs/icon/arrow.svg */ "./static/src/inline-svgs/icon/arrow.svg");
/* harmony import */ var svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! svgs/icon/arrow-down.svg */ "./static/src/inline-svgs/icon/arrow-down.svg");
/* harmony import */ var svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! svgs/icon/cross.svg */ "./static/src/inline-svgs/icon/cross.svg");
/* harmony import */ var svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var svgs_icon_quote_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! svgs/icon/quote.svg */ "./static/src/inline-svgs/icon/quote.svg");
/* harmony import */ var svgs_icon_quote_svg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_quote_svg__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var svgs_commercial_paid_content_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! svgs/commercial/paid-content.svg */ "./static/src/inline-svgs/commercial/paid-content.svg");
/* harmony import */ var svgs_commercial_paid_content_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(svgs_commercial_paid_content_svg__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! svgs/icon/close-central.svg */ "./static/src/inline-svgs/icon/close-central.svg");
/* harmony import */ var svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var svgs_icon_arrow_white_right_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! svgs/icon/arrow-white-right.svg */ "./static/src/inline-svgs/icon/arrow-white-right.svg");
/* harmony import */ var svgs_icon_arrow_white_right_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_white_right_svg__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var svgs_icon_arrow_right_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! svgs/icon/arrow-right.svg */ "./static/src/inline-svgs/icon/arrow-right.svg");
/* harmony import */ var svgs_icon_arrow_right_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_arrow_right_svg__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var svgs_icon_bookmark_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! svgs/icon/bookmark.svg */ "./static/src/inline-svgs/icon/bookmark.svg");
/* harmony import */ var svgs_icon_bookmark_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_bookmark_svg__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var svgs_icon_dropdown_mask_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! svgs/icon/dropdown-mask.svg */ "./static/src/inline-svgs/icon/dropdown-mask.svg");
/* harmony import */ var svgs_icon_dropdown_mask_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_dropdown_mask_svg__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var svgs_icon_comment_anchor_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! svgs/icon/comment-anchor.svg */ "./static/src/inline-svgs/icon/comment-anchor.svg");
/* harmony import */ var svgs_icon_comment_anchor_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_comment_anchor_svg__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var svgs_icon_reply_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! svgs/icon/reply.svg */ "./static/src/inline-svgs/icon/reply.svg");
/* harmony import */ var svgs_icon_reply_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_reply_svg__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var svgs_icon_expand_image_svg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! svgs/icon/expand-image.svg */ "./static/src/inline-svgs/icon/expand-image.svg");
/* harmony import */ var svgs_icon_expand_image_svg__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_expand_image_svg__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var svgs_icon_cursor_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! svgs/icon/cursor.svg */ "./static/src/inline-svgs/icon/cursor.svg");
/* harmony import */ var svgs_icon_cursor_svg__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_cursor_svg__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var svgs_icon_plus_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! svgs/icon/plus.svg */ "./static/src/inline-svgs/icon/plus.svg");
/* harmony import */ var svgs_icon_plus_svg__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_plus_svg__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var svgs_icon_share_svg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! svgs/icon/share.svg */ "./static/src/inline-svgs/icon/share.svg");
/* harmony import */ var svgs_icon_share_svg__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_svg__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var svgs_icon_share_twitter_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! svgs/icon/share-twitter.svg */ "./static/src/inline-svgs/icon/share-twitter.svg");
/* harmony import */ var svgs_icon_share_twitter_svg__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_twitter_svg__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var svgs_icon_share_email_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! svgs/icon/share-email.svg */ "./static/src/inline-svgs/icon/share-email.svg");
/* harmony import */ var svgs_icon_share_email_svg__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_email_svg__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var svgs_icon_share_facebook_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! svgs/icon/share-facebook.svg */ "./static/src/inline-svgs/icon/share-facebook.svg");
/* harmony import */ var svgs_icon_share_facebook_svg__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_facebook_svg__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var svgs_icon_share_pinterest_svg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! svgs/icon/share-pinterest.svg */ "./static/src/inline-svgs/icon/share-pinterest.svg");
/* harmony import */ var svgs_icon_share_pinterest_svg__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_pinterest_svg__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var svgs_icon_share_gplus_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! svgs/icon/share-gplus.svg */ "./static/src/inline-svgs/icon/share-gplus.svg");
/* harmony import */ var svgs_icon_share_gplus_svg__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_share_gplus_svg__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! svgs/icon/external-link.svg */ "./static/src/inline-svgs/icon/external-link.svg");
/* harmony import */ var svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var svgs_icon_tick_svg__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! svgs/icon/tick.svg */ "./static/src/inline-svgs/icon/tick.svg");
/* harmony import */ var svgs_icon_tick_svg__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_tick_svg__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var svgs_logo_glabs_logo_small_svg__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! svgs/logo/glabs-logo-small.svg */ "./static/src/inline-svgs/logo/glabs-logo-small.svg");
/* harmony import */ var svgs_logo_glabs_logo_small_svg__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(svgs_logo_glabs_logo_small_svg__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var svgs_commercial_logo_membership_svg__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! svgs/commercial/logo-membership.svg */ "./static/src/inline-svgs/commercial/logo-membership.svg");
/* harmony import */ var svgs_commercial_logo_membership_svg__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(svgs_commercial_logo_membership_svg__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var svgs_icon_star_svg__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! svgs/icon/star.svg */ "./static/src/inline-svgs/icon/star.svg");
/* harmony import */ var svgs_icon_star_svg__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_star_svg__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var svgs_icon_chevron_right_svg__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! svgs/icon/chevron-right.svg */ "./static/src/inline-svgs/icon/chevron-right.svg");
/* harmony import */ var svgs_icon_chevron_right_svg__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(svgs_icon_chevron_right_svg__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var common_views_svg__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! common/views/svg */ "./static/src/javascripts/projects/common/views/svg.js");
// DEPRECATED: please don't use this file to inject SVGs into your markup
// Instead load the SVGs directly into your JavaScript module
// If you must add a new SVG file here, please reflect this in:
// static/test/javascripts-legacy/helpers/svg-paths.js


































var svgs = {
  commentCount16icon: svgs_icon_comment_16_svg__WEBPACK_IMPORTED_MODULE_0___default.a,
  marque36icon: svgs_icon_marque_36_svg__WEBPACK_IMPORTED_MODULE_1___default.a,
  marque54icon: svgs_icon_marque_54_svg__WEBPACK_IMPORTED_MODULE_2___default.a,
  marketDownIcon: svgs_icon_market_down_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  marketUpIcon: svgs_icon_market_up_svg__WEBPACK_IMPORTED_MODULE_4___default.a,
  marketSameIcon: svgs_icon_market_same_svg__WEBPACK_IMPORTED_MODULE_5___default.a,
  arrowicon: svgs_icon_arrow_svg__WEBPACK_IMPORTED_MODULE_6___default.a,
  arrowdownicon: svgs_icon_arrow_down_svg__WEBPACK_IMPORTED_MODULE_7___default.a,
  crossIcon: svgs_icon_cross_svg__WEBPACK_IMPORTED_MODULE_8___default.a,
  quoteIcon: svgs_icon_quote_svg__WEBPACK_IMPORTED_MODULE_9___default.a,
  paidContent: svgs_commercial_paid_content_svg__WEBPACK_IMPORTED_MODULE_10___default.a,
  closeCentralIcon: svgs_icon_close_central_svg__WEBPACK_IMPORTED_MODULE_11___default.a,
  arrowWhiteRight: svgs_icon_arrow_white_right_svg__WEBPACK_IMPORTED_MODULE_12___default.a,
  arrowRight: svgs_icon_arrow_right_svg__WEBPACK_IMPORTED_MODULE_13___default.a,
  bookmark: svgs_icon_bookmark_svg__WEBPACK_IMPORTED_MODULE_14___default.a,
  dropdownMask: svgs_icon_dropdown_mask_svg__WEBPACK_IMPORTED_MODULE_15___default.a,
  commentAnchor: svgs_icon_comment_anchor_svg__WEBPACK_IMPORTED_MODULE_16___default.a,
  reply: svgs_icon_reply_svg__WEBPACK_IMPORTED_MODULE_17___default.a,
  expandImage: svgs_icon_expand_image_svg__WEBPACK_IMPORTED_MODULE_18___default.a,
  cursor: svgs_icon_cursor_svg__WEBPACK_IMPORTED_MODULE_19___default.a,
  plus: svgs_icon_plus_svg__WEBPACK_IMPORTED_MODULE_20___default.a,
  share: svgs_icon_share_svg__WEBPACK_IMPORTED_MODULE_21___default.a,
  shareTwitter: svgs_icon_share_twitter_svg__WEBPACK_IMPORTED_MODULE_22___default.a,
  shareEmail: svgs_icon_share_email_svg__WEBPACK_IMPORTED_MODULE_23___default.a,
  shareFacebook: svgs_icon_share_facebook_svg__WEBPACK_IMPORTED_MODULE_24___default.a,
  sharePinterest: svgs_icon_share_pinterest_svg__WEBPACK_IMPORTED_MODULE_25___default.a,
  shareGPlus: svgs_icon_share_gplus_svg__WEBPACK_IMPORTED_MODULE_26___default.a,
  externalLink: svgs_icon_external_link_svg__WEBPACK_IMPORTED_MODULE_27___default.a,
  tick: svgs_icon_tick_svg__WEBPACK_IMPORTED_MODULE_28___default.a,
  glabsLogoSmall: svgs_logo_glabs_logo_small_svg__WEBPACK_IMPORTED_MODULE_29___default.a,
  logomembership: svgs_commercial_logo_membership_svg__WEBPACK_IMPORTED_MODULE_30___default.a,
  star: svgs_icon_star_svg__WEBPACK_IMPORTED_MODULE_31___default.a,
  chevronRight: svgs_icon_chevron_right_svg__WEBPACK_IMPORTED_MODULE_32___default.a
};
var inlineSvg = function inlineSvg(name, classes, title) {
  return Object(common_views_svg__WEBPACK_IMPORTED_MODULE_33__["addClassesAndTitle"])(svgs[name].markup, classes, title);
};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,